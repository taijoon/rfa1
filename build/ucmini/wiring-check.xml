<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:YggdrasilAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x407fa010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40427078"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40427078"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40428c30"/></to>
    </wire>
    <wire loc="11:YggdrasilAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407fa358"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407c0470"/></to>
    </wire>
    <wire loc="12:YggdrasilAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40806780"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408180a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408180a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:YggdrasilAppC.nc">
      <from><interface-ref name="Serial" scoped="" ref="0x4081c340"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x40941180"/></to>
    </wire>
    <wire loc="20:./ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x40941180"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x4093aa38"/></to>
    </wire>
    <wire loc="23:YggdrasilAppC.nc">
      <from><interface-ref name="BaseControl" scoped="" ref="0x40810b40"/></from>
      <to><interface-ref name="BaseControl" scoped="" ref="0x40942388"/></to>
    </wire>
    <wire loc="17:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="BaseControl" scoped="" ref="0x40942388"/></from>
      <to><interface-ref name="BaseControl" scoped="" ref="0x409820f0"/></to>
    </wire>
    <wire loc="139:YggdrasilAppC.nc">
      <from><interface-ref name="DisseminateControl" scoped="" ref="0x4081c798"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41145188"/></to>
    </wire>
    <wire loc="16:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41145188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41141398"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41760628"/></to>
    </wire>
    <wire loc="63:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4170a9f0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416ba938"/></to>
    </wire>
    <wire loc="46:./net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415a3f10"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415b1040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415bc8a0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40db0878"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cf99a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x414daa68"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c5f178"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414aa960"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4142d380"/></to>
    </wire>
    <wire loc="141:./net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410ee5b0"/></to>
    </wire>
    <wire loc="166:./net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f19700"/></to>
    </wire>
    <wire loc="209:./net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fb9340"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x406be9f8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x406ba4c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40672398"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40589970"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404e8860"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x407d3010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4032cb58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4032cb58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403f8738"/></to>
    </wire>
    <wire loc="112:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d35d8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40db0218"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d35d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4041f508"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4041f508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40429a48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407d39e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042cd98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40455960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404255b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d8450"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40432238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404255b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x40429e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40424608"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40424608"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40445e00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40432608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40465010"/></to>
    </wire>
    <wire loc="40:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40465010"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40465850"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4153e698"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b6088"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4135c8c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4071b010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40442628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40424a10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404429d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x40424dc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x40442da0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044e240"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40442260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404555b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x4046bda0"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x40468688"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40468688"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40482c08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404691d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404788e0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404788e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x40469bd8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x404d4438"/></to>
    </wire>
    <wire loc="145:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40482c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4048d2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40485830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4048aea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404900a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40496830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404794b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40486c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4047d0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40483750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40488ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40470120"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40476750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4047cea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40480670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4048fea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404973d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4048ba98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4046e010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40474750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4048dee8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4047fc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404842f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404898e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40490a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40479ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404772f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4047da98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40482210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40487750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40470b18"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40475210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4047b8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4048e8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4047ace8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4048a4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40491670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40497dc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4046ea08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40486210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4047e670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40484ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404882f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4048f4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404736f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40477ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4047c4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4048c900"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4048b0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4047a2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4046f590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40475c88"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x404f2708"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40501758"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40501758"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x404fd010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x404f2dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40501d90"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40501d90"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x40475c88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404f4980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40589d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x404f0ab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x404f3388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x404fd010"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x405099b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40525eb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40504428"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40589d08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405ae0f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40534be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40552be8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40540010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058b310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40522100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405513a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40546010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058b9a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405516d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40589970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4059fd48"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40590840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40546548"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4058bed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40596c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4058a5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40596618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40712b78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40596c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4065d710"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40596618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4065d350"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4065dea0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405a7720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40590840"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4065ce50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40590840"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40655340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40590840"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065c3c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a8bd8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4065c898"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x405aa7f8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x405b4e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40659710"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x405b1760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40658608"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40658608"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40679328"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406629e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40658a88"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40658a88"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40679c18"/></to>
    </wire>
    <wire loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x405e67a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x405c2b28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x405e7010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e3428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x4065bdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4065a270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406778f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40679798"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40679798"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40672ae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40679c18"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40672f00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40679328"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406726d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406843f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40675c48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40675c48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fc490"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406acc88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406843f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x406837b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406c1688"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x406c1688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406bee48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40683be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406c1b98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x406c1b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406bb3a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x406ac050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406c00b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x406c00b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406bb8c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x406bf760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x406b8390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x406c0cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x406ba910"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x406bf268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x406bae40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406cb3e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042cd98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406cbb20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406cbb20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40dd7de8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40861010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407526f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406cb010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407166f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407143e8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407143e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4070f918"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4070eb60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40721b60"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40721b60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4071b448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407375f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40733878"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40733878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4074ca80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4074d1d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407546a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4073ff08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40748b98"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4073ff08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40745f10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4073ff08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40757320"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40752ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a3a38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407a3010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40596c20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407a36f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40596618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a6a28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x407b9218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407d8450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c0128"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407bf480"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407c2c20"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407c2c20"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x4048a4b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407bfe68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x407da660"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407da660"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x4048aea8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407be860"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x407d9060"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407d9060"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404898e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407bd2e0"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x407d9a48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407d9a48"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404882f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403f7010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403f7c68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40331498"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40917a60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408ff8d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40828900"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40828900"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413655a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4092de30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408f75d8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41361380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41368bd0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41368bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4135ccf8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x413620a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408cc7a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408cc7a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408c7d60"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4135a730"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40846358"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40846358"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408553a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x413a46e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4085e730"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x4085bac0"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40864010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085e730"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4086d4b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085e730"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4086b840"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085e730"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40868bd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40861400"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408b9128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b64c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x408b5658"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40846358"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408c4010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b9128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x408fc298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40929050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:./ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x40954278"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x4095a0a8"/></to>
    </wire>
    <wire loc="22:./ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x4095a580"/></from>
      <to><interface-ref name="OneWirePin" scoped="" ref="0x409407c0"/></to>
    </wire>
    <wire loc="14:./ds2411/PlatformOneWireLowLevelC.nc">
      <from><interface-ref name="OneWirePin" scoped="" ref="0x409407c0"/></from>
      <to><interface-ref name="OneWirePin" scoped="" ref="0x4094ad00"/></to>
    </wire>
    <wire loc="25:./ds2411/Ds2411C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409546a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="17:./ds2411/PlatformOneWireLowLevelC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40949720"/></from>
      <to><interface-ref name="SerialID" scoped="" ref="0x4094c460"/></to>
    </wire>
    <wire loc="9:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <from><interface-ref name="SerialID" scoped="" ref="0x4094c460"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></to>
    </wire>
    <wire loc="11:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <from><interface-ref name="PIR_IO" scoped="" ref="0x4095e900"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></to>
    </wire>
    <wire loc="12:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <from><interface-ref name="PIR2_IO" scoped="" ref="0x4095d3f8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></to>
    </wire>
    <wire loc="10:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <from><interface-ref name="PIR_Power" scoped="" ref="0x4094ce98"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></to>
    </wire>
    <wire loc="18:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4098b760"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409f3678"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409f3678"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409a5a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="37:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40982818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a2f980"/></to>
    </wire>
    <wire loc="38:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40981a28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a4b288"/></to>
    </wire>
    <wire loc="39:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40982ef8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="40:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x409815d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409e91c8"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409e91c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a11010"/></to>
    </wire>
    <wire loc="42:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409806d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4113e9e8"/></to>
    </wire>
    <wire loc="51:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4113e9e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41647c68"/></to>
    </wire>
    <wire loc="43:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x4097bd28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4112fbf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4112fbf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41690670"/></to>
    </wire>
    <wire loc="44:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40980e08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409e79c8"/>
      <arguments>
        <value cst="I:98">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="AckRev" scoped="" ref="0x4097f1f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:252">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="BaseRev" scoped="" ref="0x4097f5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="THRev" scoped="" ref="0x4097f978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:100">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="TH20Rev" scoped="" ref="0x4097fd40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="PIRRev" scoped="" ref="0x4097e118"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:101">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="POWRev" scoped="" ref="0x4097e4d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:104">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="MAXCO2Rev" scoped="" ref="0x4097d128"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:212">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="CO2Rev" scoped="" ref="0x4097e918"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:102">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="CO2S100Rev" scoped="" ref="0x4097ed00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="VOCSRev" scoped="" ref="0x4097d4f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:103">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="ThermoLoggerRev" scoped="" ref="0x4097c0f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:106">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="USRev" scoped="" ref="0x4097c4b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:105">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SPlugRev" scoped="" ref="0x4097c888"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:109">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SPlug2Rev" scoped="" ref="0x4097cc68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SOLARRev" scoped="" ref="0x4097d8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:201">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="ETYPERev" scoped="" ref="0x4097dca0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:211">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="MARKERRev" scoped="" ref="0x4097b090"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:108">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="DUMMYRev" scoped="" ref="0x4097b468"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:250">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40991538"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40a14738"/></to>
    </wire>
    <wire loc="58:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40a14738"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40a0a010"/></to>
    </wire>
    <wire loc="66:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="AMReceive" scoped="" ref="0x4097b948"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411553b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411553b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:./Sensor/99Base/BaseC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x409a4de8"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40b5fc28"/></to>
    </wire>
    <wire loc="74:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x4098c1e8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x411523d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x411523d0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416bace0"/></to>
    </wire>
    <wire loc="75:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x4098eee8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x4114f6c8"/></to>
    </wire>
    <wire loc="59:./Sensor/99Base/BaseP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x409a3480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:./Sensor/99Base/BaseP.nc">
      <from><interface-ref name="baseSendTask" scoped="" ref="0x409a3c88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:./net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40a0a010"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x410f06f8"/></to>
    </wire>
    <wire loc="53:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40a08060"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40a0e980"/></to>
    </wire>
    <wire loc="111:./net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40a0e980"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40f177e8"/></to>
    </wire>
    <wire loc="50:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40a045b0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40a0fed0"/></to>
    </wire>
    <wire loc="108:./net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40a0fed0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40f18db8"/></to>
    </wire>
    <wire loc="52:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a04908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a0e240"/></to>
    </wire>
    <wire loc="109:./net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a0e240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f17150"/></to>
    </wire>
    <wire loc="49:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x409e79c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a0f828"/></to>
    </wire>
    <wire loc="107:./net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40a0f828"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40f189f8"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409e98f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a11740"/></to>
    </wire>
    <wire loc="104:./net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a11740"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f19ea8"/></to>
    </wire>
    <wire loc="56:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40a16968"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40a0c278"/></to>
    </wire>
    <wire loc="156:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40a0c278"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x410f0bd0"/></to>
    </wire>
    <wire loc="48:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409e7318"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a0f178"/></to>
    </wire>
    <wire loc="106:./net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a0f178"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f18618"/></to>
    </wire>
    <wire loc="57:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40a142d0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40a27b38"/></to>
    </wire>
    <wire loc="113:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40a27b38"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40f4a010"/></to>
    </wire>
    <wire loc="63:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Talk" scoped="" ref="0x40a13640"/></from>
      <to><interface-ref name="Talk" scoped="" ref="0x40a0a518"/></to>
    </wire>
    <wire loc="211:./net/ctp/CtpP.nc">
      <from><interface-ref name="Talk" scoped="" ref="0x40a0a518"/></from>
      <to><interface-ref name="Talk" scoped="" ref="0x40f4a408"/></to>
    </wire>
    <wire loc="54:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x409fb4e8"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40a0d1b0"/></to>
    </wire>
    <wire loc="112:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40a0d1b0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40f4c010"/></to>
    </wire>
    <wire loc="105:./net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a11010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f19a18"/></to>
    </wire>
    <wire loc="138:./net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a11010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410ef850"/></to>
    </wire>
    <wire loc="139:./net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a11010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fbba98"/></to>
    </wire>
    <wire loc="60:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40a0ad58"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40a12628"/></to>
    </wire>
    <wire loc="181:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40a27178"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40fba9b8"/></to>
    </wire>
    <wire loc="110:./net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40f3cb40"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40a0ad58"/></to>
    </wire>
    <wire loc="117:./net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40f43958"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40f53e40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40f53e40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x415b13e8"/></to>
    </wire>
    <wire loc="118:./net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40f42ee0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40f33950"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40f33950"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x415bcc48"/></to>
    </wire>
    <wire loc="121:./net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40f46db0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40f4e278"/></to>
    </wire>
    <wire loc="124:./net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40f3f468"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40f73c48"/></to>
    </wire>
    <wire loc="44:./net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x40f73c48"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x415a12f8"/></to>
    </wire>
    <wire loc="129:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40f47708"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40fba9b8"/></to>
    </wire>
    <wire loc="142:./net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x410ee918"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fbbf20"/></to>
    </wire>
    <wire loc="143:./net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x410ec010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fba618"/></to>
    </wire>
    <wire loc="144:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x410ec328"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40fba9b8"/></to>
    </wire>
    <wire loc="146:./net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x410e5c68"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40fb5178"/></to>
    </wire>
    <wire loc="148:./net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410ecc60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="149:./net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x410eb870"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></to>
    </wire>
    <wire loc="150:./net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x410ebed8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f90680"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f90680"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:./net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x410e81b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f8c458"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f8c458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40f3d890"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x410f0bd0"/></to>
    </wire>
    <wire loc="155:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x410e5870"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40f4a010"/></to>
    </wire>
    <wire loc="160:./net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40f49538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4111d010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4111d010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:./net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x410e5478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cf47f0"/></to>
    </wire>
    <wire loc="164:./net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f3a9b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></to>
    </wire>
    <wire loc="167:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f4a850"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ff5280"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ff5280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415d9200"/></to>
    </wire>
    <wire loc="168:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f3d240"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41056758"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41056758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40f3d578"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4104f0f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4104f0f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a22190"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f46648"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ff5918"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ff5918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415d9898"/></to>
    </wire>
    <wire loc="171:./net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40f3c4d0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x410f06f8"/></to>
    </wire>
    <wire loc="172:./net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40f46070"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x410f0140"/></to>
    </wire>
    <wire loc="173:./net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40f3adc8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></to>
    </wire>
    <wire loc="174:./net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f4aee8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41059c08"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41059c08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x415d8c08"/></to>
    </wire>
    <wire loc="175:./net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f3ce68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41059010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41059010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415d8010"/></to>
    </wire>
    <wire loc="176:./net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f3ba50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="183:./net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40fb4948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></to>
    </wire>
    <wire loc="185:./net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fb5510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41117360"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41117360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4165b2e8"/></to>
    </wire>
    <wire loc="186:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40fb4220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411143b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411143b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40fb89f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x411179f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411179f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4165b980"/></to>
    </wire>
    <wire loc="188:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40fb5c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41116150"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41116150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4165a030"/></to>
    </wire>
    <wire loc="204:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40fb45f0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41111498"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a2f980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a59af8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40a1f898"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a2b988"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40a2b988"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a54b88"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a23120"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a2c2a8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a2c2a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a55470"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40a22190"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a2b310"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40a2b310"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a54510"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a4cb38"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a4cb38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40a52a70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a1ae58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a4a598"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a4a598"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a692e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a2cc68"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a2cc68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a55e30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a362a8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a3e478"/></to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a3e478"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a81260"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a20040"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a4a010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a4a010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a6acb0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a377a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a4abb8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a4abb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a69900"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a4b288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a53cf8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a35c58"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a5bea8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a5bea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a80d18"/></to>
    </wire>
    <wire loc="208:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a59af8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c90ba8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a414d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a62f08"/></to>
    </wire>
    <wire loc="297:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a62f08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40dc2b40"/></to>
    </wire>
    <wire loc="259:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a80d18"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d3f9c8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40a54b88"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40b53c28"/></to>
    </wire>
    <wire loc="127:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40a52a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b545b0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a55470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b54ce0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40a54510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40b53868"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a420f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a63ae8"/></to>
    </wire>
    <wire loc="295:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a63ae8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40dc37d8"/></to>
    </wire>
    <wire loc="209:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a692e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c88230"/></to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a55e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b53488"/></to>
    </wire>
    <wire loc="258:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a81260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d941b0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5c8a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5f678"/></to>
    </wire>
    <wire loc="299:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5f678"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40dbcb78"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a43ce0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a64730"/></to>
    </wire>
    <wire loc="296:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a64730"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40dbd3d8"/></to>
    </wire>
    <wire loc="240:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a6acb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d17e00"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40a4c100"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40a532a8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40a532a8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40b52030"/></to>
    </wire>
    <wire loc="188:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a69900"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c6f568"/></to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a53cf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b55940"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40a45660"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40a64040"/></to>
    </wire>
    <wire loc="217:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40a64040"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40caadf8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a3c638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a5f180"/></to>
    </wire>
    <wire loc="298:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a5f180"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40dbc680"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40a4c7e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40a53988"/></to>
    </wire>
    <wire loc="130:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40a53988"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40b52410"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c90ba8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c88838"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40dc2b40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40ddb010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40a500c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40bb3488"/></to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40a6b820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ba9420"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ba9420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4142c6b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40b53c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x41414ef0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b54ce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41414010"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40b53868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x41414b30"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40a669c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40c30170"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40c30170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41487c70"/></to>
    </wire>
    <wire loc="163:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40a6a538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ba53b0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40dc37d8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40daec40"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c88230"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41492148"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40b545b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41415850"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b53488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41414750"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d941b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x415270c0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40dbcb78"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e568b0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40dbd3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40dd87e0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40a6e458"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40ba5a48"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40b52030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x414132e8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c6f568"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40c94910"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40caadf8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x414d9648"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b55940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41416c40"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d3f9c8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414de8c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40a6ebe8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40bb3170"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40dbc680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40dd7a28"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40b52410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x414136c8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a9bd18"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c32658"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c32658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x414882b8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a962b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ace108"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ab6ef0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d941b0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x40ab6528"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40dc4e20"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40dc4e20"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40dae2a0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ace9c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40dbb618"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40dbb618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e6fea8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b51768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40a862d0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b52f20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40b73538"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b51430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40bdf748"/></to>
    </wire>
    <wire loc="120:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b52788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40bdfa80"/></to>
    </wire>
    <wire loc="138:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b72010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ba9420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b73a60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40bdf250"/></to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40bb37d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c32658"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bb19e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40bd4228"/></to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb1ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40bd4720"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40bb1250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40bd4a58"/></to>
    </wire>
    <wire loc="170:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bde280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c55388"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c55388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414aa090"/></to>
    </wire>
    <wire loc="171:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bde778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c6f250"/></to>
    </wire>
    <wire loc="114:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c6f250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c95938"/></to>
    </wire>
    <wire loc="172:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40bdeab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c30b88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c30b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41486698"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c2f368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c6fc00"/></to>
    </wire>
    <wire loc="115:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c6fc00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c95c70"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c72668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40a79010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c55ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c70d38"/></to>
    </wire>
    <wire loc="113:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c70d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c95440"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c943f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d17e00"/></to>
    </wire>
    <wire loc="190:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c95440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c8f250"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c8f250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c88e10"/></to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c95938"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c8f748"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c8f748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cae330"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c95c70"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c8fa60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c8fa60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40cae668"/></to>
    </wire>
    <wire loc="204:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c88838"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40caa010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40caa010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x414da490"/></to>
    </wire>
    <wire loc="205:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c88e10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40caa5e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40caa5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414dada0"/></to>
    </wire>
    <wire loc="206:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cae330"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40caaae0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40caaae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x414d9330"/></to>
    </wire>
    <wire loc="207:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40cae668"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d92830"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d92830"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x415267b8"/></to>
    </wire>
    <wire loc="214:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cc5ab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cef898"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cef898"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x414b8580"/></to>
    </wire>
    <wire loc="215:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cf1010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c55860"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c55860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414aa568"/></to>
    </wire>
    <wire loc="216:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40cc5340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40da8328"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40da8328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40da41b0"/></to>
    </wire>
    <wire loc="221:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c72250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cefd70"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cefd70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414b8a58"/></to>
    </wire>
    <wire loc="230:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d1a250"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40a8fe28"/></to>
    </wire>
    <wire loc="231:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cee280"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d17530"/></to>
    </wire>
    <wire loc="232:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cee778"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d17a08"/></to>
    </wire>
    <wire loc="233:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ceeb70"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ace108"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="238:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40d2bc88"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40daadb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="239:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40d2cc50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ace108"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="241:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d2b330"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40a727e8"/></to>
    </wire>
    <wire loc="242:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d2c360"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d48620"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d48620"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d454f0"/></to>
    </wire>
    <wire loc="243:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d2c858"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d48af8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d48af8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d459e8"/></to>
    </wire>
    <wire loc="248:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d449e8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40a85240"/></to>
    </wire>
    <wire loc="249:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d454f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40da8aa0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40da8aa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40da49c8"/></to>
    </wire>
    <wire loc="250:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d459e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40da7010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40da7010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40da4ec0"/></to>
    </wire>
    <wire loc="251:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40d45e00"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40dc49b8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40dc49b8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40dafdf8"/></to>
    </wire>
    <wire loc="256:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d910c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40dbcb78"/></to>
    </wire>
    <wire loc="257:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d91938"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d8d3f0"/></to>
    </wire>
    <wire loc="260:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40d90170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40daadb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="265:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d8dbb8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40dc4e20"/></to>
    </wire>
    <wire loc="275:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40da3eb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40a85240"/></to>
    </wire>
    <wire loc="276:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40da49c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d9e010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d9e010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d9bec0"/></to>
    </wire>
    <wire loc="277:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40da4ec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40dc4568"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40dc4568"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40daf9a8"/></to>
    </wire>
    <wire loc="278:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40da41b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d9f800"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d9f800"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40d9b6a8"/></to>
    </wire>
    <wire loc="287:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40d9b6a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d97760"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d97760"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40db0bf8"/></to>
    </wire>
    <wire loc="288:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d9bec0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40dc4010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40dc4010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40daf450"/></to>
    </wire>
    <wire loc="293:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40db8168"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40a77640"/></to>
    </wire>
    <wire loc="294:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40db89f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d941b0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40db5280"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40daadb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40db5918"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40daadb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="303:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40db4010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40daadb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ace108"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x413d4838"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x413d3058"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ace9c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x413d1a50"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40b01a78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x414103f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b3dd58"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41413a40"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b52788"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41412250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b52f20"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41412748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b51430"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41412a80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b51768"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ba9b60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4142cdf8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ba8010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4142b230"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4142b6f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ba84c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4142bb18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4142d6b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4142a190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41486e40"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b3dd58"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41485450"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c2f368"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x414a9c00"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40c64540"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40c64540"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40c5f510"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x414a7310"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x414a6738"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x414a6738"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40c5e010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x414aacc8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c55ca8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x414a9250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c72250"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x414a9648"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c72668"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40c93010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c943f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x414d9b50"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40cc5340"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x414d8310"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40b01a78"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x414d88c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cc5ab8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x414d8da0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cf1010"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x414d76a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x414d7ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x414d7270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x414b8ea0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cee280"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x415032b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d1a250"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x414b73e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cee778"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x414b77d8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ceeb70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x414b7e70"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x415038a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40cf6480"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40cf9ec8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40cfa1b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cf99a8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d250e8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40d47e00"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40d48ef0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40d45e00"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d25e90"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40d46c40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d47300"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d44250"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d47a98"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d449e8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40d25b78"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40d46908"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40d256a0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40d46410"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41523888"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d91938"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41524678"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d910c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x41523010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40d71aa8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40d71aa8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40d67e70"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41524010"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40d90170"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d6c828"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408cc7a0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40da9548"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40da5378"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40da7408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40da3300"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40da7800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40da3718"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40da5010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40da3eb0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40da8010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40da5e48"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40da9b00"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40da5950"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40da0a40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40d9c858"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40d9e8e0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40d9a7f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d9ecd8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d9ac10"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d9c4f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d99410"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d9e4e8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d9a3e0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40d9f4e8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40d9b370"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40d9f010"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40d9ce30"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e6fea8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4153ead0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40dbf010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40dda3f8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40e568b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e73cc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40dd09d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40db8168"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40dcf0e0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40db5280"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40dcf778"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40db5918"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40dcfe38"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40db4010"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40dce680"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40db89f0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40dd2f10"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e568b0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40dd4980"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4085bac0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40dcdd38"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40b01a78"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40dd2458"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40db2998"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40db2998"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40e51030"/></to>
    </wire>
    <wire loc="116:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40dcc398"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e51af8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e469f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e45cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40721b60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e72680"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b9128"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4153b558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40846358"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41539550"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4085e730"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:./net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40f39430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:./net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x415f0080"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40a0d1b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x415d9200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415d58a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x415d9898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415d8010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x415d8c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a20040"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x415d1010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410184c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415d16a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410184c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410633d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41063b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a23120"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41062230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41062e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x41060510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x41060948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41056a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41052150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4104f410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4104faa8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="245:./net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x410e4448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="354:./net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x410e4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4165b2e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41656998"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4165b980"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4165a030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41116d48"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4165ac28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4165ac28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a20040"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41653080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410184c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41653718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411146d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41114d68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="52:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4113d150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41644318"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41644318"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a04908"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41647c68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409e98f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40a12628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x41694420"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4115d310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40540010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4115d9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4115c5d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40546010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41690d38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4112ab68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4168f3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4112ab68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41125280"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411259f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40534be0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41124150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41124d28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40540010"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x41123430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x41123868"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411556d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41155d68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="23:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x41179328"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="24:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x4117eed0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4119be38"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4119be38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40522100"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x4117e9e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41191a18"/></to>
    </wire>
    <wire loc="51:./net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41191a18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411905a0"/></to>
    </wire>
    <wire loc="29:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="CommandValue" scoped="" ref="0x4117df20"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x412543d8"/></to>
    </wire>
    <wire loc="59:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x412543d8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x416c8808"/></to>
    </wire>
    <wire loc="30:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="CommandUpdate" scoped="" ref="0x4117aed8"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x412532d0"/></to>
    </wire>
    <wire loc="60:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x412532d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x416c7650"/></to>
    </wire>
    <wire loc="33:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RunCommand" scoped="" ref="0x411762d8"/></from>
      <to><interface-ref name="RunCommand" scoped="" ref="0x41252d18"/></to>
    </wire>
    <wire loc="10:./Command/RunCommandC.nc">
      <from><interface-ref name="RunCommand" scoped="" ref="0x41252d18"/></from>
      <to><interface-ref name="RunCommand" scoped="" ref="0x4124cc88"/></to>
    </wire>
    <wire loc="34:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RunCommandControl" scoped="" ref="0x41176728"/></from>
      <to><interface-ref name="RunCommandControl" scoped="" ref="0x4124f198"/></to>
    </wire>
    <wire loc="11:./Command/RunCommandC.nc">
      <from><interface-ref name="RunCommandControl" scoped="" ref="0x4124f198"/></from>
      <to><interface-ref name="RunCommandControl" scoped="" ref="0x4124c828"/></to>
    </wire>
    <wire loc="38:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41176b50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="44:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x41177350"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></to>
    </wire>
    <wire loc="45:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x41177a20"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409e91c8"/></to>
    </wire>
    <wire loc="46:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41178ac0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412be468"/></to>
    </wire>
    <wire loc="51:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x412be468"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4174f7a0"/></to>
    </wire>
    <wire loc="49:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41177f20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x412bc768"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x412bc768"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:./SerialToDis/SerialToDisseminationP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41170540"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41197190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40540010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41197828"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="58:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x411905a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41188ca8"/></to>
    </wire>
    <wire loc="59:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41183530"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x4118d2d0"/></to>
    </wire>
    <wire loc="60:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41182100"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41186690"/></to>
    </wire>
    <wire loc="61:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41182bd0"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x41188178"/></to>
    </wire>
    <wire loc="64:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41181040"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411849c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411849c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416a1358"/></to>
    </wire>
    <wire loc="67:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41181720"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411d0db8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411d0db8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x41181b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411cd958"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411cd958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416de200"/></to>
    </wire>
    <wire loc="74:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x41180318"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411cae90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411cae90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41180660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x416a1358"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4169de88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411d2070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416a19f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x416a19f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411d2708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x416a0150"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416a0150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411d1330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x416a0d48"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x416a0d48"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a20040"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4169a560"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410184c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4169abf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411cf150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411cf7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x416de200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416d9da0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411cc010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416de898"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x416de898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411cc6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x416dd010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416dd010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411cb330"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x416ddc08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x416ddc08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a20040"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416d6500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410184c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416d6b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411c91c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411c9858"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></to>
    </wire>
    <wire loc="63:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x4118d2d0"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x416c5010"/></to>
    </wire>
    <wire loc="64:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41188178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x416c8360"/></to>
    </wire>
    <wire loc="67:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41186690"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411e7a90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x416c57a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="62:./net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x416c4750"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:./net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411e7a90"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41255048"/></to>
    </wire>
    <wire loc="55:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41255048"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4170ada0"/></to>
    </wire>
    <wire loc="57:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41709590"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41702ab8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41702ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41706aa8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></to>
    </wire>
    <wire loc="59:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x41706170"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x416fd348"/></to>
    </wire>
    <wire loc="60:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x41707778"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x416ffb38"/></to>
    </wire>
    <wire loc="62:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41706ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="146:./net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x41704e20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:./Command/RunCommandC.nc">
      <from><interface-ref name="RealExeControl" scoped="" ref="0x4124b110"/></from>
      <to><interface-ref name="RealExeControl" scoped="" ref="0x41284628"/></to>
    </wire>
    <wire loc="11:./Command/RealExeC.nc">
      <from><interface-ref name="RealExeControl" scoped="" ref="0x41284628"/></from>
      <to><interface-ref name="RealExeControl" scoped="" ref="0x41280428"/></to>
    </wire>
    <wire loc="15:./Command/RunCommandC.nc">
      <from><interface-ref name="Execute" scoped="" ref="0x4124a010"/></from>
      <to><interface-ref name="Execute" scoped="" ref="0x4124ee50"/></to>
    </wire>
    <wire loc="10:./Command/RealExeC.nc">
      <from><interface-ref name="Execute" scoped="" ref="0x4124ee50"/></from>
      <to><interface-ref name="Execute" scoped="" ref="0x41281bc8"/></to>
    </wire>
    <wire loc="19:./Command/RunCommandC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4124a6d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="14:./Command/RealExeC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41278648"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4128fea8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4128fea8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:./Command/RealExeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41280890"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="21:./Command/RealExeC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x41275b90"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40db2998"/></to>
    </wire>
    <wire loc="28:./Command/RealExeC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4127f940"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></to>
    </wire>
    <wire loc="29:./Command/RealExeC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x4127e030"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409e91c8"/></to>
    </wire>
    <wire loc="30:./Command/RealExeC.nc">
      <from><interface-ref name="ResponseSend" scoped="" ref="0x4127e4f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4128ace8"/></to>
    </wire>
    <wire loc="51:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4128ace8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4171d7c8"/></to>
    </wire>
    <wire loc="31:./Command/RealExeC.nc">
      <from><interface-ref name="ResponseReceive" scoped="" ref="0x4127ec90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e7318"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:./Command/RealExeC.nc">
      <from><interface-ref name="ResponseSnoop" scoped="" ref="0x4127d0b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409e79c8"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:./Command/RealExeC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4127d508"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="39:./Command/RealExeC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x4127db88"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41287a60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41287a60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417151f0"/></to>
    </wire>
    <wire loc="45:./Command/RealExeC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x412790c8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x412c7278"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x412c7278"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x417609d0"/></to>
    </wire>
    <wire loc="46:./Command/RealExeC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x4127c400"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x412c4638"/></to>
    </wire>
    <wire loc="60:./Command/RealExeP.nc">
      <from><interface-ref name="sendPing" scoped="" ref="0x4126db30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:./Command/RealExeP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x41269718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x412893f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4171de60"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4171de60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a04908"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4171d7c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409e98f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40a12628"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x4171bf10"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41286150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40540010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x412867e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41285410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40546010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x417158b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4112ab68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4176a010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="52:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x412beb00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4174fe38"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4174fe38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a04908"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4174f7a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409e98f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40a12628"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x4174df20"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="YggdrasilC" loc="6:YggdrasilC.nc" safe="">
      <module/>
    </component>
    <component qname="YggdrasilAppC.TimerMilliC" loc="44(YggdrasilAppC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411C" loc="11:./ds2411/Ds2411C.nc">
      <documentation loc="5:./ds2411/Ds2411C.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="11:./ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="PlatformOneWireLowLevelC" loc="9:./ds2411/PlatformOneWireLowLevelC.nc">
      <documentation loc="5:./ds2411/PlatformOneWireLowLevelC.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformOneWireLowLevelP" loc="11:./ds2411/PlatformOneWireLowLevelP.nc">
      <documentation loc="105:./ds2411/iostructures.h">
        <short>**************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformIOC" loc="1:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <configuration/>
    </component>
    <component qname="OneWireMasterC" loc="7:./ds2411/OneWireMasterC.nc">
      <documentation loc="2:./ds2411/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="BaseC" loc="4:./Sensor/99Base/BaseC.nc">
      <configuration/>
    </component>
    <component qname="BaseP" loc="8:./Sensor/99Base/BaseP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseC.TimerMilliC" loc="44(BaseC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC_sonno" loc="19:./net/ctp/CollectionC_sonno.nc">
      <documentation loc="8:./net/ctp/CollectionC_sonno.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="66:./net/ctp/CtpP.nc">
      <documentation loc="55:./net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):./net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f34368"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f34368"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:15">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):./net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):./net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="34:./net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="96(CtpP.Router):./net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="27:./net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010/02/04 07:31:46 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5120">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyActiveMessageP" loc="1:./net/ctp/DummyActiveMessageP.nc">
      <module/>
    </component>
    <component qname="BaseC.CollectionSenderC_sonno" loc="43(BaseC.CollectionSenderC_sonno):./net/ctp/CollectionSenderC_sonno.nc">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC_sonno"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.CollectionSenderC_sonno.CollectionSenderP" loc="34(BaseC.CollectionSenderC_sonno.CollectionSenderP):./net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP" loc="45(BaseC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP):./net/CollectionIdP.nc">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC.SerialAMSenderC" loc="47(BaseC.SerialAMSenderC):/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.SerialAMSenderC.AMQueueEntryP" loc="43(BaseC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC.AMReceiverC" loc="43(BaseC.AMReceiverC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.UARTMessagePoolP" loc="41(BaseC.UARTMessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.UARTMessagePoolP.PoolP" loc="53(BaseC.UARTMessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f34368"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC.UARTQueueP" loc="42(BaseC.UARTQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialToDisseminationC" loc="9:./SerialToDis/SerialToDisseminationC.nc">
      <documentation loc="1:./SerialToDis/SerialToDisseminationC.nc">
        <short>&#10; Command message disseminate other deployed nodes from serial command message.</short>
        <long>&#10; Command message disseminate other deployed nodes from serial command message.&#10;&#10;&#10; @author Dongik Kim &#60;sprit21c@gmail.com>&#10; @version $Revision: 0.1 $ $Date: 2011/06/26 &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationP" loc="11:./SerialToDis/SerialToDisseminationP.nc">
      <module/>
    </component>
    <component qname="SerialToDisseminationC.SerialAMReceiverC" loc="43(SerialToDisseminationC.SerialAMReceiverC):/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationC" loc="46:./net/drip/DisseminationC.nc">
      <documentation loc="35:./net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:./net/drip/DisseminationEngineP.nc">
      <documentation loc="35:./net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:./net/drip/DisseminationEngineImplP.nc">
      <documentation loc="35:./net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.Object32C" loc="49(SerialToDisseminationC.Object32C):./net/drip/DisseminatorC.nc">
      <documentation loc="35:./net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
          <value cst="I:4660">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.Object32C.DisseminatorP" loc="45(SerialToDisseminationC.Object32C.DisseminatorP):./net/drip/DisseminatorP.nc">
      <documentation loc="33:./net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41194480"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:./net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):./net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):./net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RunCommandC" loc="1:./Command/RunCommandC.nc">
      <configuration/>
    </component>
    <component qname="RunCommandP" loc="3:./Command/RunCommandP.nc">
      <module/>
    </component>
    <component qname="RealExeC" loc="1:./Command/RealExeC.nc">
      <configuration/>
    </component>
    <component qname="RealExeP" loc="3:./Command/RealExeP.nc">
      <module/>
    </component>
    <component qname="RealExeC.TimerMilliC" loc="44(RealExeC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.CollectionSenderC_sonno" loc="43(RealExeC.CollectionSenderC_sonno):./net/ctp/CollectionSenderC_sonno.nc">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CollectionSenderC_sonno"/>
        <arguments>
          <value cst="I:137">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP" loc="34(RealExeC.CollectionSenderC_sonno.CollectionSenderP):./net/ctp/CollectionSenderP.nc">
      <instance number="1">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP" loc="45(RealExeC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP):./net/CollectionIdP.nc">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealExeC.SerialAMSenderC" loc="47(RealExeC.SerialAMSenderC):/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:137">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.SerialAMSenderC.AMQueueEntryP" loc="43(RealExeC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealExeC.UARTMessagePoolP" loc="41(RealExeC.UARTMessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.UARTMessagePoolP.PoolP" loc="53(RealExeC.UARTMessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f34368"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealExeC.UARTQueueP" loc="42(RealExeC.UARTQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialToDisseminationC.CollectionSenderC_sonno" loc="43(SerialToDisseminationC.CollectionSenderC_sonno):./net/ctp/CollectionSenderC_sonno.nc">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CollectionSenderC_sonno"/>
        <arguments>
          <value cst="I:252">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP" loc="34(SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP):./net/ctp/CollectionSenderP.nc">
      <instance number="2">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP" loc="45(SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP):./net/CollectionIdP.nc">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialToDisseminationC.TimerMilliC" loc="44(SerialToDisseminationC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x40494558" loc="36:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40494780" loc="37:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404949a8" loc="38:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406fdca8" loc="55:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406fdca8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406f8148" loc="56:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406f8148"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406f83b0" loc="57:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406f83b0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406f8820" loc="58:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406f8820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406f8a88" loc="59:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406f8f10" loc="60:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406f8f10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4071d6f8" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4071d6f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4071db28" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071db28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4071dd18" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40834410" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40834410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40834840" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40834840"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40834a30" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40834c38" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408dd158" loc="52:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408dd158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408dd5b8" loc="53:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408dd5b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408dd820" loc="54:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408dd820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408ddc90" loc="55:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408ddc90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408ddef8" loc="56:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408f6138" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408f6138"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40919b40" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40919b40"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40919d20" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40b664c0" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40b85228" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d6ed90" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d6ed90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40e52d70" loc="51:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40e52d70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40e4f1b8" loc="51:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40e4f1b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:./net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40f34368" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f34368"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40f34588" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40f65880" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f65880"/></type-var>
        </typedef>
        <constant name="size" ref="0x40f65a70" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40f4f380" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40f4f380"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40f4f5a8" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:./net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40f75a88" loc="38:./net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:./net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40f714f0" loc="43:./net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40f89b48" loc="47:/opt/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4102c758" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x410252c8" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x410179c0" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x41055010" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x410519b8" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="96:./net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="27:./net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010/02/04 07:31:46 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x41080a28" loc="96:./net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x41080c68" loc="96:./net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x41080ea8" loc="96:./net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC_sonno" loc="43:./net/ctp/CollectionSenderC_sonno.nc" abstract="">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x4113feb8" loc="43:./net/ctp/CollectionSenderC_sonno.nc">
          <component-ref qname="CollectionSenderC_sonno"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:./net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x4113b990" loc="35:./net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x4113bba8" loc="35:./net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:./net/CollectionIdP.nc" abstract="">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x41137628" loc="45:./net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41131590" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x4119c830" loc="43:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:./net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:./net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41194480" loc="49:./net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41194480"/></type-var>
        </typedef>
        <constant name="key" ref="0x41194670" loc="49:./net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:./net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:./net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411bf0c0" loc="45:./net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411bf0c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:./net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411e4c48" loc="43:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411e4e58" loc="44:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411e1068" loc="45:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x411e1270" loc="46:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:./net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411df7b8" loc="43:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411df9c8" loc="44:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411dfba8" loc="45:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x411dfdb0" loc="46:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x4121e010" loc="47:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x41227340" loc="44:/opt/tinyos/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40427d18" loc="58:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40427ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40427078" loc="57:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40427078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40427250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4041f508" loc="39:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4041f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4042cd98" loc="40:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40425010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404250f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404251d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404252b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404255b8" loc="43:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404255b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40425790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40429a48" loc="39:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40429a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40429c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40432608" loc="45:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40432608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404327e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40432238" loc="44:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40432238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40432410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x40429e38" loc="43:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x40429e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40432050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40424608" loc="37:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40424608"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404247e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x40424dc0" loc="42:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x40424dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40437010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40424a10" loc="41:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40424a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40424be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x40442da0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x40442da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40445e00" loc="38:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40445e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404429d8" loc="44:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404429d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40442260" loc="42:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40442260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40442628" loc="43:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40442628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404555b0" loc="60:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404555b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40455788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40455960" loc="61:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40455960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40455b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40455c18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40455cf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40455dd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40455eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x4044e240" loc="35:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044e418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40465010" loc="36:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40465010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404651e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x4046bda0" loc="38:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x4046bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462010"/>
        <function-ref name="isInput" scoped="" ref="0x404620f0"/>
        <function-ref name="toggle" scoped="" ref="0x404621d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404622b0"/>
        <function-ref name="get" scoped="" ref="0x40462390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462470"/>
        <function-ref name="set" scoped="" ref="0x40462550"/>
        <function-ref name="clr" scoped="" ref="0x40462630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40465850" loc="36:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40465850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40465a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404691d0" loc="42:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404691d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404693a8"/>
        <function-ref name="isInput" scoped="" ref="0x40469488"/>
        <function-ref name="toggle" scoped="" ref="0x40469568"/>
        <function-ref name="isOutput" scoped="" ref="0x40469648"/>
        <function-ref name="get" scoped="" ref="0x40469728"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469808"/>
        <function-ref name="set" scoped="" ref="0x404698e8"/>
        <function-ref name="clr" scoped="" ref="0x404699c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x40469bd8" loc="43:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x40469bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469db0"/>
        <function-ref name="isInput" scoped="" ref="0x40469e90"/>
        <function-ref name="toggle" scoped="" ref="0x40468010"/>
        <function-ref name="isOutput" scoped="" ref="0x404680f0"/>
        <function-ref name="get" scoped="" ref="0x404681d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404682b0"/>
        <function-ref name="set" scoped="" ref="0x40468390"/>
        <function-ref name="clr" scoped="" ref="0x40468470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x40468688" loc="45:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40468688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468860"/>
        <function-ref name="isInput" scoped="" ref="0x40468940"/>
        <function-ref name="toggle" scoped="" ref="0x40468a20"/>
        <function-ref name="isOutput" scoped="" ref="0x40468b00"/>
        <function-ref name="get" scoped="" ref="0x40468be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468cc0"/>
        <function-ref name="set" scoped="" ref="0x40468da0"/>
        <function-ref name="clr" scoped="" ref="0x40468e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4048d2f0" loc="93:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4048d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4048d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d968"/>
        <function-ref name="get" scoped="" ref="0x4048da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048db28"/>
        <function-ref name="set" scoped="" ref="0x4048dc08"/>
        <function-ref name="clr" scoped="" ref="0x4048dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40485830" loc="67:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40485830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485a08"/>
        <function-ref name="isInput" scoped="" ref="0x40485ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40485bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40485ca8"/>
        <function-ref name="get" scoped="" ref="0x40485d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485e68"/>
        <function-ref name="set" scoped="" ref="0x40484010"/>
        <function-ref name="clr" scoped="" ref="0x404840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4048aea8" loc="78:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4048aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404890c0"/>
        <function-ref name="isInput" scoped="" ref="0x404891a0"/>
        <function-ref name="toggle" scoped="" ref="0x40489280"/>
        <function-ref name="isOutput" scoped="" ref="0x40489360"/>
        <function-ref name="get" scoped="" ref="0x40489440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489520"/>
        <function-ref name="set" scoped="" ref="0x40489600"/>
        <function-ref name="clr" scoped="" ref="0x404896e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404900a0" loc="87:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490278"/>
        <function-ref name="isInput" scoped="" ref="0x40490358"/>
        <function-ref name="toggle" scoped="" ref="0x40490438"/>
        <function-ref name="isOutput" scoped="" ref="0x40490518"/>
        <function-ref name="get" scoped="" ref="0x404905f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404906d8"/>
        <function-ref name="set" scoped="" ref="0x404907b8"/>
        <function-ref name="clr" scoped="" ref="0x40490898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40496830" loc="98:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40496830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496a08"/>
        <function-ref name="isInput" scoped="" ref="0x40496ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40496bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40496ca8"/>
        <function-ref name="get" scoped="" ref="0x40496d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496e68"/>
        <function-ref name="set" scoped="" ref="0x40495010"/>
        <function-ref name="clr" scoped="" ref="0x404950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404794b0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404794b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479688"/>
        <function-ref name="isInput" scoped="" ref="0x40479768"/>
        <function-ref name="toggle" scoped="" ref="0x40479848"/>
        <function-ref name="isOutput" scoped="" ref="0x40479928"/>
        <function-ref name="get" scoped="" ref="0x40479a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479ae8"/>
        <function-ref name="set" scoped="" ref="0x40479bc8"/>
        <function-ref name="clr" scoped="" ref="0x40479ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40486c08" loc="85:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40486c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486de0"/>
        <function-ref name="isInput" scoped="" ref="0x40486ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40491010"/>
        <function-ref name="isOutput" scoped="" ref="0x404910f0"/>
        <function-ref name="get" scoped="" ref="0x404911d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404912b0"/>
        <function-ref name="set" scoped="" ref="0x40491390"/>
        <function-ref name="clr" scoped="" ref="0x40491470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404788e0" loc="48:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404788e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40478b98"/>
        <function-ref name="toggle" scoped="" ref="0x40478c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40478d58"/>
        <function-ref name="get" scoped="" ref="0x40478e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478f18"/>
        <function-ref name="set" scoped="" ref="0x40477010"/>
        <function-ref name="clr" scoped="" ref="0x404770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4047d0a0" loc="59:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4047d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d278"/>
        <function-ref name="isInput" scoped="" ref="0x4047d358"/>
        <function-ref name="toggle" scoped="" ref="0x4047d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d518"/>
        <function-ref name="get" scoped="" ref="0x4047d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d6d8"/>
        <function-ref name="set" scoped="" ref="0x4047d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4047d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40483750" loc="70:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40483750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483928"/>
        <function-ref name="isInput" scoped="" ref="0x40483a08"/>
        <function-ref name="toggle" scoped="" ref="0x40483ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40483bc8"/>
        <function-ref name="get" scoped="" ref="0x40483ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483d88"/>
        <function-ref name="set" scoped="" ref="0x40483e68"/>
        <function-ref name="clr" scoped="" ref="0x40482010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40488ce8" loc="81:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40488ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40487010"/>
        <function-ref name="toggle" scoped="" ref="0x404870f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404871d0"/>
        <function-ref name="get" scoped="" ref="0x404872b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487390"/>
        <function-ref name="set" scoped="" ref="0x40487470"/>
        <function-ref name="clr" scoped="" ref="0x40487550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40470120" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40470120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404702f8"/>
        <function-ref name="isInput" scoped="" ref="0x404703d8"/>
        <function-ref name="toggle" scoped="" ref="0x404704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40470598"/>
        <function-ref name="get" scoped="" ref="0x40470678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470758"/>
        <function-ref name="set" scoped="" ref="0x40470838"/>
        <function-ref name="clr" scoped="" ref="0x40470918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40476750" loc="51:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40476750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476928"/>
        <function-ref name="isInput" scoped="" ref="0x40476a08"/>
        <function-ref name="toggle" scoped="" ref="0x40476ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40476bc8"/>
        <function-ref name="get" scoped="" ref="0x40476ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476d88"/>
        <function-ref name="set" scoped="" ref="0x40476e68"/>
        <function-ref name="clr" scoped="" ref="0x40475010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4047cea8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4047cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4047b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b360"/>
        <function-ref name="get" scoped="" ref="0x4047b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b520"/>
        <function-ref name="set" scoped="" ref="0x4047b600"/>
        <function-ref name="clr" scoped="" ref="0x4047b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40480670" loc="73:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40480670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480848"/>
        <function-ref name="isInput" scoped="" ref="0x40480928"/>
        <function-ref name="toggle" scoped="" ref="0x40480a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40480ae8"/>
        <function-ref name="get" scoped="" ref="0x40480bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480ca8"/>
        <function-ref name="set" scoped="" ref="0x40480d88"/>
        <function-ref name="clr" scoped="" ref="0x40480e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4048fea8" loc="90:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4048fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e360"/>
        <function-ref name="get" scoped="" ref="0x4048e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048e520"/>
        <function-ref name="set" scoped="" ref="0x4048e600"/>
        <function-ref name="clr" scoped="" ref="0x4048e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404973d0" loc="96:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404973d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404975a8"/>
        <function-ref name="isInput" scoped="" ref="0x40497688"/>
        <function-ref name="toggle" scoped="" ref="0x40497768"/>
        <function-ref name="isOutput" scoped="" ref="0x40497848"/>
        <function-ref name="get" scoped="" ref="0x40497928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497a08"/>
        <function-ref name="set" scoped="" ref="0x40497ae8"/>
        <function-ref name="clr" scoped="" ref="0x40497bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4048ba98" loc="76:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4048ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048bc70"/>
        <function-ref name="isInput" scoped="" ref="0x4048bd50"/>
        <function-ref name="toggle" scoped="" ref="0x4048be30"/>
        <function-ref name="isOutput" scoped="" ref="0x4048bf10"/>
        <function-ref name="get" scoped="" ref="0x4048a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a0f0"/>
        <function-ref name="set" scoped="" ref="0x4048a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4046e010" loc="43:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4046e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e488"/>
        <function-ref name="get" scoped="" ref="0x4046e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e648"/>
        <function-ref name="set" scoped="" ref="0x4046e728"/>
        <function-ref name="clr" scoped="" ref="0x4046e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40474750" loc="54:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40474750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474928"/>
        <function-ref name="isInput" scoped="" ref="0x40474a08"/>
        <function-ref name="toggle" scoped="" ref="0x40474ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40474bc8"/>
        <function-ref name="get" scoped="" ref="0x40474ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474d88"/>
        <function-ref name="set" scoped="" ref="0x40474e68"/>
        <function-ref name="clr" scoped="" ref="0x4047f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4048dee8" loc="94:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4048dee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4048c1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4048c2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c380"/>
        <function-ref name="get" scoped="" ref="0x4048c460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c540"/>
        <function-ref name="set" scoped="" ref="0x4048c620"/>
        <function-ref name="clr" scoped="" ref="0x4048c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4047fc08" loc="57:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4047fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4047fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4047e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e0f0"/>
        <function-ref name="get" scoped="" ref="0x4047e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e2b0"/>
        <function-ref name="set" scoped="" ref="0x4047e390"/>
        <function-ref name="clr" scoped="" ref="0x4047e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404842f0" loc="68:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404844c8"/>
        <function-ref name="isInput" scoped="" ref="0x404845a8"/>
        <function-ref name="toggle" scoped="" ref="0x40484688"/>
        <function-ref name="isOutput" scoped="" ref="0x40484768"/>
        <function-ref name="get" scoped="" ref="0x40484848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484928"/>
        <function-ref name="set" scoped="" ref="0x40484a08"/>
        <function-ref name="clr" scoped="" ref="0x40484ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404898e0" loc="79:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404898e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40489b98"/>
        <function-ref name="toggle" scoped="" ref="0x40489c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40489d58"/>
        <function-ref name="get" scoped="" ref="0x40489e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489f18"/>
        <function-ref name="set" scoped="" ref="0x40488010"/>
        <function-ref name="clr" scoped="" ref="0x404880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40490a98" loc="88:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40490a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490c70"/>
        <function-ref name="isInput" scoped="" ref="0x40490d50"/>
        <function-ref name="toggle" scoped="" ref="0x40490e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40490f10"/>
        <function-ref name="get" scoped="" ref="0x4048f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f0f0"/>
        <function-ref name="set" scoped="" ref="0x4048f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40479ea8" loc="46:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40479ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404780c0"/>
        <function-ref name="isInput" scoped="" ref="0x404781a0"/>
        <function-ref name="toggle" scoped="" ref="0x40478280"/>
        <function-ref name="isOutput" scoped="" ref="0x40478360"/>
        <function-ref name="get" scoped="" ref="0x40478440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478520"/>
        <function-ref name="set" scoped="" ref="0x40478600"/>
        <function-ref name="clr" scoped="" ref="0x404786e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404772f0" loc="49:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404774c8"/>
        <function-ref name="isInput" scoped="" ref="0x404775a8"/>
        <function-ref name="toggle" scoped="" ref="0x40477688"/>
        <function-ref name="isOutput" scoped="" ref="0x40477768"/>
        <function-ref name="get" scoped="" ref="0x40477848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477928"/>
        <function-ref name="set" scoped="" ref="0x40477a08"/>
        <function-ref name="clr" scoped="" ref="0x40477ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4047da98" loc="60:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4047da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4047dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4047de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4047df10"/>
        <function-ref name="get" scoped="" ref="0x4047c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c0f0"/>
        <function-ref name="set" scoped="" ref="0x4047c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4047c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40482210" loc="71:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40482210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404823e8"/>
        <function-ref name="isInput" scoped="" ref="0x404824c8"/>
        <function-ref name="toggle" scoped="" ref="0x404825a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40482688"/>
        <function-ref name="get" scoped="" ref="0x40482768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482848"/>
        <function-ref name="set" scoped="" ref="0x40482928"/>
        <function-ref name="clr" scoped="" ref="0x40482a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40487750" loc="82:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40487750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487928"/>
        <function-ref name="isInput" scoped="" ref="0x40487a08"/>
        <function-ref name="toggle" scoped="" ref="0x40487ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40487bc8"/>
        <function-ref name="get" scoped="" ref="0x40487ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487d88"/>
        <function-ref name="set" scoped="" ref="0x40487e68"/>
        <function-ref name="clr" scoped="" ref="0x40486010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40470b18" loc="41:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40470b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40470dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40470eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f010"/>
        <function-ref name="get" scoped="" ref="0x4046f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f1d0"/>
        <function-ref name="set" scoped="" ref="0x4046f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4046f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40475210" loc="52:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40475210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475468"/>
        <function-ref name="isInput" scoped="" ref="0x40475548"/>
        <function-ref name="toggle" scoped="" ref="0x40475628"/>
        <function-ref name="isOutput" scoped="" ref="0x40475708"/>
        <function-ref name="get" scoped="" ref="0x404757e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404758c8"/>
        <function-ref name="set" scoped="" ref="0x404759a8"/>
        <function-ref name="clr" scoped="" ref="0x40475a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4047b8e0" loc="63:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4047b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4047bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4047bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4047bd58"/>
        <function-ref name="get" scoped="" ref="0x4047be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bf18"/>
        <function-ref name="set" scoped="" ref="0x4047a010"/>
        <function-ref name="clr" scoped="" ref="0x4047a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4048e8e0" loc="91:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4048e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048eab8"/>
        <function-ref name="isInput" scoped="" ref="0x4048eb98"/>
        <function-ref name="toggle" scoped="" ref="0x4048ec78"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ed58"/>
        <function-ref name="get" scoped="" ref="0x4048ee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ef18"/>
        <function-ref name="set" scoped="" ref="0x4048d010"/>
        <function-ref name="clr" scoped="" ref="0x4048d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4047ace8" loc="66:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4047ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485010"/>
        <function-ref name="isInput" scoped="" ref="0x404850f0"/>
        <function-ref name="toggle" scoped="" ref="0x404851d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404852b0"/>
        <function-ref name="get" scoped="" ref="0x40485390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485470"/>
        <function-ref name="set" scoped="" ref="0x40485550"/>
        <function-ref name="clr" scoped="" ref="0x40485630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4048a4b0" loc="77:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4048a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a688"/>
        <function-ref name="isInput" scoped="" ref="0x4048a768"/>
        <function-ref name="toggle" scoped="" ref="0x4048a848"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a928"/>
        <function-ref name="get" scoped="" ref="0x4048aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048aae8"/>
        <function-ref name="set" scoped="" ref="0x4048abc8"/>
        <function-ref name="clr" scoped="" ref="0x4048aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40491670" loc="86:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40491670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491848"/>
        <function-ref name="isInput" scoped="" ref="0x40491928"/>
        <function-ref name="toggle" scoped="" ref="0x40491a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40491ae8"/>
        <function-ref name="get" scoped="" ref="0x40491bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491ca8"/>
        <function-ref name="set" scoped="" ref="0x40491d88"/>
        <function-ref name="clr" scoped="" ref="0x40491e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40497dc8" loc="97:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40497dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496010"/>
        <function-ref name="isInput" scoped="" ref="0x404960f0"/>
        <function-ref name="toggle" scoped="" ref="0x404961d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404962b0"/>
        <function-ref name="get" scoped="" ref="0x40496390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496470"/>
        <function-ref name="set" scoped="" ref="0x40496550"/>
        <function-ref name="clr" scoped="" ref="0x40496630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4046ea08" loc="44:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4046ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ebe0"/>
        <function-ref name="isInput" scoped="" ref="0x4046ecc0"/>
        <function-ref name="toggle" scoped="" ref="0x4046eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ee80"/>
        <function-ref name="get" scoped="" ref="0x40479010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404790f0"/>
        <function-ref name="set" scoped="" ref="0x404791d0"/>
        <function-ref name="clr" scoped="" ref="0x404792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4047f210" loc="55:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4047f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4047f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f688"/>
        <function-ref name="get" scoped="" ref="0x4047f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f848"/>
        <function-ref name="set" scoped="" ref="0x4047f928"/>
        <function-ref name="clr" scoped="" ref="0x4047fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40486210" loc="84:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40486210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404863e8"/>
        <function-ref name="isInput" scoped="" ref="0x404864c8"/>
        <function-ref name="toggle" scoped="" ref="0x404865a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40486688"/>
        <function-ref name="get" scoped="" ref="0x40486768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486848"/>
        <function-ref name="set" scoped="" ref="0x40486928"/>
        <function-ref name="clr" scoped="" ref="0x40486a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4047e670" loc="58:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4047e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e848"/>
        <function-ref name="isInput" scoped="" ref="0x4047e928"/>
        <function-ref name="toggle" scoped="" ref="0x4047ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4047eae8"/>
        <function-ref name="get" scoped="" ref="0x4047ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047eca8"/>
        <function-ref name="set" scoped="" ref="0x4047ed88"/>
        <function-ref name="clr" scoped="" ref="0x4047ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40484ce8" loc="69:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40484ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40483010"/>
        <function-ref name="toggle" scoped="" ref="0x404830f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404831d0"/>
        <function-ref name="get" scoped="" ref="0x404832b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483390"/>
        <function-ref name="set" scoped="" ref="0x40483470"/>
        <function-ref name="clr" scoped="" ref="0x40483550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404882f0" loc="80:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404884c8"/>
        <function-ref name="isInput" scoped="" ref="0x404885a8"/>
        <function-ref name="toggle" scoped="" ref="0x40488688"/>
        <function-ref name="isOutput" scoped="" ref="0x40488768"/>
        <function-ref name="get" scoped="" ref="0x40488848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488928"/>
        <function-ref name="set" scoped="" ref="0x40488a08"/>
        <function-ref name="clr" scoped="" ref="0x40488ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4048f4b0" loc="89:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4048f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f688"/>
        <function-ref name="isInput" scoped="" ref="0x4048f768"/>
        <function-ref name="toggle" scoped="" ref="0x4048f848"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f928"/>
        <function-ref name="get" scoped="" ref="0x4048fa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048fae8"/>
        <function-ref name="set" scoped="" ref="0x4048fbc8"/>
        <function-ref name="clr" scoped="" ref="0x4048fca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404736f0" loc="39:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404738c8"/>
        <function-ref name="isInput" scoped="" ref="0x404739a8"/>
        <function-ref name="toggle" scoped="" ref="0x40473a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40473b68"/>
        <function-ref name="get" scoped="" ref="0x40473c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473d28"/>
        <function-ref name="set" scoped="" ref="0x40473e08"/>
        <function-ref name="clr" scoped="" ref="0x40473ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40477ce8" loc="50:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40477ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40476010"/>
        <function-ref name="toggle" scoped="" ref="0x404760f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404761d0"/>
        <function-ref name="get" scoped="" ref="0x404762b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476390"/>
        <function-ref name="set" scoped="" ref="0x40476470"/>
        <function-ref name="clr" scoped="" ref="0x40476550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4047c4b0" loc="61:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4047c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c688"/>
        <function-ref name="isInput" scoped="" ref="0x4047c768"/>
        <function-ref name="toggle" scoped="" ref="0x4047c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c928"/>
        <function-ref name="get" scoped="" ref="0x4047ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047cae8"/>
        <function-ref name="set" scoped="" ref="0x4047cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4047cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40482c08" loc="72:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40482c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482de0"/>
        <function-ref name="isInput" scoped="" ref="0x40482ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40480010"/>
        <function-ref name="isOutput" scoped="" ref="0x404800f0"/>
        <function-ref name="get" scoped="" ref="0x404801d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404802b0"/>
        <function-ref name="set" scoped="" ref="0x40480390"/>
        <function-ref name="clr" scoped="" ref="0x40480470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4048c900" loc="95:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4048c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048cad8"/>
        <function-ref name="isInput" scoped="" ref="0x4048cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x4048cc98"/>
        <function-ref name="isOutput" scoped="" ref="0x4048cd78"/>
        <function-ref name="get" scoped="" ref="0x4048ce58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497010"/>
        <function-ref name="set" scoped="" ref="0x404970f0"/>
        <function-ref name="clr" scoped="" ref="0x404971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4048b0a0" loc="75:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4048b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b278"/>
        <function-ref name="isInput" scoped="" ref="0x4048b358"/>
        <function-ref name="toggle" scoped="" ref="0x4048b438"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b518"/>
        <function-ref name="get" scoped="" ref="0x4048b5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b6d8"/>
        <function-ref name="set" scoped="" ref="0x4048b7b8"/>
        <function-ref name="clr" scoped="" ref="0x4048b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4047a2f0" loc="64:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4047a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4047a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4047a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a768"/>
        <function-ref name="get" scoped="" ref="0x4047a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a928"/>
        <function-ref name="set" scoped="" ref="0x4047aa08"/>
        <function-ref name="clr" scoped="" ref="0x4047aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4046f590" loc="42:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4046f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f768"/>
        <function-ref name="isInput" scoped="" ref="0x4046f848"/>
        <function-ref name="toggle" scoped="" ref="0x4046f928"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fa08"/>
        <function-ref name="get" scoped="" ref="0x4046fae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046fbc8"/>
        <function-ref name="set" scoped="" ref="0x4046fca8"/>
        <function-ref name="clr" scoped="" ref="0x4046fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40475c88" loc="53:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40475c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475e60"/>
        <function-ref name="isInput" scoped="" ref="0x40474010"/>
        <function-ref name="toggle" scoped="" ref="0x404740f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404741d0"/>
        <function-ref name="get" scoped="" ref="0x404742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474390"/>
        <function-ref name="set" scoped="" ref="0x40474470"/>
        <function-ref name="clr" scoped="" ref="0x40474550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40493190" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40493190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40493378"/>
        <function-ref name="isInput" scoped="" ref="0x40493458"/>
        <function-ref name="toggle" scoped="" ref="0x40493538"/>
        <function-ref name="isOutput" scoped="" ref="0x40493618"/>
        <function-ref name="get" scoped="" ref="0x404936f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404937d8"/>
        <function-ref name="set" scoped="" ref="0x404938b8"/>
        <function-ref name="clr" scoped="" ref="0x40493998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404a5a70" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404a5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5c58"/>
        <function-ref name="isInput" scoped="" ref="0x404a5d38"/>
        <function-ref name="toggle" scoped="" ref="0x404a5e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5ef8"/>
        <function-ref name="get" scoped="" ref="0x404a4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a40f0"/>
        <function-ref name="set" scoped="" ref="0x404a41d0"/>
        <function-ref name="clr" scoped="" ref="0x404a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404ad2b8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad4a0"/>
        <function-ref name="isInput" scoped="" ref="0x404ad580"/>
        <function-ref name="toggle" scoped="" ref="0x404ad660"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad740"/>
        <function-ref name="get" scoped="" ref="0x404ad820"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad900"/>
        <function-ref name="set" scoped="" ref="0x404ad9e0"/>
        <function-ref name="clr" scoped="" ref="0x404adac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b5af8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5ce0"/>
        <function-ref name="isInput" scoped="" ref="0x404b5dc0"/>
        <function-ref name="toggle" scoped="" ref="0x404b5ea0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4010"/>
        <function-ref name="get" scoped="" ref="0x404b40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b41d0"/>
        <function-ref name="set" scoped="" ref="0x404b42b0"/>
        <function-ref name="clr" scoped="" ref="0x404b4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b1440" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1628"/>
        <function-ref name="isInput" scoped="" ref="0x404b1708"/>
        <function-ref name="toggle" scoped="" ref="0x404b17e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b18c8"/>
        <function-ref name="get" scoped="" ref="0x404b19a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1a88"/>
        <function-ref name="set" scoped="" ref="0x404b1b68"/>
        <function-ref name="clr" scoped="" ref="0x404b1c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404bac68" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404bac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bae50"/>
        <function-ref name="isInput" scoped="" ref="0x404b9010"/>
        <function-ref name="toggle" scoped="" ref="0x404b90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b91d0"/>
        <function-ref name="get" scoped="" ref="0x404b92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9390"/>
        <function-ref name="set" scoped="" ref="0x404b9470"/>
        <function-ref name="clr" scoped="" ref="0x404b9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404c15c8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404c15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c17b0"/>
        <function-ref name="isInput" scoped="" ref="0x404c1890"/>
        <function-ref name="toggle" scoped="" ref="0x404c1970"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1a50"/>
        <function-ref name="get" scoped="" ref="0x404c1b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1c10"/>
        <function-ref name="set" scoped="" ref="0x404c1cf0"/>
        <function-ref name="clr" scoped="" ref="0x404c1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x404d4438" loc="18:/opt/tinyos/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x404d4438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4610"/>
        <function-ref name="isInput" scoped="" ref="0x404d46f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d47d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d48b0"/>
        <function-ref name="get" scoped="" ref="0x404d4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4a70"/>
        <function-ref name="set" scoped="" ref="0x404d4b50"/>
        <function-ref name="clr" scoped="" ref="0x404d4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x404f4980" loc="34:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404f4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404f4b58"/>
        <function-ref name="stopDone" scoped="" ref="0x404f4c38"/>
        <function-ref name="start" scoped="" ref="0x404f4d18"/>
        <function-ref name="stop" scoped="" ref="0x404f4df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x404e8860" loc="37:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404e8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e8a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x404f0ab0" loc="57:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x404f0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f0c88"/>
        <function-ref name="runTask" scoped="" ref="0x404f0d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x404f3388" loc="46:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x404f3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f3560"/>
        <function-ref name="runTask" scoped="" ref="0x404f3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x404f2708" loc="35:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x404f2708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404f28e0"/>
        <function-ref name="disable" scoped="" ref="0x404f29c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404f2aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x404f2dc8" loc="36:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x404f2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8010"/>
        <function-ref name="isInput" scoped="" ref="0x404e80f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e82b0"/>
        <function-ref name="get" scoped="" ref="0x404e8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8470"/>
        <function-ref name="set" scoped="" ref="0x404e8550"/>
        <function-ref name="clr" scoped="" ref="0x404e8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40501758" loc="35:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40501758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40501930"/>
        <function-ref name="disable" scoped="" ref="0x40501a10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40501af0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40501bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40501d90" loc="36:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40501d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500010"/>
        <function-ref name="isInput" scoped="" ref="0x405000f0"/>
        <function-ref name="toggle" scoped="" ref="0x405001d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405002b0"/>
        <function-ref name="get" scoped="" ref="0x40500390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500470"/>
        <function-ref name="set" scoped="" ref="0x40500550"/>
        <function-ref name="clr" scoped="" ref="0x40500630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x404fd010" loc="37:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x404fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404fd1e8"/>
        <function-ref name="disable" scoped="" ref="0x404fd2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404fd3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404fd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x40504428" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40504428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40504600"/>
        <function-ref name="fired" scoped="" ref="0x405046e0"/>
        <function-ref name="disable" scoped="" ref="0x405047c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405048a0"/>
        <function-ref name="reset" scoped="" ref="0x40504980"/>
        <function-ref name="setMask" scoped="" ref="0x40504a60"/>
        <function-ref name="enable" scoped="" ref="0x40504b40"/>
        <function-ref name="getPins" scoped="" ref="0x40504c20"/>
        <function-ref name="getMask" scoped="" ref="0x40504d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x40525eb8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40525eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405090c0"/>
        <function-ref name="fired" scoped="" ref="0x405091a0"/>
        <function-ref name="disable" scoped="" ref="0x40509280"/>
        <function-ref name="isEnabled" scoped="" ref="0x40509360"/>
        <function-ref name="reset" scoped="" ref="0x40509440"/>
        <function-ref name="setMask" scoped="" ref="0x40509520"/>
        <function-ref name="enable" scoped="" ref="0x40509600"/>
        <function-ref name="getPins" scoped="" ref="0x405096e0"/>
        <function-ref name="getMask" scoped="" ref="0x405097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x405099b8" loc="52:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x405099b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40509ba0"/>
        <function-ref name="disable" scoped="" ref="0x40509c80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40509d60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40509e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405240e0" loc="46:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405242b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40524398"/>
        <function-ref name="start" scoped="" ref="0x40524478"/>
        <function-ref name="stop" scoped="" ref="0x40524558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40534be0" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40534be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40534db8"/>
        <function-ref name="getPayload" scoped="" ref="0x40534e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40523010"/>
        <function-ref name="cancel" scoped="" ref="0x405230f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40540010" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40540010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405401e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405402c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405403a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40540488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40540568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40522100" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40522100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405222d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40546548" loc="53:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40546548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40546720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40546800"/>
        <function-ref name="led1On" scoped="" ref="0x405468e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405469c0"/>
        <function-ref name="led3Off" scoped="" ref="0x40546aa0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40546b80"/>
        <function-ref name="get" scoped="" ref="0x40546c60"/>
        <function-ref name="led1Off" scoped="" ref="0x40546d40"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40546e20"/>
        <function-ref name="led3On" scoped="" ref="0x40546f00"/>
        <function-ref name="led0On" scoped="" ref="0x40556010"/>
        <function-ref name="led2Off" scoped="" ref="0x405560f0"/>
        <function-ref name="led2On" scoped="" ref="0x405561d0"/>
        <function-ref name="set" scoped="" ref="0x40556330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40546010" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40546010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405461e8"/>
        <function-ref name="noAck" scoped="" ref="0x405462c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405463a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4054cdf8" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4053d010"/>
        <function-ref name="source" scoped="" ref="0x4053d0f0"/>
        <function-ref name="address" scoped="" ref="0x4053d1d0"/>
        <function-ref name="destination" scoped="" ref="0x4053d2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4053d390"/>
        <function-ref name="setDestination" scoped="" ref="0x4053d470"/>
        <function-ref name="type" scoped="" ref="0x4053d550"/>
        <function-ref name="setType" scoped="" ref="0x4053d630"/>
        <function-ref name="isForMe" scoped="" ref="0x4053d710"/>
        <function-ref name="setGroup" scoped="" ref="0x4053d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4053d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4058bed0" loc="54:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4058bed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058a0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4058a1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058a280"/>
        <function-ref name="cancel" scoped="" ref="0x4058a360"/>
        <function-ref name="sendDone" scoped="" ref="0x4058a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4058a5a0" loc="55:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4058a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40552be8" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40552be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40552dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40552eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40551010"/>
        <function-ref name="cancel" scoped="" ref="0x405510f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405511d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058b310" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058b4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058b5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4058b6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058b788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405513a8" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405513a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40551590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4058b9a8" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4058bb80"/>
        <function-ref name="noAck" scoped="" ref="0x4058bc60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4058bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405516d0" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405518a8"/>
        <function-ref name="source" scoped="" ref="0x40551988"/>
        <function-ref name="address" scoped="" ref="0x40551a68"/>
        <function-ref name="destination" scoped="" ref="0x40551b48"/>
        <function-ref name="setSource" scoped="" ref="0x40551c28"/>
        <function-ref name="setDestination" scoped="" ref="0x40551d08"/>
        <function-ref name="type" scoped="" ref="0x40551de8"/>
        <function-ref name="setType" scoped="" ref="0x40551ec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4058b010"/>
        <function-ref name="setGroup" scoped="" ref="0x4058b0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4058b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40589d08" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40589d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40589ee0"/>
        <function-ref name="stopDone" scoped="" ref="0x40596010"/>
        <function-ref name="start" scoped="" ref="0x405960f0"/>
        <function-ref name="stop" scoped="" ref="0x405961d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40596c20" loc="52:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40596c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40596df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40596ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40594010"/>
        <function-ref name="cancel" scoped="" ref="0x405940f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405941d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40589970" loc="49:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40589970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40589b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40596618" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40596618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405967f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40590840" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40590840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40590a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40590af8"/>
        <function-ref name="led1On" scoped="" ref="0x40590bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40590cb8"/>
        <function-ref name="led3Off" scoped="" ref="0x40590d98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40590e78"/>
        <function-ref name="get" scoped="" ref="0x40593010"/>
        <function-ref name="led1Off" scoped="" ref="0x405930f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405931d0"/>
        <function-ref name="led3On" scoped="" ref="0x405932b0"/>
        <function-ref name="led0On" scoped="" ref="0x40593390"/>
        <function-ref name="led2Off" scoped="" ref="0x40593470"/>
        <function-ref name="led2On" scoped="" ref="0x40593550"/>
        <function-ref name="set" scoped="" ref="0x405936b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40590338" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40590510"/>
        <function-ref name="offset" scoped="" ref="0x405905f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x405906d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405ae0f8" loc="66:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405ae0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405ae2d0"/>
        <function-ref name="stopDone" scoped="" ref="0x405ae3b0"/>
        <function-ref name="start" scoped="" ref="0x405ae490"/>
        <function-ref name="stop" scoped="" ref="0x405ae570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x405e67a0" loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x405e67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e6978"/>
        <function-ref name="runTask" scoped="" ref="0x405e6a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x405b1760" loc="74:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x405b1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405b1938"/>
        <function-ref name="stop" scoped="" ref="0x405b1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x405c2b28" loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x405c2b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405c2d00"/>
        <function-ref name="runTask" scoped="" ref="0x405c2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4059fd48" loc="65:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4059fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4059ff20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x405b0740" loc="75:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x405b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x405b0918"/>
        <function-ref name="flush" scoped="" ref="0x405b09f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x405e7010" loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x405e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e71e8"/>
        <function-ref name="runTask" scoped="" ref="0x405e72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x405b4e88" loc="72:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x405b4e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x405a7070"/>
        <function-ref name="resetSend" scoped="" ref="0x405a7150"/>
        <function-ref name="dataReceived" scoped="" ref="0x405a7230"/>
        <function-ref name="resetReceive" scoped="" ref="0x405a7310"/>
        <function-ref name="putData" scoped="" ref="0x405a73f0"/>
        <function-ref name="putDone" scoped="" ref="0x405a74d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x405a75b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405a7720" loc="73:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405a7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405a78f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405a79d8"/>
        <function-ref name="led1On" scoped="" ref="0x405a7ab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405a7b98"/>
        <function-ref name="led3Off" scoped="" ref="0x405a7c78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405a7d58"/>
        <function-ref name="get" scoped="" ref="0x405a7e38"/>
        <function-ref name="led1Off" scoped="" ref="0x405a7f18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405b6010"/>
        <function-ref name="led3On" scoped="" ref="0x405b60f0"/>
        <function-ref name="led0On" scoped="" ref="0x405b61d0"/>
        <function-ref name="led2Off" scoped="" ref="0x405b62b0"/>
        <function-ref name="led2On" scoped="" ref="0x405b6390"/>
        <function-ref name="set" scoped="" ref="0x405b64f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x405e3428" loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e3600"/>
        <function-ref name="runTask" scoped="" ref="0x405e36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x405aa7f8" loc="67:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x405aa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x405aa9d0"/>
        <function-ref name="nextByte" scoped="" ref="0x405aaab0"/>
        <function-ref name="startSend" scoped="" ref="0x405aab90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405aac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x405a8bd8" loc="68:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x405a8db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x405a8e90"/>
        <function-ref name="endPacket" scoped="" ref="0x405ac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4065bdb0" loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4065bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065a010"/>
        <function-ref name="runTask" scoped="" ref="0x4065a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4065d710" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4065d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4065d8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4065d9d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4065dab8"/>
        <function-ref name="cancel" scoped="" ref="0x4065db98"/>
        <function-ref name="sendDone" scoped="" ref="0x4065dc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4065a270" loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4065a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065a448"/>
        <function-ref name="runTask" scoped="" ref="0x4065a528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4065d350" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4065d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4065d538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4065dea0" loc="54:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4065dea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4065c0c0"/>
        <function-ref name="offset" scoped="" ref="0x4065c1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4065c280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4065ce50" loc="57:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4065ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4065b050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4065b130"/>
        <function-ref name="led1On" scoped="" ref="0x4065b210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4065b2f0"/>
        <function-ref name="led3Off" scoped="" ref="0x4065b3d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4065b4b0"/>
        <function-ref name="get" scoped="" ref="0x4065b590"/>
        <function-ref name="led1Off" scoped="" ref="0x4065b670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4065b750"/>
        <function-ref name="led3On" scoped="" ref="0x4065b830"/>
        <function-ref name="led0On" scoped="" ref="0x4065b910"/>
        <function-ref name="led2Off" scoped="" ref="0x4065b9f0"/>
        <function-ref name="led2On" scoped="" ref="0x4065bad0"/>
        <function-ref name="set" scoped="" ref="0x4065bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4065c898" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4065c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4065ca70"/>
        <function-ref name="nextByte" scoped="" ref="0x4065cb50"/>
        <function-ref name="startSend" scoped="" ref="0x4065cc30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4065cd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4065c3c0" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4065c598"/>
        <function-ref name="byteReceived" scoped="" ref="0x4065c678"/>
        <function-ref name="endPacket" scoped="" ref="0x4065c758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x406629e8" loc="50:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406629e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40662bc0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40662ca0"/>
        <function-ref name="receive" scoped="" ref="0x40662d80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40662e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40655010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406550f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40659710" loc="48:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40659710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x406598e8"/>
        <function-ref name="resetSend" scoped="" ref="0x406599c8"/>
        <function-ref name="dataReceived" scoped="" ref="0x40659aa8"/>
        <function-ref name="resetReceive" scoped="" ref="0x40659b88"/>
        <function-ref name="putData" scoped="" ref="0x40659c68"/>
        <function-ref name="putDone" scoped="" ref="0x40659d48"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40659e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40655340" loc="51:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40655340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40655518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406555f8"/>
        <function-ref name="led1On" scoped="" ref="0x406556d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406557b8"/>
        <function-ref name="led3Off" scoped="" ref="0x40655898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40655978"/>
        <function-ref name="get" scoped="" ref="0x40655a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40655b38"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40655c18"/>
        <function-ref name="led3On" scoped="" ref="0x40655cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40655dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40655eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40667010"/>
        <function-ref name="set" scoped="" ref="0x40667170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406778f0" loc="42:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40677ac8"/>
        <function-ref name="receive" scoped="" ref="0x40677ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40658a88" loc="41:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40658a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40658c60"/>
        <function-ref name="receivedByte" scoped="" ref="0x40658d40"/>
        <function-ref name="receive" scoped="" ref="0x40658e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40658f00"/>
        <function-ref name="receiveDone" scoped="" ref="0x4067a010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4067a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4067a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40658608" loc="40:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40658608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406587e0"/>
        <function-ref name="stop" scoped="" ref="0x406588c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40679798" loc="41:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40679798"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40679970"/>
        <function-ref name="receive" scoped="" ref="0x40679a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40679c18" loc="42:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40679c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40679df0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40679ed0"/>
        <function-ref name="receive" scoped="" ref="0x40674010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406740f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406741d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406742b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40674390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406843f8" loc="43:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406843f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40684b48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40673048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40684dc0"/>
        <function-ref name="overflow" scoped="" ref="0x406732c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40679328" loc="40:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40679328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40679500"/>
        <function-ref name="stop" scoped="" ref="0x406795e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40672ae8" loc="50:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40672ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40672cc0"/>
        <function-ref name="receive" scoped="" ref="0x40672da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x406837b0" loc="53:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x406837b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40683988"/>
        <function-ref name="stop" scoped="" ref="0x40683a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40672398" loc="48:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40672398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40672570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40672f00" loc="51:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40672f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406830f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x406831d0"/>
        <function-ref name="receive" scoped="" ref="0x406832b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40683390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40683470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40683550"/>
        <function-ref name="sendDone" scoped="" ref="0x40683630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406acc88" loc="56:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406acc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ab3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ab8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ab668"/>
        <function-ref name="overflow" scoped="" ref="0x406abb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x406ac050" loc="55:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x406ac050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406ac228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406ac308"/>
        <function-ref name="rxDone" scoped="" ref="0x406ac3e8"/>
        <function-ref name="txDone" scoped="" ref="0x406ac4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406ac5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406ac688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406ac768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406ac848"/>
        <function-ref name="tx" scoped="" ref="0x406ac928"/>
        <function-ref name="rx" scoped="" ref="0x406aca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406726d0" loc="49:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406728a8"/>
        <function-ref name="stop" scoped="" ref="0x40672988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40683be8" loc="54:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40683be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40683dc0"/>
        <function-ref name="stop" scoped="" ref="0x40683ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406c00b8" loc="49:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406c00b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406c0290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406c0370"/>
        <function-ref name="rxDone" scoped="" ref="0x406c0450"/>
        <function-ref name="txDone" scoped="" ref="0x406c0530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406c0610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406c06f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406c07d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406c08b0"/>
        <function-ref name="tx" scoped="" ref="0x406c0990"/>
        <function-ref name="rx" scoped="" ref="0x406c0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406bf760" loc="53:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406bf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406bf938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bfa18"/>
        <function-ref name="rxDone" scoped="" ref="0x406bfaf8"/>
        <function-ref name="txDone" scoped="" ref="0x406bfbd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bfcb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bfd98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406bfe78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406be010"/>
        <function-ref name="tx" scoped="" ref="0x406be0f0"/>
        <function-ref name="rx" scoped="" ref="0x406be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406c1b98" loc="48:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406c1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c1d70"/>
        <function-ref name="stop" scoped="" ref="0x406c1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406c0cc8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406c0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c0ea0"/>
        <function-ref name="stop" scoped="" ref="0x406bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406bf268" loc="52:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406bf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bf440"/>
        <function-ref name="stop" scoped="" ref="0x406bf520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406c1688" loc="47:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406c1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c1860"/>
        <function-ref name="stop" scoped="" ref="0x406c1940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x406be9f8" loc="114:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x406be9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406bebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406bb8c0" loc="117:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406bb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406bba98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bbb78"/>
        <function-ref name="rxDone" scoped="" ref="0x406bbc58"/>
        <function-ref name="txDone" scoped="" ref="0x406bbd38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bbe18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bbef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406ba010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406ba0f0"/>
        <function-ref name="tx" scoped="" ref="0x406ba1d0"/>
        <function-ref name="rx" scoped="" ref="0x406ba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406cb010" loc="124:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406cb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x406ba4c0" loc="119:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x406ba4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ba698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406b8390" loc="122:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406b8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406b8568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406b8648"/>
        <function-ref name="rxDone" scoped="" ref="0x406b8728"/>
        <function-ref name="txDone" scoped="" ref="0x406b8808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406b88e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406b89c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406b8aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406b8b88"/>
        <function-ref name="tx" scoped="" ref="0x406b8c68"/>
        <function-ref name="rx" scoped="" ref="0x406b8d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406bb3a8" loc="116:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406bb3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bb580"/>
        <function-ref name="stop" scoped="" ref="0x406bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406ba910" loc="120:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406ba910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406baae8"/>
        <function-ref name="stop" scoped="" ref="0x406babc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406bae40" loc="121:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406bae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b8050"/>
        <function-ref name="stop" scoped="" ref="0x406b8130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406cb3e0" loc="126:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406cb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406cb5b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406cb698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406cb778"/>
        <function-ref name="actualMicro" scoped="" ref="0x406cb858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406cb938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x406cbb20" loc="127:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x406cbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x406cbcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406bee48" loc="115:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406bee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bb050"/>
        <function-ref name="stop" scoped="" ref="0x406bb130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40414e50" loc="47:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4040d050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040c218" loc="48:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040c218"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403273d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403273d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040c3f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040c4d0"/>
        <function-ref name="led1On" scoped="" ref="0x4040c5b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040c690"/>
        <function-ref name="led3Off" scoped="" ref="0x4040c770"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040c850"/>
        <function-ref name="get" scoped="" ref="0x4040c930"/>
        <function-ref name="led1Off" scoped="" ref="0x4040ca10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4040caf0"/>
        <function-ref name="led3On" scoped="" ref="0x4040cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x4040ccb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4040cd90"/>
        <function-ref name="led2On" scoped="" ref="0x4040ce70"/>
        <function-ref name="set" scoped="" ref="0x40413010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40331498" loc="43:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40331498"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40331670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4040b1a8" loc="44:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4040b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40675c48" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40675c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fe3b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406fe8a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fe628"/>
        <function-ref name="overflow" scoped="" ref="0x406feb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407166f8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407166f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40716e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40715350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407150d8"/>
        <function-ref name="overflow" scoped="" ref="0x407155c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406fc490" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406fc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fcbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40716110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fce58"/>
        <function-ref name="overflow" scoped="" ref="0x40716388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407143e8" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407143e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40714b38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40710048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40714db0"/>
        <function-ref name="overflow" scoped="" ref="0x407102c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4070eb60" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4070eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40722308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407227f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40722580"/>
        <function-ref name="overflow" scoped="" ref="0x40722a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4070f918" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4070f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070e088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070e578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070e300"/>
        <function-ref name="overflow" scoped="" ref="0x4070e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40721b60" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40721b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071e308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4071e7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071e580"/>
        <function-ref name="overflow" scoped="" ref="0x4071ea70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4071b010" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4071b010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4071b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4071b448" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4071b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071bb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407370a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071be10"/>
        <function-ref name="overflow" scoped="" ref="0x40737320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407375f0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407375f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40734068"/>
        <function-ref name="test" scoped="" ref="0x407363e8"/>
        <function-ref name="get" scoped="" ref="0x40737c38"/>
        <function-ref name="reset" scoped="" ref="0x40736660"/>
        <function-ref name="getMode" scoped="" ref="0x40734308"/>
        <function-ref name="overflow" scoped="" ref="0x40736170"/>
        <function-ref name="isOn" scoped="" ref="0x40736dc8"/>
        <function-ref name="set" scoped="" ref="0x40737eb0"/>
        <function-ref name="start" scoped="" ref="0x407368d8"/>
        <function-ref name="stop" scoped="" ref="0x40736b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4074d1d8" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4074d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073bc68"/>
        <function-ref name="test" scoped="" ref="0x4073b010"/>
        <function-ref name="fired" scoped="" ref="0x4074dd38"/>
        <function-ref name="get" scoped="" ref="0x4074d820"/>
        <function-ref name="reset" scoped="" ref="0x4073b288"/>
        <function-ref name="getMode" scoped="" ref="0x4073bf08"/>
        <function-ref name="isOn" scoped="" ref="0x4073b9f0"/>
        <function-ref name="set" scoped="" ref="0x4074da98"/>
        <function-ref name="start" scoped="" ref="0x4073b500"/>
        <function-ref name="stop" scoped="" ref="0x4073b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40733878" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40733878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4072f2e0"/>
        <function-ref name="test" scoped="" ref="0x40730668"/>
        <function-ref name="get" scoped="" ref="0x40733ec0"/>
        <function-ref name="reset" scoped="" ref="0x407308e0"/>
        <function-ref name="getMode" scoped="" ref="0x4072f580"/>
        <function-ref name="overflow" scoped="" ref="0x407303f0"/>
        <function-ref name="isOn" scoped="" ref="0x4072f068"/>
        <function-ref name="set" scoped="" ref="0x40730150"/>
        <function-ref name="start" scoped="" ref="0x40730b58"/>
        <function-ref name="stop" scoped="" ref="0x40730dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4073ff08" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4073ff08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073e9f0"/>
        <function-ref name="test" scoped="" ref="0x40743d08"/>
        <function-ref name="fired" scoped="" ref="0x40743a90"/>
        <function-ref name="force" scoped="" ref="0x4073ef08"/>
        <function-ref name="get" scoped="" ref="0x40743578"/>
        <function-ref name="reset" scoped="" ref="0x4073e010"/>
        <function-ref name="getMode" scoped="" ref="0x4073ec90"/>
        <function-ref name="isOn" scoped="" ref="0x4073e778"/>
        <function-ref name="set" scoped="" ref="0x407437f0"/>
        <function-ref name="start" scoped="" ref="0x4073e288"/>
        <function-ref name="stop" scoped="" ref="0x4073e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40748b98" loc="42:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40748b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40745600"/>
        <function-ref name="test" scoped="" ref="0x40746990"/>
        <function-ref name="fired" scoped="" ref="0x40746718"/>
        <function-ref name="force" scoped="" ref="0x40745b18"/>
        <function-ref name="get" scoped="" ref="0x40746200"/>
        <function-ref name="reset" scoped="" ref="0x40746c08"/>
        <function-ref name="getMode" scoped="" ref="0x407458a0"/>
        <function-ref name="isOn" scoped="" ref="0x40745388"/>
        <function-ref name="set" scoped="" ref="0x40746478"/>
        <function-ref name="start" scoped="" ref="0x40746e80"/>
        <function-ref name="stop" scoped="" ref="0x40745110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407546a8" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407546a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407521a0"/>
        <function-ref name="test" scoped="" ref="0x40753528"/>
        <function-ref name="fired" scoped="" ref="0x407532b0"/>
        <function-ref name="get" scoped="" ref="0x40754cf0"/>
        <function-ref name="reset" scoped="" ref="0x407537a0"/>
        <function-ref name="getMode" scoped="" ref="0x40752440"/>
        <function-ref name="isOn" scoped="" ref="0x40753f08"/>
        <function-ref name="set" scoped="" ref="0x40753010"/>
        <function-ref name="start" scoped="" ref="0x40753a18"/>
        <function-ref name="stop" scoped="" ref="0x40753c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407526f8" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407526f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407528d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40745f10" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40745f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407589f0"/>
        <function-ref name="test" scoped="" ref="0x40744d08"/>
        <function-ref name="fired" scoped="" ref="0x40744a90"/>
        <function-ref name="force" scoped="" ref="0x40758f08"/>
        <function-ref name="get" scoped="" ref="0x40744578"/>
        <function-ref name="reset" scoped="" ref="0x40758010"/>
        <function-ref name="getMode" scoped="" ref="0x40758c90"/>
        <function-ref name="isOn" scoped="" ref="0x40758778"/>
        <function-ref name="set" scoped="" ref="0x407447f0"/>
        <function-ref name="start" scoped="" ref="0x40758288"/>
        <function-ref name="stop" scoped="" ref="0x40758500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40752ae8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40752ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40752cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40757320" loc="44:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40757320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40756d68"/>
        <function-ref name="test" scoped="" ref="0x40756110"/>
        <function-ref name="fired" scoped="" ref="0x40757e80"/>
        <function-ref name="force" scoped="" ref="0x407542c0"/>
        <function-ref name="get" scoped="" ref="0x40757968"/>
        <function-ref name="reset" scoped="" ref="0x40756388"/>
        <function-ref name="getMode" scoped="" ref="0x40754048"/>
        <function-ref name="isOn" scoped="" ref="0x40756af0"/>
        <function-ref name="set" scoped="" ref="0x40757be0"/>
        <function-ref name="start" scoped="" ref="0x40756600"/>
        <function-ref name="stop" scoped="" ref="0x40756878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4074ca80" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4074ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40748500"/>
        <function-ref name="test" scoped="" ref="0x40749888"/>
        <function-ref name="get" scoped="" ref="0x407490f8"/>
        <function-ref name="reset" scoped="" ref="0x40749b00"/>
        <function-ref name="getMode" scoped="" ref="0x407487a0"/>
        <function-ref name="overflow" scoped="" ref="0x40749610"/>
        <function-ref name="isOn" scoped="" ref="0x40748288"/>
        <function-ref name="set" scoped="" ref="0x40749370"/>
        <function-ref name="start" scoped="" ref="0x40749d78"/>
        <function-ref name="stop" scoped="" ref="0x40748010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40712b78" loc="47:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40712b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40712d50"/>
        <function-ref name="offset" scoped="" ref="0x40712e30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40712f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407a3010" loc="43:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a31e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407a32c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a33a8"/>
        <function-ref name="cancel" scoped="" ref="0x407a3488"/>
        <function-ref name="sendDone" scoped="" ref="0x407a3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407a36f0" loc="44:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407a36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a38c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407a3a38" loc="45:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a3a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a3c10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a3cf0"/>
        <function-ref name="led1On" scoped="" ref="0x407a3dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a3eb0"/>
        <function-ref name="led3Off" scoped="" ref="0x407a2010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407a20f0"/>
        <function-ref name="get" scoped="" ref="0x407a21d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407a22b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407a2390"/>
        <function-ref name="led3On" scoped="" ref="0x407a2470"/>
        <function-ref name="led0On" scoped="" ref="0x407a2550"/>
        <function-ref name="led2Off" scoped="" ref="0x407a2630"/>
        <function-ref name="led2On" scoped="" ref="0x407a2710"/>
        <function-ref name="set" scoped="" ref="0x407a2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x407b9218" loc="54:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x407b9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407b93f0"/>
        <function-ref name="runTask" scoped="" ref="0x407b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x407a6a28" loc="38:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x407a6c00"/>
        <function-ref name="offset" scoped="" ref="0x407a6ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407a6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407a5a20" loc="42:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a5bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a5cd8"/>
        <function-ref name="led1On" scoped="" ref="0x407a5db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a5e98"/>
        <function-ref name="led3Off" scoped="" ref="0x407c3010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c30f0"/>
        <function-ref name="get" scoped="" ref="0x407c31d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407c32b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c3390"/>
        <function-ref name="led3On" scoped="" ref="0x407c3470"/>
        <function-ref name="led0On" scoped="" ref="0x407c3550"/>
        <function-ref name="led2Off" scoped="" ref="0x407c3630"/>
        <function-ref name="led2On" scoped="" ref="0x407c3710"/>
        <function-ref name="set" scoped="" ref="0x407c3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x407bf480" loc="50:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407bf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bf658"/>
        <function-ref name="isInput" scoped="" ref="0x407bf738"/>
        <function-ref name="toggle" scoped="" ref="0x407bf818"/>
        <function-ref name="isOutput" scoped="" ref="0x407bf8f8"/>
        <function-ref name="get" scoped="" ref="0x407bf9d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bfab8"/>
        <function-ref name="set" scoped="" ref="0x407bfb98"/>
        <function-ref name="clr" scoped="" ref="0x407bfc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x407bd2e0" loc="53:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407bd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bd4b8"/>
        <function-ref name="isInput" scoped="" ref="0x407bd598"/>
        <function-ref name="toggle" scoped="" ref="0x407bd678"/>
        <function-ref name="isOutput" scoped="" ref="0x407bd758"/>
        <function-ref name="get" scoped="" ref="0x407bd838"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bd918"/>
        <function-ref name="set" scoped="" ref="0x407bd9f8"/>
        <function-ref name="clr" scoped="" ref="0x407bdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c0128" loc="46:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c0300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407bfe68" loc="51:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407bfe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407be050"/>
        <function-ref name="isInput" scoped="" ref="0x407be130"/>
        <function-ref name="toggle" scoped="" ref="0x407be210"/>
        <function-ref name="isOutput" scoped="" ref="0x407be2f0"/>
        <function-ref name="get" scoped="" ref="0x407be3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407be4b0"/>
        <function-ref name="set" scoped="" ref="0x407be590"/>
        <function-ref name="clr" scoped="" ref="0x407be670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407c0470" loc="47:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407c0648"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407c0728"/>
        <function-ref name="led1On" scoped="" ref="0x407c0808"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407c08e8"/>
        <function-ref name="led3Off" scoped="" ref="0x407c09c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c0aa8"/>
        <function-ref name="get" scoped="" ref="0x407c0b88"/>
        <function-ref name="led1Off" scoped="" ref="0x407c0c68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c0d48"/>
        <function-ref name="led3On" scoped="" ref="0x407c0e28"/>
        <function-ref name="led0On" scoped="" ref="0x407c0f08"/>
        <function-ref name="led2Off" scoped="" ref="0x407bf010"/>
        <function-ref name="led2On" scoped="" ref="0x407bf0f0"/>
        <function-ref name="set" scoped="" ref="0x407bf250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407be860" loc="52:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407be860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bea38"/>
        <function-ref name="isInput" scoped="" ref="0x407beb18"/>
        <function-ref name="toggle" scoped="" ref="0x407bebf8"/>
        <function-ref name="isOutput" scoped="" ref="0x407becd8"/>
        <function-ref name="get" scoped="" ref="0x407bedb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bee98"/>
        <function-ref name="set" scoped="" ref="0x407bd010"/>
        <function-ref name="clr" scoped="" ref="0x407bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407c2c20" loc="39:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407c2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c2df8"/>
        <function-ref name="isInput" scoped="" ref="0x407c2ed8"/>
        <function-ref name="toggle" scoped="" ref="0x407da010"/>
        <function-ref name="isOutput" scoped="" ref="0x407da0f0"/>
        <function-ref name="get" scoped="" ref="0x407da1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407da2b0"/>
        <function-ref name="set" scoped="" ref="0x407da390"/>
        <function-ref name="clr" scoped="" ref="0x407da470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x407d9a48" loc="42:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407d9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d9c20"/>
        <function-ref name="isInput" scoped="" ref="0x407d9d00"/>
        <function-ref name="toggle" scoped="" ref="0x407d9de0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d9ec0"/>
        <function-ref name="get" scoped="" ref="0x407d8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d80f0"/>
        <function-ref name="set" scoped="" ref="0x407d81d0"/>
        <function-ref name="clr" scoped="" ref="0x407d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x407da660" loc="40:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407da660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407da838"/>
        <function-ref name="isInput" scoped="" ref="0x407da918"/>
        <function-ref name="toggle" scoped="" ref="0x407da9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407daad8"/>
        <function-ref name="get" scoped="" ref="0x407dabb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dac98"/>
        <function-ref name="set" scoped="" ref="0x407dad78"/>
        <function-ref name="clr" scoped="" ref="0x407dae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x407d8450" loc="45:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d8628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x407d9060" loc="41:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d9238"/>
        <function-ref name="isInput" scoped="" ref="0x407d9318"/>
        <function-ref name="toggle" scoped="" ref="0x407d93f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407d94d8"/>
        <function-ref name="get" scoped="" ref="0x407d95b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d9698"/>
        <function-ref name="set" scoped="" ref="0x407d9778"/>
        <function-ref name="clr" scoped="" ref="0x407d9858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407d39e0" loc="60:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x407d39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40428c30" loc="57:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40428c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40428e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x407d35d8" loc="59:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x407d35d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d37b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x407d3010" loc="58:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x407d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d31e8"/>
        <function-ref name="taskLoop" scoped="" ref="0x407d32c8"/>
        <function-ref name="runNextTask" scoped="" ref="0x407d33a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40389330" loc="48:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40389508"/>
        <function-ref name="runTask" scoped="" ref="0x403895e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4032cb58" loc="47:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4032cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4032cd30"/>
        <function-ref name="taskLoop" scoped="" ref="0x4032ce10"/>
        <function-ref name="runNextTask" scoped="" ref="0x4032cef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403f7010" loc="56:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403f71e8"/>
        <function-ref name="runTask" scoped="" ref="0x403f72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403f7c68" loc="57:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403f7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403f7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403f8738" loc="55:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f8738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f8910"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f89f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorControl" ref="0x4080da00" loc="14:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorControl" scoped="" ref="0x4080da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensorControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x4080dbd8"/>
        <function-ref name="repeatTimer" scoped="" ref="0x4080dcb8"/>
        <function-ref name="start" scoped="" ref="0x4080dd98"/>
        <function-ref name="stop" scoped="" ref="0x4080de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40806780" loc="20:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40806780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40805330"/>
        <function-ref name="fired" scoped="" ref="0x4080e520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4080ec28"/>
        <function-ref name="isOneShot" scoped="" ref="0x4080e9d0"/>
        <function-ref name="getdt" scoped="" ref="0x408057e0"/>
        <function-ref name="gett0" scoped="" ref="0x40805588"/>
        <function-ref name="isRunning" scoped="" ref="0x4080e778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40806da8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40805010"/>
        <function-ref name="startOneShot" scoped="" ref="0x4080e048"/>
        <function-ref name="stop" scoped="" ref="0x4080e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x407fa010" loc="9:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x407fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407fa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Serial" ref="0x4081c340" loc="21:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Serial" scoped="" ref="0x4081c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4081c518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407fa358" loc="10:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407fa358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407fa530"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407fa610"/>
        <function-ref name="led1On" scoped="" ref="0x407fa6f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407fa7d0"/>
        <function-ref name="led3Off" scoped="" ref="0x407fa8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407fa990"/>
        <function-ref name="get" scoped="" ref="0x407faa70"/>
        <function-ref name="led1Off" scoped="" ref="0x407fab50"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407fac30"/>
        <function-ref name="led3On" scoped="" ref="0x407fad10"/>
        <function-ref name="led0On" scoped="" ref="0x407fadf0"/>
        <function-ref name="led2Off" scoped="" ref="0x407faed0"/>
        <function-ref name="led2On" scoped="" ref="0x407f9010"/>
        <function-ref name="set" scoped="" ref="0x407f9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminateControl" ref="0x4081c798" loc="22:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminateControl" scoped="" ref="0x4081c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4081c970"/>
        <function-ref name="stop" scoped="" ref="0x4081ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MobileControl" ref="0x40811108" loc="17:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MobileControl" scoped="" ref="0x40811108"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensorControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x408112e0"/>
        <function-ref name="repeatTimer" scoped="" ref="0x408113c0"/>
        <function-ref name="start" scoped="" ref="0x408114a0"/>
        <function-ref name="stop" scoped="" ref="0x40811580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BaseControl" ref="0x40810b40" loc="13:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseControl" scoped="" ref="0x40810b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x40810d18"/>
        <function-ref name="repeatTimer" scoped="" ref="0x40810df8"/>
        <function-ref name="start" scoped="" ref="0x40810ed8"/>
        <function-ref name="stop" scoped="" ref="0x407f8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MarkerControl" ref="0x408117f0" loc="18:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MarkerControl" scoped="" ref="0x408117f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensorControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x408119c8"/>
        <function-ref name="repeatTimer" scoped="" ref="0x40811aa8"/>
        <function-ref name="start" scoped="" ref="0x40811b88"/>
        <function-ref name="stop" scoped="" ref="0x40811c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408180a0" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="YggdrasilAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408180a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40813b88"/>
        <function-ref name="fired" scoped="" ref="0x40818e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40813548"/>
        <function-ref name="isOneShot" scoped="" ref="0x408132f0"/>
        <function-ref name="getdt" scoped="" ref="0x40944048"/>
        <function-ref name="gett0" scoped="" ref="0x40813de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40813098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408186c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40813868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40818948"/>
        <function-ref name="stop" scoped="" ref="0x40818bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40812378" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40812378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082be58"/>
        <function-ref name="fired" scoped="" ref="0x4082b110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4082b818"/>
        <function-ref name="isOneShot" scoped="" ref="0x4082b5c0"/>
        <function-ref name="getdt" scoped="" ref="0x4082a348"/>
        <function-ref name="gett0" scoped="" ref="0x4082a0f0"/>
        <function-ref name="isRunning" scoped="" ref="0x4082b368"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408129a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4082bb38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40812c20"/>
        <function-ref name="stop" scoped="" ref="0x40812ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40828900" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40828900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40827db0"/>
        <function-ref name="fired" scoped="" ref="0x40827580"/>
        <function-ref name="startAt" scoped="" ref="0x40827a70"/>
        <function-ref name="isRunning" scoped="" ref="0x408277f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x408f9048"/>
        <function-ref name="start" scoped="" ref="0x40827068"/>
        <function-ref name="stop" scoped="" ref="0x40827308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41368bd0" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41368bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413660a8"/>
        <function-ref name="fired" scoped="" ref="0x41367858"/>
        <function-ref name="startAt" scoped="" ref="0x41367d48"/>
        <function-ref name="isRunning" scoped="" ref="0x41367ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41366320"/>
        <function-ref name="start" scoped="" ref="0x41367340"/>
        <function-ref name="stop" scoped="" ref="0x413675e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x413a46e0" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x413a46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x413a21a0"/>
        <function-ref name="test" scoped="" ref="0x413a3528"/>
        <function-ref name="fired" scoped="" ref="0x413a32b0"/>
        <function-ref name="force" scoped="" ref="0x413a26b8"/>
        <function-ref name="get" scoped="" ref="0x413a4d28"/>
        <function-ref name="reset" scoped="" ref="0x413a37a0"/>
        <function-ref name="getMode" scoped="" ref="0x413a2440"/>
        <function-ref name="isOn" scoped="" ref="0x413a3f08"/>
        <function-ref name="set" scoped="" ref="0x413a3010"/>
        <function-ref name="start" scoped="" ref="0x413a3a18"/>
        <function-ref name="stop" scoped="" ref="0x413a3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4135ccf8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4135ccf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4135a1e8"/>
        <function-ref name="fired" scoped="" ref="0x4135b990"/>
        <function-ref name="startAt" scoped="" ref="0x4135be80"/>
        <function-ref name="isRunning" scoped="" ref="0x4135bc08"/>
        <function-ref name="getAlarm" scoped="" ref="0x4135a460"/>
        <function-ref name="start" scoped="" ref="0x4135b478"/>
        <function-ref name="stop" scoped="" ref="0x4135b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4135c8c0" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4135c8c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4135ca98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4135a730" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4135a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x413a41a0"/>
        <function-ref name="test" scoped="" ref="0x41359528"/>
        <function-ref name="get" scoped="" ref="0x4135ad78"/>
        <function-ref name="reset" scoped="" ref="0x413597a0"/>
        <function-ref name="getMode" scoped="" ref="0x413a4440"/>
        <function-ref name="overflow" scoped="" ref="0x413592b0"/>
        <function-ref name="isOn" scoped="" ref="0x41359f08"/>
        <function-ref name="set" scoped="" ref="0x41359010"/>
        <function-ref name="start" scoped="" ref="0x41359a18"/>
        <function-ref name="stop" scoped="" ref="0x41359c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40846358" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40846358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4085fda8"/>
        <function-ref name="test" scoped="" ref="0x4085f150"/>
        <function-ref name="get" scoped="" ref="0x408469a0"/>
        <function-ref name="reset" scoped="" ref="0x4085f3c8"/>
        <function-ref name="getMode" scoped="" ref="0x4085e068"/>
        <function-ref name="overflow" scoped="" ref="0x40846eb8"/>
        <function-ref name="isOn" scoped="" ref="0x4085fb30"/>
        <function-ref name="set" scoped="" ref="0x40846c18"/>
        <function-ref name="start" scoped="" ref="0x4085f640"/>
        <function-ref name="stop" scoped="" ref="0x4085f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4085bac0" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4085bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40858538"/>
        <function-ref name="test" scoped="" ref="0x408598b0"/>
        <function-ref name="fired" scoped="" ref="0x40859638"/>
        <function-ref name="get" scoped="" ref="0x40859120"/>
        <function-ref name="reset" scoped="" ref="0x40859b28"/>
        <function-ref name="getMode" scoped="" ref="0x408587d8"/>
        <function-ref name="isOn" scoped="" ref="0x408582c0"/>
        <function-ref name="set" scoped="" ref="0x40859398"/>
        <function-ref name="start" scoped="" ref="0x40859da0"/>
        <function-ref name="stop" scoped="" ref="0x40858048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4085e730" loc="42:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4085e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4085b1a0"/>
        <function-ref name="test" scoped="" ref="0x4085c528"/>
        <function-ref name="fired" scoped="" ref="0x4085c2b0"/>
        <function-ref name="force" scoped="" ref="0x4085b6b8"/>
        <function-ref name="get" scoped="" ref="0x4085ed78"/>
        <function-ref name="reset" scoped="" ref="0x4085c7a0"/>
        <function-ref name="getMode" scoped="" ref="0x4085b440"/>
        <function-ref name="isOn" scoped="" ref="0x4085cf08"/>
        <function-ref name="set" scoped="" ref="0x4085c010"/>
        <function-ref name="start" scoped="" ref="0x4085ca18"/>
        <function-ref name="stop" scoped="" ref="0x4085cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4086d4b0" loc="42:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4086d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4086cf18"/>
        <function-ref name="test" scoped="" ref="0x4086c2c0"/>
        <function-ref name="fired" scoped="" ref="0x4086c048"/>
        <function-ref name="force" scoped="" ref="0x4086b448"/>
        <function-ref name="get" scoped="" ref="0x4086daf8"/>
        <function-ref name="reset" scoped="" ref="0x4086c538"/>
        <function-ref name="getMode" scoped="" ref="0x4086b1d0"/>
        <function-ref name="isOn" scoped="" ref="0x4086cca0"/>
        <function-ref name="set" scoped="" ref="0x4086dd70"/>
        <function-ref name="start" scoped="" ref="0x4086c7b0"/>
        <function-ref name="stop" scoped="" ref="0x4086ca28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40861010" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40861010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x408611e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4086b840" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4086b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408682c0"/>
        <function-ref name="test" scoped="" ref="0x40869628"/>
        <function-ref name="fired" scoped="" ref="0x408693b0"/>
        <function-ref name="force" scoped="" ref="0x408687d8"/>
        <function-ref name="get" scoped="" ref="0x4086be88"/>
        <function-ref name="reset" scoped="" ref="0x408698a0"/>
        <function-ref name="getMode" scoped="" ref="0x40868560"/>
        <function-ref name="isOn" scoped="" ref="0x40868048"/>
        <function-ref name="set" scoped="" ref="0x40869110"/>
        <function-ref name="start" scoped="" ref="0x40869b18"/>
        <function-ref name="stop" scoped="" ref="0x40869d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408553a0" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408553a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40854df8"/>
        <function-ref name="test" scoped="" ref="0x408541a0"/>
        <function-ref name="get" scoped="" ref="0x408559e8"/>
        <function-ref name="reset" scoped="" ref="0x40854418"/>
        <function-ref name="getMode" scoped="" ref="0x4086d0b8"/>
        <function-ref name="overflow" scoped="" ref="0x40855f00"/>
        <function-ref name="isOn" scoped="" ref="0x40854b80"/>
        <function-ref name="set" scoped="" ref="0x40855c60"/>
        <function-ref name="start" scoped="" ref="0x40854690"/>
        <function-ref name="stop" scoped="" ref="0x40854908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40861400" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40861400"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408615d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40864010" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40864010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40863a68"/>
        <function-ref name="test" scoped="" ref="0x40864de8"/>
        <function-ref name="fired" scoped="" ref="0x40864b70"/>
        <function-ref name="get" scoped="" ref="0x40864658"/>
        <function-ref name="reset" scoped="" ref="0x40863088"/>
        <function-ref name="getMode" scoped="" ref="0x40863d08"/>
        <function-ref name="isOn" scoped="" ref="0x408637f0"/>
        <function-ref name="set" scoped="" ref="0x408648d0"/>
        <function-ref name="start" scoped="" ref="0x40863300"/>
        <function-ref name="stop" scoped="" ref="0x40863578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40868bd0" loc="44:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40868bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40865640"/>
        <function-ref name="test" scoped="" ref="0x408679c8"/>
        <function-ref name="fired" scoped="" ref="0x40867750"/>
        <function-ref name="force" scoped="" ref="0x40865b58"/>
        <function-ref name="get" scoped="" ref="0x40867238"/>
        <function-ref name="reset" scoped="" ref="0x40867c40"/>
        <function-ref name="getMode" scoped="" ref="0x408658e0"/>
        <function-ref name="isOn" scoped="" ref="0x408653c8"/>
        <function-ref name="set" scoped="" ref="0x408674b0"/>
        <function-ref name="start" scoped="" ref="0x40867eb8"/>
        <function-ref name="stop" scoped="" ref="0x40865150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408b9128" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408b9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b9878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b9d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b9af0"/>
        <function-ref name="overflow" scoped="" ref="0x408b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b6088" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b6088"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408b64c0" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408b64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b6c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b5110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b6e88"/>
        <function-ref name="overflow" scoped="" ref="0x408b5388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x408b5658" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x408b5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408ce0b8"/>
        <function-ref name="test" scoped="" ref="0x408b4448"/>
        <function-ref name="get" scoped="" ref="0x408b5ca0"/>
        <function-ref name="reset" scoped="" ref="0x408b46c0"/>
        <function-ref name="getMode" scoped="" ref="0x408ce358"/>
        <function-ref name="overflow" scoped="" ref="0x408b41d0"/>
        <function-ref name="isOn" scoped="" ref="0x408b4e28"/>
        <function-ref name="set" scoped="" ref="0x408b5f18"/>
        <function-ref name="start" scoped="" ref="0x408b4938"/>
        <function-ref name="stop" scoped="" ref="0x408b4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408cc7a0" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408cc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ccef0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c8418"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c81a0"/>
        <function-ref name="overflow" scoped="" ref="0x408c8690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408c4010" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x408c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c4760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c4c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c49d8"/>
        <function-ref name="overflow" scoped="" ref="0x408c4ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408c7d60" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408c7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c64e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c69d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c6760"/>
        <function-ref name="overflow" scoped="" ref="0x408c6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413655a0" loc="61:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413655a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41363ab8"/>
        <function-ref name="fired" scoped="" ref="0x41363288"/>
        <function-ref name="startAt" scoped="" ref="0x41363778"/>
        <function-ref name="isRunning" scoped="" ref="0x41363500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41363d30"/>
        <function-ref name="start" scoped="" ref="0x41365cf0"/>
        <function-ref name="stop" scoped="" ref="0x41363010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41361380" loc="73:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41361380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41360840"/>
        <function-ref name="fired" scoped="" ref="0x41360010"/>
        <function-ref name="startAt" scoped="" ref="0x41360500"/>
        <function-ref name="isRunning" scoped="" ref="0x41360288"/>
        <function-ref name="getAlarm" scoped="" ref="0x41360ab8"/>
        <function-ref name="start" scoped="" ref="0x41361ad0"/>
        <function-ref name="stop" scoped="" ref="0x41361d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x413620a0" loc="68:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413627f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41362ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41362a68"/>
        <function-ref name="overflow" scoped="" ref="0x41361010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x408fc298" loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x408fc298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fc470"/>
        <function-ref name="runTask" scoped="" ref="0x408fc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408ff8d8" loc="49:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408ff8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408fdd90"/>
        <function-ref name="fired" scoped="" ref="0x408fd560"/>
        <function-ref name="startAt" scoped="" ref="0x408fda50"/>
        <function-ref name="isRunning" scoped="" ref="0x408fd7d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x408fc048"/>
        <function-ref name="start" scoped="" ref="0x408fd048"/>
        <function-ref name="stop" scoped="" ref="0x408fd2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408f75d8" loc="48:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408f75d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408ff0d8"/>
        <function-ref name="fired" scoped="" ref="0x40900368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40900a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40900818"/>
        <function-ref name="getdt" scoped="" ref="0x408ff588"/>
        <function-ref name="gett0" scoped="" ref="0x408ff330"/>
        <function-ref name="isRunning" scoped="" ref="0x409005c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408f7c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40900d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x408f7e80"/>
        <function-ref name="stop" scoped="" ref="0x40900110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40929050" loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40929050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40929228"/>
        <function-ref name="runTask" scoped="" ref="0x40929308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4092de30" loc="49:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4092de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4092a920"/>
        <function-ref name="fired" scoped="" ref="0x4092bbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4092a2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4092a088"/>
        <function-ref name="getdt" scoped="" ref="0x4092add0"/>
        <function-ref name="gett0" scoped="" ref="0x4092ab78"/>
        <function-ref name="isRunning" scoped="" ref="0x4092be18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4092b468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4092a600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4092b6e8"/>
        <function-ref name="stop" scoped="" ref="0x4092b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40917a60" loc="48:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40917a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4092d670"/>
        <function-ref name="fired" scoped="" ref="0x4092e840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4092d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4092ed10"/>
        <function-ref name="getdt" scoped="" ref="0x4092db40"/>
        <function-ref name="gett0" scoped="" ref="0x4092d8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x4092eaa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4092e0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4092d340"/>
        <function-ref name="startOneShot" scoped="" ref="0x4092e348"/>
        <function-ref name="stop" scoped="" ref="0x4092e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x40941180" loc="12:./ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadId48" scoped="" ref="0x40941180"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40941358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x40954278" loc="16:./ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWire" scoped="" ref="0x40954278"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireStream"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40954450"/>
        <function-ref name="write" scoped="" ref="0x40954530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x4093aa38" loc="13:./ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadId48" scoped="" ref="0x4093aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4093ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409546a0" loc="17:./ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409546a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40954878"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40954958"/>
        <function-ref name="led1On" scoped="" ref="0x40954a38"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40954b18"/>
        <function-ref name="led3Off" scoped="" ref="0x40954bf8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40954cd8"/>
        <function-ref name="get" scoped="" ref="0x40954db8"/>
        <function-ref name="led1Off" scoped="" ref="0x40954e98"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40939010"/>
        <function-ref name="led3On" scoped="" ref="0x409390f0"/>
        <function-ref name="led0On" scoped="" ref="0x409391d0"/>
        <function-ref name="led2Off" scoped="" ref="0x409392b0"/>
        <function-ref name="led2On" scoped="" ref="0x40939390"/>
        <function-ref name="set" scoped="" ref="0x409394f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWirePin" ref="0x409407c0" loc="10:./ds2411/PlatformOneWireLowLevelC.nc">
      <component-ref qname="PlatformOneWireLowLevelC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWirePin" scoped="" ref="0x409407c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40940998"/>
        <function-ref name="isInput" scoped="" ref="0x40940a78"/>
        <function-ref name="toggle" scoped="" ref="0x40940b58"/>
        <function-ref name="isOutput" scoped="" ref="0x40940c38"/>
        <function-ref name="get" scoped="" ref="0x40940d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40940df8"/>
        <function-ref name="set" scoped="" ref="0x40940ed8"/>
        <function-ref name="clr" scoped="" ref="0x4094d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWirePin" ref="0x4094ad00" loc="13:./ds2411/PlatformOneWireLowLevelP.nc">
      <component-ref qname="PlatformOneWireLowLevelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWirePin" scoped="" ref="0x4094ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4094aed8"/>
        <function-ref name="isInput" scoped="" ref="0x40949010"/>
        <function-ref name="toggle" scoped="" ref="0x409490f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409491d0"/>
        <function-ref name="get" scoped="" ref="0x409492b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40949390"/>
        <function-ref name="set" scoped="" ref="0x40949470"/>
        <function-ref name="clr" scoped="" ref="0x40949550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40949720" loc="15:./ds2411/PlatformOneWireLowLevelP.nc">
      <component-ref qname="PlatformOneWireLowLevelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40949720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409498f8"/>
        <function-ref name="isInput" scoped="" ref="0x409499d8"/>
        <function-ref name="toggle" scoped="" ref="0x40949ab8"/>
        <function-ref name="isOutput" scoped="" ref="0x40949b98"/>
        <function-ref name="get" scoped="" ref="0x40949c78"/>
        <function-ref name="makeOutput" scoped="" ref="0x40949d58"/>
        <function-ref name="set" scoped="" ref="0x40949e38"/>
        <function-ref name="clr" scoped="" ref="0x40949f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PIR_IO" ref="0x4095e900" loc="4:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <component-ref qname="PlatformIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PIR_IO" scoped="" ref="0x4095e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095ead8"/>
        <function-ref name="isInput" scoped="" ref="0x4095ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x4095ec98"/>
        <function-ref name="isOutput" scoped="" ref="0x4095ed78"/>
        <function-ref name="get" scoped="" ref="0x4095ee58"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095d010"/>
        <function-ref name="set" scoped="" ref="0x4095d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4095d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PIR2_IO" ref="0x4095d3f8" loc="5:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <component-ref qname="PlatformIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PIR2_IO" scoped="" ref="0x4095d3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095d5d0"/>
        <function-ref name="isInput" scoped="" ref="0x4095d6b0"/>
        <function-ref name="toggle" scoped="" ref="0x4095d790"/>
        <function-ref name="isOutput" scoped="" ref="0x4095d870"/>
        <function-ref name="get" scoped="" ref="0x4095d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095da30"/>
        <function-ref name="set" scoped="" ref="0x4095db10"/>
        <function-ref name="clr" scoped="" ref="0x4095dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialID" ref="0x4094c460" loc="2:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <component-ref qname="PlatformIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialID" scoped="" ref="0x4094c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4094c638"/>
        <function-ref name="isInput" scoped="" ref="0x4094c718"/>
        <function-ref name="toggle" scoped="" ref="0x4094c7f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4094c8d8"/>
        <function-ref name="get" scoped="" ref="0x4094c9b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4094ca98"/>
        <function-ref name="set" scoped="" ref="0x4094cb78"/>
        <function-ref name="clr" scoped="" ref="0x4094cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PIR_Power" ref="0x4094ce98" loc="3:/opt/tinyos/tos/platforms/ucmini/PlatformIOC.nc">
      <component-ref qname="PlatformIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PIR_Power" scoped="" ref="0x4094ce98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4095e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4095e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4095e360"/>
        <function-ref name="get" scoped="" ref="0x4095e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095e520"/>
        <function-ref name="set" scoped="" ref="0x4095e600"/>
        <function-ref name="clr" scoped="" ref="0x4095e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x4095a0a8" loc="9:./ds2411/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWire" scoped="" ref="0x4095a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireStream"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4095a280"/>
        <function-ref name="write" scoped="" ref="0x4095a360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x4095a580" loc="12:./ds2411/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4095a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095a758"/>
        <function-ref name="isInput" scoped="" ref="0x4095a838"/>
        <function-ref name="toggle" scoped="" ref="0x4095a918"/>
        <function-ref name="isOutput" scoped="" ref="0x4095a9f8"/>
        <function-ref name="get" scoped="" ref="0x4095aad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095abb8"/>
        <function-ref name="set" scoped="" ref="0x4095ac98"/>
        <function-ref name="clr" scoped="" ref="0x4095ad78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BaseControl" ref="0x40942388" loc="5:./Sensor/99Base/BaseC.nc">
      <component-ref qname="BaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseControl" scoped="" ref="0x40942388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x40942560"/>
        <function-ref name="repeatTimer" scoped="" ref="0x40942640"/>
        <function-ref name="start" scoped="" ref="0x40942720"/>
        <function-ref name="stop" scoped="" ref="0x40942800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40991538" loc="46:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40991538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40991710"/>
        <function-ref name="setRoot" scoped="" ref="0x409917f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x409918d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CO2S100Rev" ref="0x4097ed00" loc="29:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CO2S100Rev" scoped="" ref="0x4097ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097eed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MAXCO2Rev" ref="0x4097d128" loc="30:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAXCO2Rev" scoped="" ref="0x4097d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097d300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x40994de0" loc="45:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40994de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40979010"/>
        <function-ref name="setOrigin" scoped="" ref="0x409790f0"/>
        <function-ref name="setType" scoped="" ref="0x409791d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x409792b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40979390"/>
        <function-ref name="getType" scoped="" ref="0x40979470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40982ef8" loc="15:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40982ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409810e0"/>
        <function-ref name="stopDone" scoped="" ref="0x409811c0"/>
        <function-ref name="start" scoped="" ref="0x409812a0"/>
        <function-ref name="stop" scoped="" ref="0x40981380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="USRev" ref="0x4097c4b0" loc="35:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USRev" scoped="" ref="0x4097c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097c688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x409a3480" loc="59:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x409a3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409a3658"/>
        <function-ref name="runTask" scoped="" ref="0x409a3738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DUMMYRev" ref="0x4097b468" loc="40:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DUMMYRev" scoped="" ref="0x4097b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097b740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PIRRev" ref="0x4097e118" loc="26:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PIRRev" scoped="" ref="0x4097e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMReceive" ref="0x4097b948" loc="42:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMReceive" scoped="" ref="0x4097b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097bb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="baseSendTask" ref="0x409a3c88" loc="60:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="baseSendTask" scoped="" ref="0x409a3c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409a3e60"/>
        <function-ref name="runTask" scoped="" ref="0x409a2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x40980e08" loc="21:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40980e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40982818" loc="14:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40982818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409829f0"/>
        <function-ref name="stopDone" scoped="" ref="0x40982ad0"/>
        <function-ref name="start" scoped="" ref="0x40982bb0"/>
        <function-ref name="stop" scoped="" ref="0x40982c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x409806d0" loc="20:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409806d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409808a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40980988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40980a68"/>
        <function-ref name="cancel" scoped="" ref="0x40980b48"/>
        <function-ref name="sendDone" scoped="" ref="0x40980c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VOCSRev" ref="0x4097d4f0" loc="31:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VOCSRev" scoped="" ref="0x4097d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097d6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x4098c1e8" loc="49:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x4098c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4098b2c0"/>
        <function-ref name="maxSize" scoped="" ref="0x4098ccc0"/>
        <function-ref name="empty" scoped="" ref="0x4098c810"/>
        <function-ref name="put" scoped="" ref="0x4098cf18"/>
        <function-ref name="size" scoped="" ref="0x4098ca68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CO2Rev" ref="0x4097e918" loc="28:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CO2Rev" scoped="" ref="0x4097e918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x4097bd28" loc="44:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x4097bd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097bf00"/>
        <function-ref name="getPayload" scoped="" ref="0x4097a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4097a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4097a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x409815d8" loc="16:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x409815d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409817b0"/>
        <function-ref name="stop" scoped="" ref="0x40981890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPlugRev" ref="0x4097c888" loc="36:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPlugRev" scoped="" ref="0x4097c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckRev" ref="0x4097f1f8" loc="22:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRev" scoped="" ref="0x4097f1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="POWRev" ref="0x4097e4d8" loc="27:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="POWRev" scoped="" ref="0x4097e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097e730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409a5a20" loc="53:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409a5bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409a5cd8"/>
        <function-ref name="led1On" scoped="" ref="0x409a5db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409a5e98"/>
        <function-ref name="led3Off" scoped="" ref="0x409a4010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409a40f0"/>
        <function-ref name="get" scoped="" ref="0x409a41d0"/>
        <function-ref name="led1Off" scoped="" ref="0x409a42b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409a4390"/>
        <function-ref name="led3On" scoped="" ref="0x409a4470"/>
        <function-ref name="led0On" scoped="" ref="0x409a4550"/>
        <function-ref name="led2Off" scoped="" ref="0x409a4630"/>
        <function-ref name="led2On" scoped="" ref="0x409a4710"/>
        <function-ref name="set" scoped="" ref="0x409a4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThermoLoggerRev" ref="0x4097c0f8" loc="34:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThermoLoggerRev" scoped="" ref="0x4097c0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097c2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="THRev" ref="0x4097f978" loc="24:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="THRev" scoped="" ref="0x4097f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097fb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPlug2Rev" ref="0x4097cc68" loc="37:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPlug2Rev" scoped="" ref="0x4097cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097ce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BaseRev" ref="0x4097f5c0" loc="23:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseRev" scoped="" ref="0x4097f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097f798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TH20Rev" ref="0x4097fd40" loc="25:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TH20Rev" scoped="" ref="0x4097fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097ff18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MARKERRev" ref="0x4097b090" loc="39:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MARKERRev" scoped="" ref="0x4097b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097b268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BaseControl" ref="0x409820f0" loc="10:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseControl" scoped="" ref="0x409820f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x409822c8"/>
        <function-ref name="repeatTimer" scoped="" ref="0x409823a8"/>
        <function-ref name="start" scoped="" ref="0x40982488"/>
        <function-ref name="stop" scoped="" ref="0x40982568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40981a28" loc="17:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40981a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40981c00"/>
        <function-ref name="source" scoped="" ref="0x40981ce0"/>
        <function-ref name="address" scoped="" ref="0x40981dc0"/>
        <function-ref name="destination" scoped="" ref="0x40981ea0"/>
        <function-ref name="setSource" scoped="" ref="0x40980010"/>
        <function-ref name="setDestination" scoped="" ref="0x409800f0"/>
        <function-ref name="type" scoped="" ref="0x409801d0"/>
        <function-ref name="setType" scoped="" ref="0x409802b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40980390"/>
        <function-ref name="setGroup" scoped="" ref="0x40980470"/>
        <function-ref name="localGroup" scoped="" ref="0x40980550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ETYPERev" ref="0x4097dca0" loc="33:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ETYPERev" scoped="" ref="0x4097dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x4098eee8" loc="48:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x4098eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40993c60"/>
        <function-ref name="enqueue" scoped="" ref="0x4098d380"/>
        <function-ref name="element" scoped="" ref="0x4098d6d0"/>
        <function-ref name="maxSize" scoped="" ref="0x40993a08"/>
        <function-ref name="dequeue" scoped="" ref="0x4098d010"/>
        <function-ref name="empty" scoped="" ref="0x40993558"/>
        <function-ref name="size" scoped="" ref="0x409937b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOLARRev" ref="0x4097d8c8" loc="32:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SOLARRev" scoped="" ref="0x4097d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4098b760" loc="52:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4098b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409a5330"/>
        <function-ref name="fired" scoped="" ref="0x40987520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40987c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x409879d0"/>
        <function-ref name="getdt" scoped="" ref="0x409a57e0"/>
        <function-ref name="gett0" scoped="" ref="0x409a5588"/>
        <function-ref name="isRunning" scoped="" ref="0x40987778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4098bd88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409a5010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40987048"/>
        <function-ref name="stop" scoped="" ref="0x409872c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409f3678" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409f3678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409f0170"/>
        <function-ref name="fired" scoped="" ref="0x409f2410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409f2b18"/>
        <function-ref name="isOneShot" scoped="" ref="0x409f28c0"/>
        <function-ref name="getdt" scoped="" ref="0x409f0620"/>
        <function-ref name="gett0" scoped="" ref="0x409f03c8"/>
        <function-ref name="isRunning" scoped="" ref="0x409f2668"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409f3ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409f2e38"/>
        <function-ref name="startOneShot" scoped="" ref="0x409f3f20"/>
        <function-ref name="stop" scoped="" ref="0x409f21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40a14738" loc="33:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40a14738"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40a14910"/>
        <function-ref name="setRoot" scoped="" ref="0x40a149f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40a14ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40a08060" loc="28:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40a08060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a08238"/>
        <function-ref name="setOrigin" scoped="" ref="0x40a08318"/>
        <function-ref name="setType" scoped="" ref="0x40a083f8"/>
        <function-ref name="getOrigin" scoped="" ref="0x40a084d8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a085b8"/>
        <function-ref name="getType" scoped="" ref="0x40a08698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40a045b0" loc="25:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40a045b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40a04788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a04908" loc="27:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a04908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a04ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a04bc0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a04ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a04d80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a04e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x409e79c8" loc="24:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x409e79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409e98f8" loc="22:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409e98f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e9ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x409e9bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e9c90"/>
        <function-ref name="cancel" scoped="" ref="0x409e9d70"/>
        <function-ref name="sendDone" scoped="" ref="0x409e9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40a16968" loc="31:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40a16968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40a16b40"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40a16c20"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40a16d00"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40a16de0"/>
        <function-ref name="getEtx" scoped="" ref="0x40a16ec0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40a05010"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40a050f0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40a051d0"/>
        <function-ref name="getParent" scoped="" ref="0x40a052b0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40a05390"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40a05470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409e7318" loc="23:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409e7318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40a142d0" loc="32:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40a142d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40a144a8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40a14588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Talk" ref="0x40a13640" loc="34:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Talk" scoped="" ref="0x40a13640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Talk"/>
      </instance>
      <interface-functions>
        <function-ref name="get_s71" scoped="" ref="0x40a13818"/>
        <function-ref name="get_r71" scoped="" ref="0x40a138f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x409fb4e8" loc="29:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x409fb4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x409fb6c0"/>
        <function-ref name="option" scoped="" ref="0x409fb7a0"/>
        <function-ref name="setEtx" scoped="" ref="0x409fb880"/>
        <function-ref name="setOrigin" scoped="" ref="0x409fb960"/>
        <function-ref name="clearOption" scoped="" ref="0x409fba40"/>
        <function-ref name="getEtx" scoped="" ref="0x409fbb20"/>
        <function-ref name="getOrigin" scoped="" ref="0x409fbc00"/>
        <function-ref name="setType" scoped="" ref="0x409fbce0"/>
        <function-ref name="setOption" scoped="" ref="0x409fbdc0"/>
        <function-ref name="matchPacket" scoped="" ref="0x409fbea0"/>
        <function-ref name="getThl" scoped="" ref="0x40a07010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a070f0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40a071d0"/>
        <function-ref name="getType" scoped="" ref="0x40a07330"/>
        <function-ref name="setThl" scoped="" ref="0x40a07410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409e91c8" loc="21:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409e91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409e93a0"/>
        <function-ref name="stop" scoped="" ref="0x409e9480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40a12628" loc="38:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40a12628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40a12880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40a0a010" loc="81:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40a0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40a0a1e8"/>
        <function-ref name="setRoot" scoped="" ref="0x40a0a2c8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40a0a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40a0e980" loc="75:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40a0e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a0eb58"/>
        <function-ref name="setOrigin" scoped="" ref="0x40a0ec38"/>
        <function-ref name="setType" scoped="" ref="0x40a0ed18"/>
        <function-ref name="getOrigin" scoped="" ref="0x40a0edf8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a0eed8"/>
        <function-ref name="getType" scoped="" ref="0x40a0d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40a27178" loc="79:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40a27178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40a27350"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40a27430"/>
        <function-ref name="txNoAck" scoped="" ref="0x40a27510"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40a275f0"/>
        <function-ref name="evicted" scoped="" ref="0x40a276d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40a277b0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40a27890"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40a27970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40a0fed0" loc="72:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40a0fed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40a0e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a0e240" loc="74:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a0e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0e418"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a0e4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a0e5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a0e6b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a0e798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a0f828" loc="71:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a0f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a11740" loc="69:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a11740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a11918"/>
        <function-ref name="getPayload" scoped="" ref="0x40a119f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a11ad8"/>
        <function-ref name="cancel" scoped="" ref="0x40a11bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a11c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40a0c278" loc="78:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40a0c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40a0c450"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40a0c530"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40a0c610"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40a0c6f0"/>
        <function-ref name="getEtx" scoped="" ref="0x40a0c7d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40a0c8b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40a0c990"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40a0ca70"/>
        <function-ref name="getParent" scoped="" ref="0x40a0cb50"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40a0cc30"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40a0cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a0f178" loc="70:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a0f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40a27b38" loc="80:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40a27b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40a27d10"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40a27df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Talk" ref="0x40a0a518" loc="82:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Talk" scoped="" ref="0x40a0a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Talk"/>
      </instance>
      <interface-functions>
        <function-ref name="get_s71" scoped="" ref="0x40a0a770"/>
        <function-ref name="get_r71" scoped="" ref="0x40a0a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40a0d1b0" loc="76:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40a0d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a0d388"/>
        <function-ref name="option" scoped="" ref="0x40a0d468"/>
        <function-ref name="setEtx" scoped="" ref="0x40a0d548"/>
        <function-ref name="setOrigin" scoped="" ref="0x40a0d628"/>
        <function-ref name="clearOption" scoped="" ref="0x40a0d708"/>
        <function-ref name="getEtx" scoped="" ref="0x40a0d7e8"/>
        <function-ref name="getOrigin" scoped="" ref="0x40a0d8c8"/>
        <function-ref name="setType" scoped="" ref="0x40a0d9a8"/>
        <function-ref name="setOption" scoped="" ref="0x40a0da88"/>
        <function-ref name="matchPacket" scoped="" ref="0x40a0db68"/>
        <function-ref name="getThl" scoped="" ref="0x40a0dc48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a0dd28"/>
        <function-ref name="matchInstance" scoped="" ref="0x40a0de08"/>
        <function-ref name="getType" scoped="" ref="0x40a0c010"/>
        <function-ref name="setThl" scoped="" ref="0x40a0c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a11010" loc="68:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a11010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a111e8"/>
        <function-ref name="stop" scoped="" ref="0x40a112c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40a0ad58" loc="86:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40a0ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40a09010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a26828" loc="30:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a26828"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a26a00"/>
        <function-ref name="stopDone" scoped="" ref="0x40a26ae0"/>
        <function-ref name="start" scoped="" ref="0x40a26bc0"/>
        <function-ref name="stop" scoped="" ref="0x40a26ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a1f898" loc="35:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a1f898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a1fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a23120" loc="32:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a23120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a232f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a233d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a234b8"/>
        <function-ref name="cancel" scoped="" ref="0x40a23598"/>
        <function-ref name="sendDone" scoped="" ref="0x40a23678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a22190" loc="34:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a22190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a22368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a1fbf0" loc="37:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a1fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1fdc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1fea8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a21010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a210f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a211d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a1ae58" loc="41:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a1ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a1e050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a1e130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a1e210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a1e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a23ae0" loc="33:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a23ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a23cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a362a8" loc="44:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a362a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a36da8"/>
        <function-ref name="clear" scoped="" ref="0x40a35170"/>
        <function-ref name="isValid" scoped="" ref="0x40a369f8"/>
        <function-ref name="set" scoped="" ref="0x40a35520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40a20040" loc="40:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a20040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a20218"/>
        <function-ref name="noAck" scoped="" ref="0x40a202f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a203d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a377a0" loc="42:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a37978"/>
        <function-ref name="setRetries" scoped="" ref="0x40a37a58"/>
        <function-ref name="getRetries" scoped="" ref="0x40a37b38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a37c18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a37cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40a21368" loc="38:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a21368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a21540"/>
        <function-ref name="source" scoped="" ref="0x40a21620"/>
        <function-ref name="address" scoped="" ref="0x40a21700"/>
        <function-ref name="destination" scoped="" ref="0x40a217e0"/>
        <function-ref name="setSource" scoped="" ref="0x40a218c0"/>
        <function-ref name="setDestination" scoped="" ref="0x40a219a0"/>
        <function-ref name="type" scoped="" ref="0x40a21a80"/>
        <function-ref name="setType" scoped="" ref="0x40a21b60"/>
        <function-ref name="isForMe" scoped="" ref="0x40a21c40"/>
        <function-ref name="setGroup" scoped="" ref="0x40a21d20"/>
        <function-ref name="localGroup" scoped="" ref="0x40a21e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a35c58" loc="45:/opt/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a35c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a327a0"/>
        <function-ref name="clear" scoped="" ref="0x40a32b50"/>
        <function-ref name="isValid" scoped="" ref="0x40a323f0"/>
        <function-ref name="set" scoped="" ref="0x40a32f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a2f980" loc="46:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a2f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a2fb58"/>
        <function-ref name="stopDone" scoped="" ref="0x40a2fc38"/>
        <function-ref name="start" scoped="" ref="0x40a2fd18"/>
        <function-ref name="stop" scoped="" ref="0x40a2fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a414d8" loc="67:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a414d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3f0b8"/>
        <function-ref name="get" scoped="" ref="0x40a41de0"/>
        <function-ref name="isSet" scoped="" ref="0x40a41b20"/>
        <function-ref name="set" scoped="" ref="0x40a3f378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a5bea8" loc="72:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a5bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a5a9c0"/>
        <function-ref name="clear" scoped="" ref="0x40a5ad70"/>
        <function-ref name="isValid" scoped="" ref="0x40a5a610"/>
        <function-ref name="set" scoped="" ref="0x40a59150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a2b988" loc="51:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a2b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a2bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a4cb38" loc="57:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a4cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4cd10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a4cdf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a4ced0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a4b010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a4b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a2c2a8" loc="48:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a2c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a2c480"/>
        <function-ref name="getPayload" scoped="" ref="0x40a2c560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2c640"/>
        <function-ref name="cancel" scoped="" ref="0x40a2c720"/>
        <function-ref name="sendDone" scoped="" ref="0x40a2c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a2b310" loc="50:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a2b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a2b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a420f0" loc="66:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a420f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a42cb8"/>
        <function-ref name="get" scoped="" ref="0x40a429f8"/>
        <function-ref name="isSet" scoped="" ref="0x40a42738"/>
        <function-ref name="set" scoped="" ref="0x40a41010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a4a598" loc="61:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a4a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a4a770"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a4a850"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a4a930"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a4aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a2cc68" loc="49:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a2cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a2ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a3e478" loc="71:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a3e478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a5b010"/>
        <function-ref name="clear" scoped="" ref="0x40a5b3c0"/>
        <function-ref name="isValid" scoped="" ref="0x40a3ebc8"/>
        <function-ref name="set" scoped="" ref="0x40a5b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a5c8a0" loc="70:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a5cee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a43ce0" loc="65:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a43ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a488f0"/>
        <function-ref name="get" scoped="" ref="0x40a48630"/>
        <function-ref name="isSet" scoped="" ref="0x40a48370"/>
        <function-ref name="set" scoped="" ref="0x40a48bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40a4a010" loc="60:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a4a1e8"/>
        <function-ref name="noAck" scoped="" ref="0x40a4a2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a4a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40a4c100" loc="54:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40a4c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4c2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a4abb8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a4abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a4ad90"/>
        <function-ref name="setRetries" scoped="" ref="0x40a4ae70"/>
        <function-ref name="getRetries" scoped="" ref="0x40a49010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a490f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40a4b288" loc="58:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a4b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a4b460"/>
        <function-ref name="source" scoped="" ref="0x40a4b540"/>
        <function-ref name="address" scoped="" ref="0x40a4b620"/>
        <function-ref name="destination" scoped="" ref="0x40a4b700"/>
        <function-ref name="setSource" scoped="" ref="0x40a4b7e0"/>
        <function-ref name="setDestination" scoped="" ref="0x40a4b8c0"/>
        <function-ref name="type" scoped="" ref="0x40a4b9a0"/>
        <function-ref name="setType" scoped="" ref="0x40a4ba80"/>
        <function-ref name="isForMe" scoped="" ref="0x40a4bb60"/>
        <function-ref name="setGroup" scoped="" ref="0x40a4bc40"/>
        <function-ref name="localGroup" scoped="" ref="0x40a4bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40a45660" loc="63:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40a45660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40a458b8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a45998"/>
        <function-ref name="getChannel" scoped="" ref="0x40a45a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a3c638" loc="68:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a3c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a3c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40a4c7e0" loc="55:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40a4c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4c9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a59af8" loc="42:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a59af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a59cd0"/>
        <function-ref name="stopDone" scoped="" ref="0x40a59db0"/>
        <function-ref name="start" scoped="" ref="0x40a59e90"/>
        <function-ref name="stop" scoped="" ref="0x40a55010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a62f08" loc="81:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a62f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a60af8"/>
        <function-ref name="get" scoped="" ref="0x40a60838"/>
        <function-ref name="isSet" scoped="" ref="0x40a60578"/>
        <function-ref name="set" scoped="" ref="0x40a60db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40a500c8" loc="61:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40a500c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a502a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40a6b820" loc="63:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40a6b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a6ba78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a6bb58"/>
        <function-ref name="request" scoped="" ref="0x40a6bc38"/>
        <function-ref name="granted" scoped="" ref="0x40a6bd18"/>
        <function-ref name="isOwner" scoped="" ref="0x40a6bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a54b88" loc="48:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a54b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a54d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a55470" loc="45:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a55470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a55648"/>
        <function-ref name="getPayload" scoped="" ref="0x40a55728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a55808"/>
        <function-ref name="cancel" scoped="" ref="0x40a558e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a559c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a54510" loc="47:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a54510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a546e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40a669c0" loc="65:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40a669c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40a66b98"/>
        <function-ref name="address" scoped="" ref="0x40a66c78"/>
        <function-ref name="destination" scoped="" ref="0x40a66d58"/>
        <function-ref name="setSource" scoped="" ref="0x40a66e38"/>
        <function-ref name="setDestination" scoped="" ref="0x40a66f18"/>
        <function-ref name="pan" scoped="" ref="0x40a6a010"/>
        <function-ref name="setPan" scoped="" ref="0x40a6a0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40a6a1d0"/>
        <function-ref name="localPan" scoped="" ref="0x40a6a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40a6a538" loc="66:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40a6a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a6a710"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a6a7f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a6a8d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a6a9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a6aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a63ae8" loc="80:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a63ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a62780"/>
        <function-ref name="get" scoped="" ref="0x40a624c0"/>
        <function-ref name="isSet" scoped="" ref="0x40a62200"/>
        <function-ref name="set" scoped="" ref="0x40a62a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a692e0" loc="70:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a692e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a694b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a69598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a69678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a69758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40a52a70" loc="55:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40a52a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a52c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a52d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40a52e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a52ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a51010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a55e30" loc="46:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a55e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a54050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a81260" loc="85:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a81260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a81e60"/>
        <function-ref name="clear" scoped="" ref="0x40a80230"/>
        <function-ref name="isValid" scoped="" ref="0x40a81ab0"/>
        <function-ref name="set" scoped="" ref="0x40a805e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a5f678" loc="84:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a5fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a64730" loc="79:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a64730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a63308"/>
        <function-ref name="get" scoped="" ref="0x40a63048"/>
        <function-ref name="isSet" scoped="" ref="0x40a64d78"/>
        <function-ref name="set" scoped="" ref="0x40a635c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40a6acb0" loc="69:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a6acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a6ae88"/>
        <function-ref name="noAck" scoped="" ref="0x40a69010"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40a6e458" loc="59:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40a6e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a6e630"/>
        <function-ref name="getPayload" scoped="" ref="0x40a6e710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a6e7f0"/>
        <function-ref name="cancel" scoped="" ref="0x40a6e8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a6e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40a532a8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40a532a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a53480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a69900" loc="71:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a69900"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a69ad8"/>
        <function-ref name="setRetries" scoped="" ref="0x40a69bb8"/>
        <function-ref name="getRetries" scoped="" ref="0x40a69c98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a69d78"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a69e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40a64040" loc="77:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40a64040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40a64218"/>
        <function-ref name="setChannel" scoped="" ref="0x40a642f8"/>
        <function-ref name="getChannel" scoped="" ref="0x40a643d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40a53cf8" loc="54:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a53cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a53ed0"/>
        <function-ref name="source" scoped="" ref="0x40a52010"/>
        <function-ref name="address" scoped="" ref="0x40a520f0"/>
        <function-ref name="destination" scoped="" ref="0x40a521d0"/>
        <function-ref name="setSource" scoped="" ref="0x40a522b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40a52390"/>
        <function-ref name="type" scoped="" ref="0x40a52470"/>
        <function-ref name="setType" scoped="" ref="0x40a52550"/>
        <function-ref name="isForMe" scoped="" ref="0x40a52630"/>
        <function-ref name="setGroup" scoped="" ref="0x40a52710"/>
        <function-ref name="localGroup" scoped="" ref="0x40a527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a80d18" loc="86:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a80d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a7f828"/>
        <function-ref name="clear" scoped="" ref="0x40a7fbd8"/>
        <function-ref name="isValid" scoped="" ref="0x40a7f478"/>
        <function-ref name="set" scoped="" ref="0x40a7d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40a6ebe8" loc="60:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40a6ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a6edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a5f180" loc="82:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a5f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a5f358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40a53988" loc="52:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40a53988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a53b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40a85240" loc="52:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40a85240"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a85418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40a71d20" loc="48:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40a71d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40a71ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40a862d0" loc="51:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40a862d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a864a8"/>
        <function-ref name="checkFrame" scoped="" ref="0x40a86588"/>
        <function-ref name="source" scoped="" ref="0x40a86668"/>
        <function-ref name="destination" scoped="" ref="0x40a86748"/>
        <function-ref name="setSource" scoped="" ref="0x40a86828"/>
        <function-ref name="setDestination" scoped="" ref="0x40a86908"/>
        <function-ref name="setGroup" scoped="" ref="0x40a869e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40a8b838" loc="50:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40a8b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40a8ba10"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40a8baf0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40a8bbd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40a8bcb0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40a8bd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a962b0" loc="62:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a962b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a96488"/>
        <function-ref name="wait" scoped="" ref="0x40a96568"/>
        <function-ref name="cancel" scoped="" ref="0x40a96648"/>
        <function-ref name="isFree" scoped="" ref="0x40a96728"/>
        <function-ref name="getNow" scoped="" ref="0x40a96808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40ab6ef0" loc="65:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ab6ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a99ab0"/>
        <function-ref name="clear" scoped="" ref="0x40a99e60"/>
        <function-ref name="isValid" scoped="" ref="0x40a99700"/>
        <function-ref name="set" scoped="" ref="0x40a98230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40a71010" loc="47:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40a71010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40a711e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40a727e8" loc="45:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40a727e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40a729c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40a72aa0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a72b80"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40a72c60"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40a72d40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40a72e20"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a72f00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a7a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40a9bd18" loc="61:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a9bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40a9bef0"/>
        <function-ref name="getDSN" scoped="" ref="0x40a8d010"/>
        <function-ref name="setFCF" scoped="" ref="0x40a8d0f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40a8d1d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40a8d2b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40a8d390"/>
        <function-ref name="setDSN" scoped="" ref="0x40a8d470"/>
        <function-ref name="createAckReply" scoped="" ref="0x40a8d550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40a8d630"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40a8d710"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40a8d7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40a8d8d0"/>
        <function-ref name="localAddr" scoped="" ref="0x40a8d9b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a8db10"/>
        <function-ref name="localPan" scoped="" ref="0x40a8dbf0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40a8dcd0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40a8ddb0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40a8de90"/>
        <function-ref name="setDestPan" scoped="" ref="0x40a8a010"/>
        <function-ref name="isForMe" scoped="" ref="0x40a8a0f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a8a1d0"/>
        <function-ref name="getFCF" scoped="" ref="0x40a8a2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a8a390"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40a8a470"/>
        <function-ref name="getFramePending" scoped="" ref="0x40a8a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40a79010" loc="46:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40a79010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a791e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40a792c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a793a8"/>
        <function-ref name="getSender" scoped="" ref="0x40a79488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40a8fe28" loc="49:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40a8fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40a91050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40a91130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40a91210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40a912f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x40ab6528" loc="63:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x40ab6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ab6700"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ab67e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab68c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ab69a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40ab6a80"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ab6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x40a77640" loc="44:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40a77640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a77818"/>
        <function-ref name="headerLength" scoped="" ref="0x40a778f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a779d8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a77ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40ace108" loc="41:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ace108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ace2f0"/>
        <function-ref name="wait" scoped="" ref="0x40ace3d0"/>
        <function-ref name="cancel" scoped="" ref="0x40ace4b0"/>
        <function-ref name="isFree" scoped="" ref="0x40ace590"/>
        <function-ref name="getNow" scoped="" ref="0x40ace670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40ace9c0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ace9c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b00e70"/>
        <function-ref name="fired" scoped="" ref="0x40b00640"/>
        <function-ref name="startAt" scoped="" ref="0x40b00b30"/>
        <function-ref name="isRunning" scoped="" ref="0x40b008b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40af8110"/>
        <function-ref name="start" scoped="" ref="0x40b00128"/>
        <function-ref name="stop" scoped="" ref="0x40b003c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x413d4838" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x413d4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x413d4a20"/>
        <function-ref name="wait" scoped="" ref="0x413d4b00"/>
        <function-ref name="cancel" scoped="" ref="0x413d4be0"/>
        <function-ref name="isFree" scoped="" ref="0x413d4cc0"/>
        <function-ref name="getNow" scoped="" ref="0x413d4da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x413d3058" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413d3058"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413d15c8"/>
        <function-ref name="fired" scoped="" ref="0x413d3cc0"/>
        <function-ref name="startAt" scoped="" ref="0x413d1288"/>
        <function-ref name="isRunning" scoped="" ref="0x413d1010"/>
        <function-ref name="getAlarm" scoped="" ref="0x413d1840"/>
        <function-ref name="start" scoped="" ref="0x413d37a8"/>
        <function-ref name="stop" scoped="" ref="0x413d3a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x413d1a50" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x413d1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x413d1c28"/>
        <function-ref name="suspend" scoped="" ref="0x413d1d08"/>
        <function-ref name="resume" scoped="" ref="0x413d1de8"/>
        <function-ref name="run" scoped="" ref="0x413d1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40b01a78" loc="40:/opt/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40b01a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40b01c50"/>
        <function-ref name="suspend" scoped="" ref="0x40b01d30"/>
        <function-ref name="resume" scoped="" ref="0x40b01e10"/>
        <function-ref name="run" scoped="" ref="0x40b01ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b52f20" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b52f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b51110"/>
        <function-ref name="cancel" scoped="" ref="0x40b511f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b512d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b51430" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b51430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b51608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40b53c28" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40b53c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40b53e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b545b0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b545b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b54788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b54868"/>
        <function-ref name="getPayload" scoped="" ref="0x40b54948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b54a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b54b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b54ce0" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b54ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b54ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40b53010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b530f0"/>
        <function-ref name="cancel" scoped="" ref="0x40b531d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40b53868" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40b53868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b53a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b52788" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b52788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b52960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b52a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b52b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b52c00"/>
        <function-ref name="headerLength" scoped="" ref="0x40b52ce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b52dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b51768" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b51768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b51940"/>
        <function-ref name="checkFrame" scoped="" ref="0x40b51a20"/>
        <function-ref name="source" scoped="" ref="0x40b51b00"/>
        <function-ref name="destination" scoped="" ref="0x40b51be0"/>
        <function-ref name="setSource" scoped="" ref="0x40b51cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40b51da0"/>
        <function-ref name="setGroup" scoped="" ref="0x40b51e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b53488" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b53488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b53670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40b52030" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40b52030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b52218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b55940" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b55940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b55b18"/>
        <function-ref name="source" scoped="" ref="0x40b55bf8"/>
        <function-ref name="address" scoped="" ref="0x40b55cd8"/>
        <function-ref name="destination" scoped="" ref="0x40b55db8"/>
        <function-ref name="setSource" scoped="" ref="0x40b55e98"/>
        <function-ref name="setDestination" scoped="" ref="0x40b54010"/>
        <function-ref name="type" scoped="" ref="0x40b540f0"/>
        <function-ref name="setType" scoped="" ref="0x40b541d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40b542b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40b54390"/>
        <function-ref name="localGroup" scoped="" ref="0x40b54470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40b52410" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40b52410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b525f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41412748" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41412748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41412920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41412250" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41412250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41412428"/>
        <function-ref name="cancel" scoped="" ref="0x41412508"/>
        <function-ref name="sendDone" scoped="" ref="0x414125e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x41414ef0" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x41414ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x414130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41415850" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41415850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41415a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x41415b08"/>
        <function-ref name="getPayload" scoped="" ref="0x41415be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41415cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41415da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41414010" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41414010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414141f8"/>
        <function-ref name="getPayload" scoped="" ref="0x414142d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414143b8"/>
        <function-ref name="cancel" scoped="" ref="0x41414498"/>
        <function-ref name="sendDone" scoped="" ref="0x41414578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x41414b30" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x41414b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41414d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x414164c8" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x414164c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414166a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41416780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41416860"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41416940"/>
        <function-ref name="headerLength" scoped="" ref="0x41416a20"/>
        <function-ref name="metadataLength" scoped="" ref="0x41416b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41412a80" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41412a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41412cd8"/>
        <function-ref name="checkFrame" scoped="" ref="0x41412db8"/>
        <function-ref name="source" scoped="" ref="0x41412e98"/>
        <function-ref name="destination" scoped="" ref="0x41410010"/>
        <function-ref name="setSource" scoped="" ref="0x414100f0"/>
        <function-ref name="setDestination" scoped="" ref="0x414101d0"/>
        <function-ref name="setGroup" scoped="" ref="0x414102b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x414103f0" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x414103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x414105c8"/>
        <function-ref name="changed" scoped="" ref="0x414106a8"/>
        <function-ref name="amGroup" scoped="" ref="0x41410788"/>
        <function-ref name="setAddress" scoped="" ref="0x41410868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41413a40" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41413a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41413c18"/>
        <function-ref name="payloadLength" scoped="" ref="0x41413cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41413dd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41413eb8"/>
        <function-ref name="headerLength" scoped="" ref="0x41412010"/>
        <function-ref name="metadataLength" scoped="" ref="0x414120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41414750" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41414750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41414938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x414132e8" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x414132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41416c40" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41416c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41416e18"/>
        <function-ref name="source" scoped="" ref="0x41416ef8"/>
        <function-ref name="address" scoped="" ref="0x41415010"/>
        <function-ref name="destination" scoped="" ref="0x414150f0"/>
        <function-ref name="setSource" scoped="" ref="0x414151d0"/>
        <function-ref name="setDestination" scoped="" ref="0x414152b0"/>
        <function-ref name="type" scoped="" ref="0x41415390"/>
        <function-ref name="setType" scoped="" ref="0x41415470"/>
        <function-ref name="isForMe" scoped="" ref="0x41415550"/>
        <function-ref name="setGroup" scoped="" ref="0x41415630"/>
        <function-ref name="localGroup" scoped="" ref="0x41415710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x414136c8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x414136c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414138b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40b3dd58" loc="54:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b3dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40b5f010"/>
        <function-ref name="changed" scoped="" ref="0x40b5f0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x40b5f1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x40b5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b73a60" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b73a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b73c38"/>
        <function-ref name="cancel" scoped="" ref="0x40b73d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40b73df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40b72010" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b721e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b722c8"/>
        <function-ref name="request" scoped="" ref="0x40b723a8"/>
        <function-ref name="granted" scoped="" ref="0x40b72488"/>
        <function-ref name="isOwner" scoped="" ref="0x40b72568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40b73538" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40b73538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b73710"/>
        <function-ref name="cancel" scoped="" ref="0x40b737f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b738d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ba9b60" loc="86:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ba9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ba9d48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ba9e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ba84c0" loc="89:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ba84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ba86a8"/>
        <function-ref name="configure" scoped="" ref="0x40ba8788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ba9420" loc="85:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ba9420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ba9608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ba96e8"/>
        <function-ref name="request" scoped="" ref="0x40ba97c8"/>
        <function-ref name="granted" scoped="" ref="0x40ba98a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ba9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ba8010" loc="87:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ba8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ba81e8"/>
        <function-ref name="userId" scoped="" ref="0x40ba82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4142d380" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4142d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4142d558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4142d6b8" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4142d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4142d890"/>
        <function-ref name="isEmpty" scoped="" ref="0x4142d970"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4142da50"/>
        <function-ref name="dequeue" scoped="" ref="0x4142db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4142cdf8" loc="52:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4142cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4142b010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4142b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4142b6f0" loc="56:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4142b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4142b8d8"/>
        <function-ref name="configure" scoped="" ref="0x4142b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4142bb18" loc="57:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4142bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4142bcf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4142bdd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4142beb0"/>
        <function-ref name="dequeue" scoped="" ref="0x4142a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4142c6b8" loc="51:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4142c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4142c8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4142c980"/>
        <function-ref name="request" scoped="" ref="0x4142ca60"/>
        <function-ref name="granted" scoped="" ref="0x4142cb40"/>
        <function-ref name="isOwner" scoped="" ref="0x4142cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4142b230" loc="53:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4142b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4142b408"/>
        <function-ref name="userId" scoped="" ref="0x4142b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4142a190" loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4142a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4142a368"/>
        <function-ref name="runTask" scoped="" ref="0x4142a448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bb19e8" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bb19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb1bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40bb1ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb1d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb1ee0" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb1ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd70e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40bb3488" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40bb3488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40bb3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ba53b0" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ba53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba5588"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ba5668"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba5748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba5828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ba5908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40bb1250" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40bb1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bb1428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bb1508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb15e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bb16c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bb17a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bb1888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40bb37d0" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40bb37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40bb39a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40bb3a88"/>
        <function-ref name="setFCF" scoped="" ref="0x40bb3b68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40bb3c48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40bb3d28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40bb3e08"/>
        <function-ref name="setDSN" scoped="" ref="0x40bb3ee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40bb2010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40bb20f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40bb21d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40bb22b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40bb2390"/>
        <function-ref name="localAddr" scoped="" ref="0x40bb2470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40bb25d0"/>
        <function-ref name="localPan" scoped="" ref="0x40bb26b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40bb2790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40bb2870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40bb2950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40bb2a30"/>
        <function-ref name="isForMe" scoped="" ref="0x40bb2b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40bb2bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40bb2cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40bb2db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40bb2e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x40bb1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40ba5a48" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40ba5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba5c20"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba5d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba5de0"/>
        <function-ref name="cancel" scoped="" ref="0x40ba5ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40bb3170" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40bb3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb3348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bde280" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bde280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bde458"/>
        <function-ref name="cancel" scoped="" ref="0x40bde538"/>
        <function-ref name="sendDone" scoped="" ref="0x40bde618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bde778" loc="70:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bde778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bde950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40bd4a58" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40bd4a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd4c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd4d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd4df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd4ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x40bdf010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bdf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40bdf748" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40bdf748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdf920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40bdeab0" loc="71:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40bdeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bdec88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bded68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bdee48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bdef28"/>
        <function-ref name="headerLength" scoped="" ref="0x40bdd018"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bdd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40bdf250" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40bdf250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bdf428"/>
        <function-ref name="cancel" scoped="" ref="0x40bdf508"/>
        <function-ref name="sendDone" scoped="" ref="0x40bdf5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40bd4228" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40bd4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd4400"/>
        <function-ref name="cancel" scoped="" ref="0x40bd44e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd45c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40bd4720" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40bd4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd48f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40bdfa80" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40bdfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bdfc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bdfd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bdfe18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bdfef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bde010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bde0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40c30170" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40c30170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40c30348"/>
        <function-ref name="address" scoped="" ref="0x40c30428"/>
        <function-ref name="destination" scoped="" ref="0x40c30508"/>
        <function-ref name="setSource" scoped="" ref="0x40c305e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40c306c8"/>
        <function-ref name="pan" scoped="" ref="0x40c307a8"/>
        <function-ref name="setPan" scoped="" ref="0x40c30888"/>
        <function-ref name="isForMe" scoped="" ref="0x40c30968"/>
        <function-ref name="localPan" scoped="" ref="0x40c30a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c30b88" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c30b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c30d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c30e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c30f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c2f018"/>
        <function-ref name="headerLength" scoped="" ref="0x40c2f0f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c2f1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40c32658" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c32658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40c32830"/>
        <function-ref name="getDSN" scoped="" ref="0x40c32910"/>
        <function-ref name="setFCF" scoped="" ref="0x40c329f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40c32ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40c32bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40c32c90"/>
        <function-ref name="setDSN" scoped="" ref="0x40c32d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40c32e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40c31010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40c310f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40c311d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40c312b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40c31390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c314f0"/>
        <function-ref name="localPan" scoped="" ref="0x40c315d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40c316b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40c31790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40c31870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40c31950"/>
        <function-ref name="isForMe" scoped="" ref="0x40c31a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c31b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40c31bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c31cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40c31db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40c31e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c2f368" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c2f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c2f540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c2f620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2f700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c2f7e0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c2f8c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c2f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41487c70" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41487c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x41487e48"/>
        <function-ref name="address" scoped="" ref="0x41487f28"/>
        <function-ref name="destination" scoped="" ref="0x41486018"/>
        <function-ref name="setSource" scoped="" ref="0x414860f8"/>
        <function-ref name="setDestination" scoped="" ref="0x414861d8"/>
        <function-ref name="pan" scoped="" ref="0x414862b8"/>
        <function-ref name="setPan" scoped="" ref="0x41486398"/>
        <function-ref name="isForMe" scoped="" ref="0x41486478"/>
        <function-ref name="localPan" scoped="" ref="0x41486558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41486698" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41486698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41486870"/>
        <function-ref name="payloadLength" scoped="" ref="0x41486950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41486a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41486b10"/>
        <function-ref name="headerLength" scoped="" ref="0x41486bf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41486cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x414882b8" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x414882b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x41488490"/>
        <function-ref name="getDSN" scoped="" ref="0x41488570"/>
        <function-ref name="setFCF" scoped="" ref="0x41488650"/>
        <function-ref name="isAckFrame" scoped="" ref="0x41488730"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x41488810"/>
        <function-ref name="createDataFrame" scoped="" ref="0x414888f0"/>
        <function-ref name="setDSN" scoped="" ref="0x414889d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x41488ab0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x41488b90"/>
        <function-ref name="isDataFrame" scoped="" ref="0x41488c70"/>
        <function-ref name="getAckRequired" scoped="" ref="0x41488d50"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x41488e30"/>
        <function-ref name="localAddr" scoped="" ref="0x41488f10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x41487090"/>
        <function-ref name="localPan" scoped="" ref="0x41487170"/>
        <function-ref name="setDestAddr" scoped="" ref="0x41487250"/>
        <function-ref name="createAckFrame" scoped="" ref="0x41487330"/>
        <function-ref name="setFramePending" scoped="" ref="0x41487410"/>
        <function-ref name="setDestPan" scoped="" ref="0x414874f0"/>
        <function-ref name="isForMe" scoped="" ref="0x414875d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x414876b0"/>
        <function-ref name="getFCF" scoped="" ref="0x41487790"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41487870"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41487950"/>
        <function-ref name="getFramePending" scoped="" ref="0x41487a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x41486e40" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41486e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x41485050"/>
        <function-ref name="changed" scoped="" ref="0x41485130"/>
        <function-ref name="amGroup" scoped="" ref="0x41485210"/>
        <function-ref name="setAddress" scoped="" ref="0x414852f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41485450" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41485450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41485628"/>
        <function-ref name="payloadLength" scoped="" ref="0x41485708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414857e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414858c8"/>
        <function-ref name="headerLength" scoped="" ref="0x414859a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41485a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c55ca8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c55ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c55e80"/>
        <function-ref name="cancel" scoped="" ref="0x40c72010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c720f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c72250" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c72250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c72428"/>
        <function-ref name="header" scoped="" ref="0x40c72508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c55388" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c55388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c55560"/>
        <function-ref name="cancel" scoped="" ref="0x40c55640"/>
        <function-ref name="sendDone" scoped="" ref="0x40c55720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c72668" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c72668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c72840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40c72920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c72a00"/>
        <function-ref name="getSender" scoped="" ref="0x40c72ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c55860" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c55860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c55a38"/>
        <function-ref name="header" scoped="" ref="0x40c55b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x414aacc8" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x414aacc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414aaea0"/>
        <function-ref name="cancel" scoped="" ref="0x414a9010"/>
        <function-ref name="sendDone" scoped="" ref="0x414a90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x414a9250" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x414a9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a9428"/>
        <function-ref name="header" scoped="" ref="0x414a9508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x414a7310" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x414a7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414a74e8"/>
        <function-ref name="clearAll" scoped="" ref="0x414a75c8"/>
        <function-ref name="get" scoped="" ref="0x414a76a8"/>
        <function-ref name="set" scoped="" ref="0x414a7788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414aa090" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414aa090"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414aa268"/>
        <function-ref name="cancel" scoped="" ref="0x414aa348"/>
        <function-ref name="sendDone" scoped="" ref="0x414aa428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x414a9c00" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x414a9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x414a9dd8"/>
        <function-ref name="insertNode" scoped="" ref="0x414a9eb8"/>
        <function-ref name="getNode" scoped="" ref="0x414a7010"/>
        <function-ref name="evicted" scoped="" ref="0x414a70f0"/>
        <function-ref name="getIndex" scoped="" ref="0x414a71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414aa568" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414aa568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414aa740"/>
        <function-ref name="header" scoped="" ref="0x414aa820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414aa960" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414aa960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414aab38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x414a9648" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x414a9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x414a9820"/>
        <function-ref name="reportChannelError" scoped="" ref="0x414a9900"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x414a99e0"/>
        <function-ref name="getSender" scoped="" ref="0x414a9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40c64540" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40c64540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40c64718"/>
        <function-ref name="insertNode" scoped="" ref="0x40c647f8"/>
        <function-ref name="getNode" scoped="" ref="0x40c648d8"/>
        <function-ref name="evicted" scoped="" ref="0x40c649b8"/>
        <function-ref name="getIndex" scoped="" ref="0x40c64a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40c5e010" loc="43:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40c5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c5e1e8"/>
        <function-ref name="clearAll" scoped="" ref="0x40c5e2c8"/>
        <function-ref name="get" scoped="" ref="0x40c5e3a8"/>
        <function-ref name="set" scoped="" ref="0x40c5e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40c5f510" loc="42:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40c5f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40c5f6e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40c5f7c8"/>
        <function-ref name="getNode" scoped="" ref="0x40c5f8a8"/>
        <function-ref name="evicted" scoped="" ref="0x40c5f988"/>
        <function-ref name="getIndex" scoped="" ref="0x40c5fa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c5f178" loc="41:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c5f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c5f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x414a6738" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x414a6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414a6910"/>
        <function-ref name="clearAll" scoped="" ref="0x414a69f0"/>
        <function-ref name="get" scoped="" ref="0x414a6ad0"/>
        <function-ref name="set" scoped="" ref="0x414a6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c95440" loc="85:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c95440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c95618"/>
        <function-ref name="cancel" scoped="" ref="0x40c956f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c957d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c95938" loc="86:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c95938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c95b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40c93010" loc="93:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40c93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c931e8"/>
        <function-ref name="noAck" scoped="" ref="0x40c932c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c933a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c70d38" loc="77:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c70d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c70f10"/>
        <function-ref name="cancel" scoped="" ref="0x40c6f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c6fc00" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c6fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c6fdd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c6feb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c95010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c950f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c951d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c952b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c95c70" loc="87:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c95c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c95e48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c95f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c94018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c940f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c941d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c942b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40c94910" loc="92:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40c94910"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c94ae8"/>
        <function-ref name="setRetries" scoped="" ref="0x40c94bc8"/>
        <function-ref name="getRetries" scoped="" ref="0x40c94ca8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c94d88"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c94e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c6f250" loc="78:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c6f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c6f428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c943f8" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c943f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c945d0"/>
        <function-ref name="noAck" scoped="" ref="0x40c946b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c94790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c6f568" loc="79:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c6f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c6f740"/>
        <function-ref name="setRetries" scoped="" ref="0x40c6f820"/>
        <function-ref name="getRetries" scoped="" ref="0x40c6f900"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c6f9e0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c6fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c90ba8" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c90ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c90d80"/>
        <function-ref name="stopDone" scoped="" ref="0x40c90e60"/>
        <function-ref name="start" scoped="" ref="0x40c8f010"/>
        <function-ref name="stop" scoped="" ref="0x40c8f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c88e10" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c88e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cae010"/>
        <function-ref name="cancel" scoped="" ref="0x40cae0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cae330" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cae330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cae508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c8f250" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c8f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8f428"/>
        <function-ref name="cancel" scoped="" ref="0x40c8f508"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c8fa60" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c8fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c8fc38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c8fd18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8fdf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c8fed8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c88010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c88230" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c88230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c88408"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c884e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c885c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c886a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c88838" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c88838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c88a10"/>
        <function-ref name="stopDone" scoped="" ref="0x40c88af0"/>
        <function-ref name="start" scoped="" ref="0x40c88bd0"/>
        <function-ref name="stop" scoped="" ref="0x40c88cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c8f748" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c8f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8f920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cae668" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cae668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cae840"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cae920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40caea00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40caeae0"/>
        <function-ref name="headerLength" scoped="" ref="0x40caebc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40caeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41492148" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41492148"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41492320"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41492400"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x414924e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x414925c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40caa010" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40caa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40caa1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40caa2c8"/>
        <function-ref name="start" scoped="" ref="0x40caa3a8"/>
        <function-ref name="stop" scoped="" ref="0x40caa488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40cc5340" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cc5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cc5518"/>
        <function-ref name="turnOn" scoped="" ref="0x40cc55f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40cc56d8"/>
        <function-ref name="done" scoped="" ref="0x40cc57b8"/>
        <function-ref name="standby" scoped="" ref="0x40cc5898"/>
        <function-ref name="getChannel" scoped="" ref="0x40cc5978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40caa5e8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40caa5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40caa7c0"/>
        <function-ref name="cancel" scoped="" ref="0x40caa8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40caa980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40cf1010" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cf1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf11e8"/>
        <function-ref name="header" scoped="" ref="0x40cf12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40caaae0" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40caaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40caacb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40cc5ab8" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cc5ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc5c90"/>
        <function-ref name="ready" scoped="" ref="0x40cc5d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40caadf8" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40caadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40cc5010"/>
        <function-ref name="setChannel" scoped="" ref="0x40cc50f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40cc51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x414da490" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x414da490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414da668"/>
        <function-ref name="stopDone" scoped="" ref="0x414da748"/>
        <function-ref name="start" scoped="" ref="0x414da828"/>
        <function-ref name="stop" scoped="" ref="0x414da908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x414daa68" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x414daa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414dac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x414d9b50" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x414d9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x414d9d28"/>
        <function-ref name="turnOn" scoped="" ref="0x414d9e08"/>
        <function-ref name="setChannel" scoped="" ref="0x414d9ee8"/>
        <function-ref name="done" scoped="" ref="0x414d8010"/>
        <function-ref name="standby" scoped="" ref="0x414d80f0"/>
        <function-ref name="getChannel" scoped="" ref="0x414d81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414dada0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414dada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414d9010"/>
        <function-ref name="cancel" scoped="" ref="0x414d90f0"/>
        <function-ref name="sendDone" scoped="" ref="0x414d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x414d76a8" loc="189:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x414d76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414d7880"/>
        <function-ref name="runTask" scoped="" ref="0x414d7960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x414d8da0" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414d8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414d7010"/>
        <function-ref name="header" scoped="" ref="0x414d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x414d7ae0" loc="144:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x414d7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414d7cb8"/>
        <function-ref name="runTask" scoped="" ref="0x414d7d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x414d9330" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x414d9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414d9508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x414d7270" loc="322:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x414d7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414d7448"/>
        <function-ref name="runTask" scoped="" ref="0x414d7528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x414d88c8" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414d88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414d8aa0"/>
        <function-ref name="ready" scoped="" ref="0x414d8b80"/>
        <function-ref name="sendDone" scoped="" ref="0x414d8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x414d9648" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x414d9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x414d9820"/>
        <function-ref name="setChannel" scoped="" ref="0x414d9900"/>
        <function-ref name="getChannel" scoped="" ref="0x414d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x414d8310" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x414d8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x414d84e8"/>
        <function-ref name="suspend" scoped="" ref="0x414d85c8"/>
        <function-ref name="resume" scoped="" ref="0x414d86a8"/>
        <function-ref name="run" scoped="" ref="0x414d8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cee280" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cee280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cee458"/>
        <function-ref name="ready" scoped="" ref="0x40cee538"/>
        <function-ref name="sendDone" scoped="" ref="0x40cee618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cee778" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cee778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cee950"/>
        <function-ref name="header" scoped="" ref="0x40ceea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40ceeb70" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ceeb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ceed48"/>
        <function-ref name="wait" scoped="" ref="0x40ceee28"/>
        <function-ref name="cancel" scoped="" ref="0x40ceef08"/>
        <function-ref name="isFree" scoped="" ref="0x40d1a010"/>
        <function-ref name="getNow" scoped="" ref="0x40d1a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d1a250" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d1a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40d1a428"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40d1a508"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40d1a5e8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40d1a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cefd70" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cefd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cee010"/>
        <function-ref name="header" scoped="" ref="0x40cee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cef898" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cef898"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cefa70"/>
        <function-ref name="ready" scoped="" ref="0x40cefb50"/>
        <function-ref name="sendDone" scoped="" ref="0x40cefc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x414b8ea0" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x414b8ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414b70c0"/>
        <function-ref name="ready" scoped="" ref="0x414b71a0"/>
        <function-ref name="sendDone" scoped="" ref="0x414b7280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x414b73e0" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x414b73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414b75b8"/>
        <function-ref name="header" scoped="" ref="0x414b7698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x414b77d8" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x414b77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x414b79b0"/>
        <function-ref name="wait" scoped="" ref="0x414b7a90"/>
        <function-ref name="cancel" scoped="" ref="0x414b7b70"/>
        <function-ref name="isFree" scoped="" ref="0x414b7c50"/>
        <function-ref name="getNow" scoped="" ref="0x414b7d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x414b7e70" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x414b7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41503070"/>
        <function-ref name="rand32" scoped="" ref="0x41503150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x415032b0" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x415032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41503488"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x41503568"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x41503648"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x41503728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414b8a58" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414b8a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414b8c30"/>
        <function-ref name="header" scoped="" ref="0x414b8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x414b8580" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414b8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414b8758"/>
        <function-ref name="ready" scoped="" ref="0x414b8838"/>
        <function-ref name="sendDone" scoped="" ref="0x414b8918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x415038a8" loc="78:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x415038a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41503a80"/>
        <function-ref name="runTask" scoped="" ref="0x41503b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40cf6d40" loc="46:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cf6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cf6f18"/>
        <function-ref name="rand32" scoped="" ref="0x40cf9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40cf6480" loc="45:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40cf6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cf6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cfa1b8" loc="44:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cfa1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cfa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40cf47f0" loc="48:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cf47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cf49c8"/>
        <function-ref name="rand32" scoped="" ref="0x40cf4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40cf9ec8" loc="47:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40cf9ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cf4558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cf99a8" loc="46:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cf99a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cf9b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d2c360" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d2c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d2c538"/>
        <function-ref name="ready" scoped="" ref="0x40d2c618"/>
        <function-ref name="sendDone" scoped="" ref="0x40d2c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d2c858" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d2c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d2ca30"/>
        <function-ref name="header" scoped="" ref="0x40d2cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40d2cc50" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40d2cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d2ce28"/>
        <function-ref name="wait" scoped="" ref="0x40d2cf08"/>
        <function-ref name="cancel" scoped="" ref="0x40d2b010"/>
        <function-ref name="isFree" scoped="" ref="0x40d2b0f0"/>
        <function-ref name="getNow" scoped="" ref="0x40d2b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40d2bc88" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40d2bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d2be60"/>
        <function-ref name="get" scoped="" ref="0x40d2a010"/>
        <function-ref name="setValue" scoped="" ref="0x40d2a0f0"/>
        <function-ref name="set" scoped="" ref="0x40d2a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d2b330" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d2b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40d2b508"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40d2b5e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40d2b6c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40d2b7a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40d2b888"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40d2b968"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40d2ba48"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40d2bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d17a08" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d17a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d17be0"/>
        <function-ref name="header" scoped="" ref="0x40d17cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d17530" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d17530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d17708"/>
        <function-ref name="ready" scoped="" ref="0x40d177e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d178c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40d17e00" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d17e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d2c010"/>
        <function-ref name="noAck" scoped="" ref="0x40d2c0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d2c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d250e8" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d250e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d252c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40d253a0"/>
        <function-ref name="start" scoped="" ref="0x40d25480"/>
        <function-ref name="stop" scoped="" ref="0x40d25560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40d48ef0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40d48ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d470e0"/>
        <function-ref name="request" scoped="" ref="0x40d471c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d454f0" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d454f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d456c8"/>
        <function-ref name="ready" scoped="" ref="0x40d457a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d45888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d459e8" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d459e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d45bc0"/>
        <function-ref name="header" scoped="" ref="0x40d45ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d25e90" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d25e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d48080"/>
        <function-ref name="turnOn" scoped="" ref="0x40d48160"/>
        <function-ref name="setChannel" scoped="" ref="0x40d48240"/>
        <function-ref name="done" scoped="" ref="0x40d48320"/>
        <function-ref name="standby" scoped="" ref="0x40d48400"/>
        <function-ref name="getChannel" scoped="" ref="0x40d484e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d47300" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d47300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d474d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d475b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d47698"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d47778"/>
        <function-ref name="headerLength" scoped="" ref="0x40d47858"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d47938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40d46c40" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40d46c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d46e98"/>
        <function-ref name="turnOn" scoped="" ref="0x40d45010"/>
        <function-ref name="setChannel" scoped="" ref="0x40d450f0"/>
        <function-ref name="done" scoped="" ref="0x40d451d0"/>
        <function-ref name="standby" scoped="" ref="0x40d452b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40d45390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40d47a98" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d47a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d47c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d48af8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d48af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d48cd0"/>
        <function-ref name="header" scoped="" ref="0x40d48db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40d46908" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40d46908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d46ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40d47e00" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40d47e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d46010"/>
        <function-ref name="stopDone" scoped="" ref="0x40d460f0"/>
        <function-ref name="start" scoped="" ref="0x40d461d0"/>
        <function-ref name="stop" scoped="" ref="0x40d462b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d44250" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d44250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d44428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d44508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d445e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d446c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d447a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d44888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40d25b78" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40d25b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d25d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d449e8" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d449e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d44bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40d46410" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40d46410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d465e8"/>
        <function-ref name="cancel" scoped="" ref="0x40d466c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d467a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d48620" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d48620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d487f8"/>
        <function-ref name="ready" scoped="" ref="0x40d488d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d489b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40d45e00" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40d45e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d44010"/>
        <function-ref name="request" scoped="" ref="0x40d440f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d256a0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d256a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d25878"/>
        <function-ref name="cancel" scoped="" ref="0x40d25958"/>
        <function-ref name="sendDone" scoped="" ref="0x40d25a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40d90170" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40d90170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d90348"/>
        <function-ref name="get" scoped="" ref="0x40d90428"/>
        <function-ref name="setValue" scoped="" ref="0x40d90508"/>
        <function-ref name="set" scoped="" ref="0x40d905e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d92830" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d92830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d92a08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d92ae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d92bc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d92ca8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d92d88"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d92e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d91938" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d91938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d91b10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d91bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d91cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d91db0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d91e90"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40d941b0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d941b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d94cb0"/>
        <function-ref name="clear" scoped="" ref="0x40d92088"/>
        <function-ref name="isValid" scoped="" ref="0x40d94900"/>
        <function-ref name="set" scoped="" ref="0x40d92438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40d910c0" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d91708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d3f9c8" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d3f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d6f4d8"/>
        <function-ref name="clear" scoped="" ref="0x40d6f888"/>
        <function-ref name="isValid" scoped="" ref="0x40d6f128"/>
        <function-ref name="set" scoped="" ref="0x40d6fc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41524010" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41524010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415241e8"/>
        <function-ref name="get" scoped="" ref="0x415242c8"/>
        <function-ref name="setValue" scoped="" ref="0x415243a8"/>
        <function-ref name="set" scoped="" ref="0x41524488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x415267b8" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x415267b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41526990"/>
        <function-ref name="payloadLength" scoped="" ref="0x41526a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41526b50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41526c30"/>
        <function-ref name="headerLength" scoped="" ref="0x41526d10"/>
        <function-ref name="metadataLength" scoped="" ref="0x41526df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41523888" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41523888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41523a60"/>
        <function-ref name="payloadLength" scoped="" ref="0x41523b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41523c20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41523d00"/>
        <function-ref name="headerLength" scoped="" ref="0x41523de0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41523ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x415270c0" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x415270c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41527bc0"/>
        <function-ref name="clear" scoped="" ref="0x41526010"/>
        <function-ref name="isValid" scoped="" ref="0x41527810"/>
        <function-ref name="set" scoped="" ref="0x415263c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x41524678" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41524678"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41524cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x41523010" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x41523010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41523658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x414de8c0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414de8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x415283f8"/>
        <function-ref name="clear" scoped="" ref="0x415287a8"/>
        <function-ref name="isValid" scoped="" ref="0x41528048"/>
        <function-ref name="set" scoped="" ref="0x41528b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40d71aa8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d71aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d6e120"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40d67e70" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d67e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d6c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d6c828" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d6c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d66010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d66500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d66288"/>
        <function-ref name="overflow" scoped="" ref="0x40d66778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d8d3f0" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d8d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d8d5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d8d6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d8d788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d8d868"/>
        <function-ref name="headerLength" scoped="" ref="0x40d8d948"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d8da28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d8dbb8" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d8dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d8dd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d8de70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d8c010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d8c0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d8c1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d8c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40daadb8" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40daadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d8d010"/>
        <function-ref name="get" scoped="" ref="0x40d8d0f0"/>
        <function-ref name="setValue" scoped="" ref="0x40d8d1d0"/>
        <function-ref name="set" scoped="" ref="0x40d8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40da9548" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40da9548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40da9720"/>
        <function-ref name="stopDone" scoped="" ref="0x40da9800"/>
        <function-ref name="start" scoped="" ref="0x40da98e0"/>
        <function-ref name="stop" scoped="" ref="0x40da99c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40da7408" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40da7408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40da75e0"/>
        <function-ref name="request" scoped="" ref="0x40da76c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40da49c8" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40da49c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da4ba0"/>
        <function-ref name="ready" scoped="" ref="0x40da4c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40da4d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40da4ec0" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40da4ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da30c0"/>
        <function-ref name="header" scoped="" ref="0x40da31a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40da8328" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40da8328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40da8500"/>
        <function-ref name="turnOn" scoped="" ref="0x40da85e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40da86c0"/>
        <function-ref name="done" scoped="" ref="0x40da87a0"/>
        <function-ref name="standby" scoped="" ref="0x40da8880"/>
        <function-ref name="getChannel" scoped="" ref="0x40da8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40da7800" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40da7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da79d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40da7ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da7b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40da7c78"/>
        <function-ref name="headerLength" scoped="" ref="0x40da7d58"/>
        <function-ref name="metadataLength" scoped="" ref="0x40da7e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40da41b0" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40da41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40da4408"/>
        <function-ref name="turnOn" scoped="" ref="0x40da44e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40da45c8"/>
        <function-ref name="done" scoped="" ref="0x40da46a8"/>
        <function-ref name="standby" scoped="" ref="0x40da4788"/>
        <function-ref name="getChannel" scoped="" ref="0x40da4868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40da5010" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40da5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40da51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40da7010" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40da7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da71e8"/>
        <function-ref name="header" scoped="" ref="0x40da72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40da5e48" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40da5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da4050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40da5378" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40da5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40da5550"/>
        <function-ref name="stopDone" scoped="" ref="0x40da5630"/>
        <function-ref name="start" scoped="" ref="0x40da5710"/>
        <function-ref name="stop" scoped="" ref="0x40da57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40da3718" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40da3718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da38f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40da39d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da3ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40da3b90"/>
        <function-ref name="headerLength" scoped="" ref="0x40da3c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40da3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40da8010" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40da8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40da81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40da3eb0" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40da3eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40da20c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40da5950" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40da5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da5b28"/>
        <function-ref name="cancel" scoped="" ref="0x40da5c08"/>
        <function-ref name="sendDone" scoped="" ref="0x40da5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40da8aa0" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40da8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da8c78"/>
        <function-ref name="ready" scoped="" ref="0x40da8d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40da8e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40da3300" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40da3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40da34d8"/>
        <function-ref name="request" scoped="" ref="0x40da35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40da9b00" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40da9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40da9cd8"/>
        <function-ref name="cancel" scoped="" ref="0x40da9db8"/>
        <function-ref name="sendDone" scoped="" ref="0x40da9e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40da0a40" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40da0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40da0c18"/>
        <function-ref name="stopDone" scoped="" ref="0x40da0cf8"/>
        <function-ref name="start" scoped="" ref="0x40da0dd8"/>
        <function-ref name="stop" scoped="" ref="0x40da0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40d9e8e0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40d9e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d9eab8"/>
        <function-ref name="request" scoped="" ref="0x40d9eb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d9bec0" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d9bec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9a0c0"/>
        <function-ref name="ready" scoped="" ref="0x40d9a1a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9a280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d9a3e0" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d9a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9a5b8"/>
        <function-ref name="header" scoped="" ref="0x40d9a698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d9f800" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d9f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d9f9d8"/>
        <function-ref name="turnOn" scoped="" ref="0x40d9fab8"/>
        <function-ref name="setChannel" scoped="" ref="0x40d9fb98"/>
        <function-ref name="done" scoped="" ref="0x40d9fc78"/>
        <function-ref name="standby" scoped="" ref="0x40d9fd58"/>
        <function-ref name="getChannel" scoped="" ref="0x40d9fe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d9ecd8" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d9ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d9eeb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d9c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d9c0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d9c1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d9c2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d9c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40d9b6a8" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40d9b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d9b900"/>
        <function-ref name="turnOn" scoped="" ref="0x40d9b9e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40d9bac0"/>
        <function-ref name="done" scoped="" ref="0x40d9bba0"/>
        <function-ref name="standby" scoped="" ref="0x40d9bc80"/>
        <function-ref name="getChannel" scoped="" ref="0x40d9bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40d9c4f0" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d9c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d9c6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d9e4e8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d9e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9e6c0"/>
        <function-ref name="header" scoped="" ref="0x40d9e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40d9b370" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40d9b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9b548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40d9c858" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40d9c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d9ca30"/>
        <function-ref name="stopDone" scoped="" ref="0x40d9cb10"/>
        <function-ref name="start" scoped="" ref="0x40d9cbf0"/>
        <function-ref name="stop" scoped="" ref="0x40d9ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d9ac10" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d9ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d9ade8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d9aec8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d99010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d990f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d991d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40d9f4e8" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40d9f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d99410" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d99410"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d995e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40d9ce30" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40d9ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9b050"/>
        <function-ref name="cancel" scoped="" ref="0x40d9b130"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d9e010" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d9e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9e1e8"/>
        <function-ref name="ready" scoped="" ref="0x40d9e2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40d9a7f8" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40d9a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d9a9d0"/>
        <function-ref name="request" scoped="" ref="0x40d9aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d9f010" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9f1e8"/>
        <function-ref name="cancel" scoped="" ref="0x40d9f2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40dc49b8" loc="46:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40dc49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40dc4b90"/>
        <function-ref name="request" scoped="" ref="0x40dc4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40dc2b40" loc="50:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40dc2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dc0780"/>
        <function-ref name="get" scoped="" ref="0x40dc04c0"/>
        <function-ref name="isSet" scoped="" ref="0x40dc0200"/>
        <function-ref name="set" scoped="" ref="0x40dc0a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40db5918" loc="65:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40db5918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db5af0"/>
        <function-ref name="get" scoped="" ref="0x40db5bd0"/>
        <function-ref name="setValue" scoped="" ref="0x40db5cb0"/>
        <function-ref name="set" scoped="" ref="0x40db5d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40db89f0" loc="62:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40db89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40db75b0"/>
        <function-ref name="clear" scoped="" ref="0x40db7960"/>
        <function-ref name="isValid" scoped="" ref="0x40db7200"/>
        <function-ref name="set" scoped="" ref="0x40db7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d97760" loc="43:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d97760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d97938"/>
        <function-ref name="turnOn" scoped="" ref="0x40d97a18"/>
        <function-ref name="setChannel" scoped="" ref="0x40d97af8"/>
        <function-ref name="done" scoped="" ref="0x40d97bd8"/>
        <function-ref name="standby" scoped="" ref="0x40d97cb8"/>
        <function-ref name="getChannel" scoped="" ref="0x40d97d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40dc37d8" loc="49:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40dc37d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dc23b8"/>
        <function-ref name="get" scoped="" ref="0x40dc20f8"/>
        <function-ref name="isSet" scoped="" ref="0x40dc3e20"/>
        <function-ref name="set" scoped="" ref="0x40dc2678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40dc4e20" loc="47:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40dc4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dc3010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dc30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dc31d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dc32b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40dc3390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40dc3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40db8168" loc="61:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40db8168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db83c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40db84a0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40db8580"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40db8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40dc4568" loc="45:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40dc4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dc4740"/>
        <function-ref name="header" scoped="" ref="0x40dc4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40dbb618" loc="56:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40dbb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40db9af0"/>
        <function-ref name="fired" scoped="" ref="0x40db92c0"/>
        <function-ref name="startAt" scoped="" ref="0x40db97b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40db9538"/>
        <function-ref name="getAlarm" scoped="" ref="0x40db9d68"/>
        <function-ref name="start" scoped="" ref="0x40dbbd68"/>
        <function-ref name="stop" scoped="" ref="0x40db9048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40dbf010" loc="51:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40dbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dbfbd8"/>
        <function-ref name="get" scoped="" ref="0x40dbf918"/>
        <function-ref name="isSet" scoped="" ref="0x40dbf658"/>
        <function-ref name="set" scoped="" ref="0x40dbfe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40dbcb78" loc="55:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40dbcb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dbb200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40dc4010" loc="44:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40dc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dc41e8"/>
        <function-ref name="ready" scoped="" ref="0x40dc42c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40dc43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40dbd3d8" loc="52:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40dbd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dbc010"/>
        <function-ref name="get" scoped="" ref="0x40dbdce0"/>
        <function-ref name="isSet" scoped="" ref="0x40dbda20"/>
        <function-ref name="set" scoped="" ref="0x40dbc2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40db4010" loc="66:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40db4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db41e8"/>
        <function-ref name="get" scoped="" ref="0x40db42c8"/>
        <function-ref name="setValue" scoped="" ref="0x40db43a8"/>
        <function-ref name="set" scoped="" ref="0x40db4488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40db5280" loc="64:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40db5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db5458"/>
        <function-ref name="get" scoped="" ref="0x40db5538"/>
        <function-ref name="setValue" scoped="" ref="0x40db5618"/>
        <function-ref name="set" scoped="" ref="0x40db56f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40dbc680" loc="53:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40dbc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40dbc858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40dafdf8" loc="53:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40dafdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40dae010"/>
        <function-ref name="request" scoped="" ref="0x40dae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40ddb010" loc="57:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40ddb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ddbbd8"/>
        <function-ref name="get" scoped="" ref="0x40ddb918"/>
        <function-ref name="isSet" scoped="" ref="0x40ddb658"/>
        <function-ref name="set" scoped="" ref="0x40ddbe98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40dd2458" loc="67:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40dd2458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40dd2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40db0878" loc="48:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40db0878"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40db0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40dcf778" loc="74:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40dcf778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dcf950"/>
        <function-ref name="get" scoped="" ref="0x40dcfa30"/>
        <function-ref name="setValue" scoped="" ref="0x40dcfb10"/>
        <function-ref name="set" scoped="" ref="0x40dcfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40dce680" loc="77:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40dce680"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40dcd198"/>
        <function-ref name="clear" scoped="" ref="0x40dcd548"/>
        <function-ref name="isValid" scoped="" ref="0x40dcedd0"/>
        <function-ref name="set" scoped="" ref="0x40dcd8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40db0bf8" loc="50:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40db0bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40db0dd0"/>
        <function-ref name="turnOn" scoped="" ref="0x40db0eb0"/>
        <function-ref name="setChannel" scoped="" ref="0x40daf010"/>
        <function-ref name="done" scoped="" ref="0x40daf0f0"/>
        <function-ref name="standby" scoped="" ref="0x40daf1d0"/>
        <function-ref name="getChannel" scoped="" ref="0x40daf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40dd2f10" loc="68:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40dd2f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dd4578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40daec40" loc="56:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40daec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dad818"/>
        <function-ref name="get" scoped="" ref="0x40dad558"/>
        <function-ref name="isSet" scoped="" ref="0x40dad298"/>
        <function-ref name="set" scoped="" ref="0x40dadad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40dae2a0" loc="54:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40dae2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dae478"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dae558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dae638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dae718"/>
        <function-ref name="headerLength" scoped="" ref="0x40dae7f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40dae8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40dd09d0" loc="71:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40dd09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd0ba8"/>
        <function-ref name="headerLength" scoped="" ref="0x40dd0c88"/>
        <function-ref name="metadataLength" scoped="" ref="0x40dd0d68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40dd0e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40daf9a8" loc="52:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40daf9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dafb80"/>
        <function-ref name="header" scoped="" ref="0x40dafc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40dd7de8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40dd7de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40dd5050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40dda3f8" loc="58:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40dda3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dd8010"/>
        <function-ref name="get" scoped="" ref="0x40ddad00"/>
        <function-ref name="isSet" scoped="" ref="0x40ddaa40"/>
        <function-ref name="set" scoped="" ref="0x40dd82d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40db0218" loc="47:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40db0218"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40db03f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40daf450" loc="51:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40daf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40daf628"/>
        <function-ref name="ready" scoped="" ref="0x40daf708"/>
        <function-ref name="sendDone" scoped="" ref="0x40daf7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40dd87e0" loc="59:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40dd87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dd73b8"/>
        <function-ref name="get" scoped="" ref="0x40dd70f8"/>
        <function-ref name="isSet" scoped="" ref="0x40dd8e28"/>
        <function-ref name="set" scoped="" ref="0x40dd7678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40dcc398" loc="80:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40dcc398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40dcc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40dd4980" loc="69:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40dd4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40dd0418"/>
        <function-ref name="test" scoped="" ref="0x40dd37a0"/>
        <function-ref name="fired" scoped="" ref="0x40dd3528"/>
        <function-ref name="get" scoped="" ref="0x40dd3010"/>
        <function-ref name="reset" scoped="" ref="0x40dd3a18"/>
        <function-ref name="getMode" scoped="" ref="0x40dd06b8"/>
        <function-ref name="isOn" scoped="" ref="0x40dd01a0"/>
        <function-ref name="set" scoped="" ref="0x40dd3288"/>
        <function-ref name="start" scoped="" ref="0x40dd3c90"/>
        <function-ref name="stop" scoped="" ref="0x40dd3f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40dcfe38" loc="75:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40dcfe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dce050"/>
        <function-ref name="get" scoped="" ref="0x40dce130"/>
        <function-ref name="setValue" scoped="" ref="0x40dce210"/>
        <function-ref name="set" scoped="" ref="0x40dce2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40dcf0e0" loc="73:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40dcf0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dcf2b8"/>
        <function-ref name="get" scoped="" ref="0x40dcf398"/>
        <function-ref name="setValue" scoped="" ref="0x40dcf478"/>
        <function-ref name="set" scoped="" ref="0x40dcf558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40dd7a28" loc="60:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40dd7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40dd7c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40dcdd38" loc="79:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40dcdd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40dcdf10"/>
        <function-ref name="suspend" scoped="" ref="0x40dcc010"/>
        <function-ref name="resume" scoped="" ref="0x40dcc0f0"/>
        <function-ref name="run" scoped="" ref="0x40dcc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40db2998" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40db2998"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40e52120"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40e51030" loc="53:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40e51030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40e51780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e51af8" loc="54:/opt/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e51af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e48308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e487f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e48580"/>
        <function-ref name="overflow" scoped="" ref="0x40e48a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e45cd8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e45cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e43478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e43968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e436f0"/>
        <function-ref name="overflow" scoped="" ref="0x40e43be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e469f0" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e469f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e45200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e456f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e45478"/>
        <function-ref name="overflow" scoped="" ref="0x40e45968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e568b0" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e568b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e56ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e73cc8" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e73cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e72330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e72680" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e72680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e72dd0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e702e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e70068"/>
        <function-ref name="overflow" scoped="" ref="0x40e70558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e6fea8" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e6fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e41388"/>
        <function-ref name="fired" scoped="" ref="0x40e55b28"/>
        <function-ref name="startAt" scoped="" ref="0x40e41048"/>
        <function-ref name="isRunning" scoped="" ref="0x40e55da0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e41600"/>
        <function-ref name="start" scoped="" ref="0x40e55610"/>
        <function-ref name="stop" scoped="" ref="0x40e558b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41539550" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41539550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41536010"/>
        <function-ref name="test" scoped="" ref="0x41537350"/>
        <function-ref name="fired" scoped="" ref="0x415370d8"/>
        <function-ref name="force" scoped="" ref="0x41536528"/>
        <function-ref name="get" scoped="" ref="0x41539b98"/>
        <function-ref name="reset" scoped="" ref="0x415375c8"/>
        <function-ref name="getMode" scoped="" ref="0x415362b0"/>
        <function-ref name="isOn" scoped="" ref="0x41537d30"/>
        <function-ref name="set" scoped="" ref="0x41539e10"/>
        <function-ref name="start" scoped="" ref="0x41537840"/>
        <function-ref name="stop" scoped="" ref="0x41537ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4153ead0" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4153ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4153b010"/>
        <function-ref name="fired" scoped="" ref="0x4153c748"/>
        <function-ref name="startAt" scoped="" ref="0x4153cc38"/>
        <function-ref name="isRunning" scoped="" ref="0x4153c9c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4153b288"/>
        <function-ref name="start" scoped="" ref="0x4153c230"/>
        <function-ref name="stop" scoped="" ref="0x4153c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4153e698" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4153e698"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4153e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4153b558" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4153b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41539010"/>
        <function-ref name="test" scoped="" ref="0x4153a350"/>
        <function-ref name="get" scoped="" ref="0x4153bba0"/>
        <function-ref name="reset" scoped="" ref="0x4153a5c8"/>
        <function-ref name="getMode" scoped="" ref="0x415392b0"/>
        <function-ref name="overflow" scoped="" ref="0x4153a0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4153ad30"/>
        <function-ref name="set" scoped="" ref="0x4153be18"/>
        <function-ref name="start" scoped="" ref="0x4153a840"/>
        <function-ref name="stop" scoped="" ref="0x4153aab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f3d240" loc="143:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f3d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f3d418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40f3c4d0" loc="146:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40f3c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40f3c7a8"/>
        <function-ref name="setRoot" scoped="" ref="0x40f3c888"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40f3c968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f4a850" loc="127:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f4a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4aa28"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4ab08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4abe8"/>
        <function-ref name="cancel" scoped="" ref="0x40f4acc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4ada8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40f177e8" loc="116:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40f177e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f179c0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40f17aa0"/>
        <function-ref name="setType" scoped="" ref="0x40f17b80"/>
        <function-ref name="getOrigin" scoped="" ref="0x40f17c60"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f17d40"/>
        <function-ref name="getType" scoped="" ref="0x40f17e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40f47708" loc="130:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40f47708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40f478e0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40f479c0"/>
        <function-ref name="txNoAck" scoped="" ref="0x40f47aa0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40f47b80"/>
        <function-ref name="evicted" scoped="" ref="0x40f47c60"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40f47d40"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40f47e20"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40f47f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40f3f468" loc="141:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40f3f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40f3fa90"/>
        <function-ref name="flush" scoped="" ref="0x40f3d010"/>
        <function-ref name="lookup" scoped="" ref="0x40f3fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40f18db8" loc="114:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40f18db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40f17010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f17150" loc="115:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f17150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f17328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f17408"/>
        <function-ref name="getPayload" scoped="" ref="0x40f174e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f175c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f176a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40f189f8" loc="113:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40f189f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f18be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f3a9b0" loc="150:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f3a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f3ab88"/>
        <function-ref name="rand32" scoped="" ref="0x40f3ac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f19ea8" loc="111:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f19ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f180c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f181a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f18280"/>
        <function-ref name="cancel" scoped="" ref="0x40f18360"/>
        <function-ref name="sendDone" scoped="" ref="0x40f18440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40f49538" loc="129:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40f49538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f47048"/>
        <function-ref name="fired" scoped="" ref="0x40f482e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f489e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f48790"/>
        <function-ref name="getdt" scoped="" ref="0x40f474f8"/>
        <function-ref name="gett0" scoped="" ref="0x40f472a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f48538"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f49b60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f48d08"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f49de0"/>
        <function-ref name="stop" scoped="" ref="0x40f48088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40f3adc8" loc="155:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40f3adc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f39010"/>
        <function-ref name="stopDone" scoped="" ref="0x40f390f0"/>
        <function-ref name="start" scoped="" ref="0x40f391d0"/>
        <function-ref name="stop" scoped="" ref="0x40f392b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40f39430" loc="246:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40f39430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f39608"/>
        <function-ref name="runTask" scoped="" ref="0x40f396e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40f46db0" loc="138:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40f46db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f44af8"/>
        <function-ref name="enqueue" scoped="" ref="0x40f43208"/>
        <function-ref name="element" scoped="" ref="0x40f43558"/>
        <function-ref name="maxSize" scoped="" ref="0x40f448a0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f44e68"/>
        <function-ref name="empty" scoped="" ref="0x40f443f0"/>
        <function-ref name="size" scoped="" ref="0x40f44648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40f3d890" loc="145:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40f3d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40f3da68"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40f3db48"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40f3dc28"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40f3dd08"/>
        <function-ref name="getEtx" scoped="" ref="0x40f3dde8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40f3dec8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40f3c010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40f3c0f0"/>
        <function-ref name="getParent" scoped="" ref="0x40f3c1d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40f3c2b0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40f3c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f46648" loc="132:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f46648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f46820"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f46900"/>
        <function-ref name="getPayload" scoped="" ref="0x40f469e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f46ac0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f46ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f19700" loc="109:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f19700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f198d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f18618" loc="112:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f18618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f18800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40f4a010" loc="118:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40f4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40f4a1e8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40f4a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40f46070" loc="131:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40f46070"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40f46248"/>
        <function-ref name="routeFound" scoped="" ref="0x40f46328"/>
        <function-ref name="nextHop" scoped="" ref="0x40f46408"/>
        <function-ref name="noRoute" scoped="" ref="0x40f464e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f3ba50" loc="149:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f3ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f3bc28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f3bd08"/>
        <function-ref name="led1On" scoped="" ref="0x40f3bde8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f3bec8"/>
        <function-ref name="led3Off" scoped="" ref="0x40f3a010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f3a0f0"/>
        <function-ref name="get" scoped="" ref="0x40f3a1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f3a2b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f3a390"/>
        <function-ref name="led3On" scoped="" ref="0x40f3a470"/>
        <function-ref name="led0On" scoped="" ref="0x40f3a550"/>
        <function-ref name="led2Off" scoped="" ref="0x40f3a630"/>
        <function-ref name="led2On" scoped="" ref="0x40f3a710"/>
        <function-ref name="set" scoped="" ref="0x40f3a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Talk" ref="0x40f4a408" loc="119:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Talk" scoped="" ref="0x40f4a408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Talk"/>
      </instance>
      <interface-functions>
        <function-ref name="get_s71" scoped="" ref="0x40f4a5e0"/>
        <function-ref name="get_r71" scoped="" ref="0x40f4a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40f4aee8" loc="128:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f4aee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f49188"/>
        <function-ref name="noAck" scoped="" ref="0x40f49268"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f49348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40f4c010" loc="117:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40f4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40f4c1e8"/>
        <function-ref name="option" scoped="" ref="0x40f4c2c8"/>
        <function-ref name="setEtx" scoped="" ref="0x40f4c3a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40f4c488"/>
        <function-ref name="clearOption" scoped="" ref="0x40f4c568"/>
        <function-ref name="getEtx" scoped="" ref="0x40f4c648"/>
        <function-ref name="getOrigin" scoped="" ref="0x40f4c728"/>
        <function-ref name="setType" scoped="" ref="0x40f4c808"/>
        <function-ref name="setOption" scoped="" ref="0x40f4c8e8"/>
        <function-ref name="matchPacket" scoped="" ref="0x40f4c9c8"/>
        <function-ref name="getThl" scoped="" ref="0x40f4caa8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40f4cb88"/>
        <function-ref name="matchInstance" scoped="" ref="0x40f4cc68"/>
        <function-ref name="getType" scoped="" ref="0x40f4cdc8"/>
        <function-ref name="setThl" scoped="" ref="0x40f4cea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40f43958" loc="139:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40f43958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f42aa8"/>
        <function-ref name="maxSize" scoped="" ref="0x40f424c0"/>
        <function-ref name="empty" scoped="" ref="0x40f42010"/>
        <function-ref name="put" scoped="" ref="0x40f42718"/>
        <function-ref name="size" scoped="" ref="0x40f42268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f3ce68" loc="148:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f3ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f3b050"/>
        <function-ref name="source" scoped="" ref="0x40f3b130"/>
        <function-ref name="address" scoped="" ref="0x40f3b210"/>
        <function-ref name="destination" scoped="" ref="0x40f3b2f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f3b3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f3b4b0"/>
        <function-ref name="type" scoped="" ref="0x40f3b590"/>
        <function-ref name="setType" scoped="" ref="0x40f3b670"/>
        <function-ref name="isForMe" scoped="" ref="0x40f3b750"/>
        <function-ref name="setGroup" scoped="" ref="0x40f3b830"/>
        <function-ref name="localGroup" scoped="" ref="0x40f3b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f19a18" loc="110:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f19a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f19bf0"/>
        <function-ref name="stop" scoped="" ref="0x40f19cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40f3d578" loc="144:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40f3d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f3d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40f42ee0" loc="140:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40f42ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f3f010"/>
        <function-ref name="maxSize" scoped="" ref="0x40f40a08"/>
        <function-ref name="empty" scoped="" ref="0x40f40558"/>
        <function-ref name="put" scoped="" ref="0x40f40c60"/>
        <function-ref name="size" scoped="" ref="0x40f407b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40f3cb40" loc="147:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40f3cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40f3cd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40f33950" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40f33950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f54aa8"/>
        <function-ref name="maxSize" scoped="" ref="0x40f544c0"/>
        <function-ref name="empty" scoped="" ref="0x40f54010"/>
        <function-ref name="put" scoped="" ref="0x40f54718"/>
        <function-ref name="size" scoped="" ref="0x40f54268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x415bcc48" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x415bcc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415bad20"/>
        <function-ref name="maxSize" scoped="" ref="0x415ba738"/>
        <function-ref name="empty" scoped="" ref="0x415ba288"/>
        <function-ref name="put" scoped="" ref="0x415ba990"/>
        <function-ref name="size" scoped="" ref="0x415ba4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415bc8a0" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415bc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415bca78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40f53e40" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40f53e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f50010"/>
        <function-ref name="maxSize" scoped="" ref="0x40f52968"/>
        <function-ref name="empty" scoped="" ref="0x40f524b8"/>
        <function-ref name="put" scoped="" ref="0x40f52bc0"/>
        <function-ref name="size" scoped="" ref="0x40f52710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x415b13e8" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x415b13e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415af4c0"/>
        <function-ref name="maxSize" scoped="" ref="0x415b1ec0"/>
        <function-ref name="empty" scoped="" ref="0x415b1a10"/>
        <function-ref name="put" scoped="" ref="0x415af130"/>
        <function-ref name="size" scoped="" ref="0x415b1c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415b1040" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415b1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415b1218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40f4e278" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f4e278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e79c98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e79f20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f76010"/>
        <function-ref name="enqueue" scoped="" ref="0x40f766f0"/>
        <function-ref name="element" scoped="" ref="0x40f76a40"/>
        <function-ref name="maxSize" scoped="" ref="0x40f4ed50"/>
        <function-ref name="dequeue" scoped="" ref="0x40f76380"/>
        <function-ref name="empty" scoped="" ref="0x40f4e8a0"/>
        <function-ref name="size" scoped="" ref="0x40f4eaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40f73c48" loc="39:./net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40f73c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40f91288"/>
        <function-ref name="flush" scoped="" ref="0x40f91788"/>
        <function-ref name="lookup" scoped="" ref="0x40f91508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x415a12f8" loc="46:./net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x415a12f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x415a1920"/>
        <function-ref name="flush" scoped="" ref="0x415a1e20"/>
        <function-ref name="lookup" scoped="" ref="0x415a1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415a3f10" loc="45:./net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415a3f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415a1108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x415f0080" loc="49:./net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x415f0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x415f0258"/>
        <function-ref name="option" scoped="" ref="0x415f0338"/>
        <function-ref name="setEtx" scoped="" ref="0x415f0418"/>
        <function-ref name="setOrigin" scoped="" ref="0x415f04f8"/>
        <function-ref name="clearOption" scoped="" ref="0x415f05d8"/>
        <function-ref name="getEtx" scoped="" ref="0x415f06b8"/>
        <function-ref name="getOrigin" scoped="" ref="0x415f0798"/>
        <function-ref name="setType" scoped="" ref="0x415f0878"/>
        <function-ref name="setOption" scoped="" ref="0x415f0958"/>
        <function-ref name="matchPacket" scoped="" ref="0x415f0a38"/>
        <function-ref name="getThl" scoped="" ref="0x415f0b18"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x415f0bf8"/>
        <function-ref name="matchInstance" scoped="" ref="0x415f0cd8"/>
        <function-ref name="getType" scoped="" ref="0x415f0e38"/>
        <function-ref name="setThl" scoped="" ref="0x415f0f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f90680" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f90680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f8e170"/>
        <function-ref name="fired" scoped="" ref="0x40f8f410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f8fb18"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f8f8c0"/>
        <function-ref name="getdt" scoped="" ref="0x40f8e620"/>
        <function-ref name="gett0" scoped="" ref="0x40f8e3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f8f668"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f90ca8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f8fe38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f90f28"/>
        <function-ref name="stop" scoped="" ref="0x40f8f1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f8c458" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f8c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f8a010"/>
        <function-ref name="fired" scoped="" ref="0x40f8b268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f8b970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f8b718"/>
        <function-ref name="getdt" scoped="" ref="0x40f8a4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40f8a268"/>
        <function-ref name="isRunning" scoped="" ref="0x40f8b4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f8ca80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f8bc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f8cd00"/>
        <function-ref name="stop" scoped="" ref="0x40f8b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40fb4220" loc="49:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40fb4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fb43f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40fba9b8" loc="39:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40fba9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40fbab90"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40fbac70"/>
        <function-ref name="txNoAck" scoped="" ref="0x40fbad50"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40fbae30"/>
        <function-ref name="evicted" scoped="" ref="0x40fbaf10"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40fb9010"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40fb90f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40fb91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fb9698" loc="41:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fb9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fb9870"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fb9950"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb9a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb9b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fb9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40fb5510" loc="46:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fb5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fb56e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb57c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb58a8"/>
        <function-ref name="cancel" scoped="" ref="0x40fb5988"/>
        <function-ref name="sendDone" scoped="" ref="0x40fb5a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fbbf20" loc="37:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fbbf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fba110"/>
        <function-ref name="getPayload" scoped="" ref="0x40fba1f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fba2d0"/>
        <function-ref name="cancel" scoped="" ref="0x40fba3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40fba490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40fb4948" loc="51:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40fb4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40fb4ba0"/>
        <function-ref name="rand32" scoped="" ref="0x40fb4c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40fb89f0" loc="48:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40fb89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fb8bc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fb8ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fb8d88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fb8e68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fb4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fb9340" loc="40:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fb9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fb9518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40fb5c90" loc="47:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40fb5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fb5e68"/>
        <function-ref name="source" scoped="" ref="0x40fb8010"/>
        <function-ref name="address" scoped="" ref="0x40fb80f0"/>
        <function-ref name="destination" scoped="" ref="0x40fb81d0"/>
        <function-ref name="setSource" scoped="" ref="0x40fb82b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40fb8390"/>
        <function-ref name="type" scoped="" ref="0x40fb8470"/>
        <function-ref name="setType" scoped="" ref="0x40fb8550"/>
        <function-ref name="isForMe" scoped="" ref="0x40fb8630"/>
        <function-ref name="setGroup" scoped="" ref="0x40fb8710"/>
        <function-ref name="localGroup" scoped="" ref="0x40fb87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fba618" loc="38:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fba618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40fb5178" loc="42:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40fb5178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40fb5350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fbba98" loc="36:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fbba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fbbc70"/>
        <function-ref name="stop" scoped="" ref="0x40fbbd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40fb45f0" loc="50:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40fb45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40fb47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ff5280" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ff5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff5458"/>
        <function-ref name="getPayload" scoped="" ref="0x40ff5538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff5618"/>
        <function-ref name="cancel" scoped="" ref="0x40ff56f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff57d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ff5918" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ff5918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff5af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff5bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ff5cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff5d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff5e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41059010" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41059010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410591e8"/>
        <function-ref name="source" scoped="" ref="0x410592c8"/>
        <function-ref name="address" scoped="" ref="0x410593a8"/>
        <function-ref name="destination" scoped="" ref="0x41059488"/>
        <function-ref name="setSource" scoped="" ref="0x41059568"/>
        <function-ref name="setDestination" scoped="" ref="0x41059648"/>
        <function-ref name="type" scoped="" ref="0x41059728"/>
        <function-ref name="setType" scoped="" ref="0x41059808"/>
        <function-ref name="isForMe" scoped="" ref="0x410598e8"/>
        <function-ref name="setGroup" scoped="" ref="0x410599c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41059aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41059c08" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41059c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41059de0"/>
        <function-ref name="noAck" scoped="" ref="0x41059ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41058010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415d9200" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415d9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415d93d8"/>
        <function-ref name="getPayload" scoped="" ref="0x415d94b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415d9598"/>
        <function-ref name="cancel" scoped="" ref="0x415d9678"/>
        <function-ref name="sendDone" scoped="" ref="0x415d9758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415d9898" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415d9898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415d9a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x415d9b50"/>
        <function-ref name="getPayload" scoped="" ref="0x415d9c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415d9d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415d9df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415d8010" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415d81e8"/>
        <function-ref name="source" scoped="" ref="0x415d82c8"/>
        <function-ref name="address" scoped="" ref="0x415d83a8"/>
        <function-ref name="destination" scoped="" ref="0x415d8488"/>
        <function-ref name="setSource" scoped="" ref="0x415d8568"/>
        <function-ref name="setDestination" scoped="" ref="0x415d8648"/>
        <function-ref name="type" scoped="" ref="0x415d8728"/>
        <function-ref name="setType" scoped="" ref="0x415d8808"/>
        <function-ref name="isForMe" scoped="" ref="0x415d88e8"/>
        <function-ref name="setGroup" scoped="" ref="0x415d89c8"/>
        <function-ref name="localGroup" scoped="" ref="0x415d8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x415d8c08" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x415d8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415d8de0"/>
        <function-ref name="noAck" scoped="" ref="0x415d8ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x415d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415d58a0" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415d58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415d5a78"/>
        <function-ref name="getPayload" scoped="" ref="0x415d5b58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415d5c38"/>
        <function-ref name="cancel" scoped="" ref="0x415d5d18"/>
        <function-ref name="sendDone" scoped="" ref="0x415d5df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415d1010" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415d11e8"/>
        <function-ref name="getPayload" scoped="" ref="0x415d12c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415d13a8"/>
        <function-ref name="cancel" scoped="" ref="0x415d1488"/>
        <function-ref name="sendDone" scoped="" ref="0x415d1568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415d16a8" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415d16a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415d1880"/>
        <function-ref name="source" scoped="" ref="0x415d1960"/>
        <function-ref name="address" scoped="" ref="0x415d1a40"/>
        <function-ref name="destination" scoped="" ref="0x415d1b20"/>
        <function-ref name="setSource" scoped="" ref="0x415d1c00"/>
        <function-ref name="setDestination" scoped="" ref="0x415d1ce0"/>
        <function-ref name="type" scoped="" ref="0x415d1dc0"/>
        <function-ref name="setType" scoped="" ref="0x415d1ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x415d0010"/>
        <function-ref name="setGroup" scoped="" ref="0x415d00f0"/>
        <function-ref name="localGroup" scoped="" ref="0x415d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410184c0" loc="43:/opt/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410184c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41018698"/>
        <function-ref name="getPayload" scoped="" ref="0x41018778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41018858"/>
        <function-ref name="cancel" scoped="" ref="0x41018938"/>
        <function-ref name="sendDone" scoped="" ref="0x41018a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41063b48" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41063b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41063d30"/>
        <function-ref name="getPayload" scoped="" ref="0x41063e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41063ef0"/>
        <function-ref name="cancel" scoped="" ref="0x41062010"/>
        <function-ref name="sendDone" scoped="" ref="0x410620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410633d8" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410633d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410635c0"/>
        <function-ref name="getPayload" scoped="" ref="0x410636a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41063780"/>
        <function-ref name="cancel" scoped="" ref="0x41063860"/>
        <function-ref name="sendDone" scoped="" ref="0x41063940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41062e08" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41062e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41060010"/>
        <function-ref name="payloadLength" scoped="" ref="0x410600f0"/>
        <function-ref name="getPayload" scoped="" ref="0x410601d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410602b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41060390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41060510" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41060510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410606e8"/>
        <function-ref name="runTask" scoped="" ref="0x410607c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41060948" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41060948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41060b20"/>
        <function-ref name="runTask" scoped="" ref="0x41060c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41062230" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41062230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41062408"/>
        <function-ref name="source" scoped="" ref="0x410624e8"/>
        <function-ref name="address" scoped="" ref="0x410625c8"/>
        <function-ref name="destination" scoped="" ref="0x410626a8"/>
        <function-ref name="setSource" scoped="" ref="0x41062788"/>
        <function-ref name="setDestination" scoped="" ref="0x41062868"/>
        <function-ref name="type" scoped="" ref="0x41062948"/>
        <function-ref name="setType" scoped="" ref="0x41062a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41062b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41062be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41062cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41056a70" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41056a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41056c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x41056d28"/>
        <function-ref name="getPayload" scoped="" ref="0x41056e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41056ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41052010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41056758" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41056758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41056930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41052150" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41052150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41052328"/>
        <function-ref name="source" scoped="" ref="0x41052408"/>
        <function-ref name="address" scoped="" ref="0x410524e8"/>
        <function-ref name="destination" scoped="" ref="0x410525c8"/>
        <function-ref name="setSource" scoped="" ref="0x410526a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41052788"/>
        <function-ref name="type" scoped="" ref="0x41052868"/>
        <function-ref name="setType" scoped="" ref="0x41052948"/>
        <function-ref name="isForMe" scoped="" ref="0x41052a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41052b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41052be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4104f410" loc="47:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4104f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4104f5e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4104f6c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4104f7a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4104f888"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4104f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4104f0f8" loc="46:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4104f0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4104f2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4104faa8" loc="48:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4104faa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4104fc80"/>
        <function-ref name="source" scoped="" ref="0x4104fd60"/>
        <function-ref name="address" scoped="" ref="0x4104fe40"/>
        <function-ref name="destination" scoped="" ref="0x4104ff20"/>
        <function-ref name="setSource" scoped="" ref="0x4104c018"/>
        <function-ref name="setDestination" scoped="" ref="0x4104c0f8"/>
        <function-ref name="type" scoped="" ref="0x4104c1d8"/>
        <function-ref name="setType" scoped="" ref="0x4104c2b8"/>
        <function-ref name="isForMe" scoped="" ref="0x4104c398"/>
        <function-ref name="setGroup" scoped="" ref="0x4104c478"/>
        <function-ref name="localGroup" scoped="" ref="0x4104c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x410f06f8" loc="99:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x410f06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x410f08d0"/>
        <function-ref name="setRoot" scoped="" ref="0x410f09b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x410f0a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x410e4448" loc="245:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x410e4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410e4620"/>
        <function-ref name="runTask" scoped="" ref="0x410e4700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x410ec328" loc="108:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x410ec328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x410ec500"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x410ec5e0"/>
        <function-ref name="txNoAck" scoped="" ref="0x410ec6c0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x410ec7a0"/>
        <function-ref name="evicted" scoped="" ref="0x410ec880"/>
        <function-ref name="clearDLQ" scoped="" ref="0x410ec960"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x410eca40"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x410ecb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x410efc48" loc="102:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x410efc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x410efe20"/>
        <function-ref name="setEtx" scoped="" ref="0x410eff00"/>
        <function-ref name="clearOption" scoped="" ref="0x410ee010"/>
        <function-ref name="getEtx" scoped="" ref="0x410ee0f0"/>
        <function-ref name="setOption" scoped="" ref="0x410ee1d0"/>
        <function-ref name="setParent" scoped="" ref="0x410ee2b0"/>
        <function-ref name="getParent" scoped="" ref="0x410ee390"/>
        <function-ref name="getOption" scoped="" ref="0x410ee470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x410eb870" loc="110:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x410eb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410eba48"/>
        <function-ref name="stopDone" scoped="" ref="0x410ebb28"/>
        <function-ref name="start" scoped="" ref="0x410ebc08"/>
        <function-ref name="stop" scoped="" ref="0x410ebce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x410e5478" loc="113:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x410e5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410e5650"/>
        <function-ref name="rand32" scoped="" ref="0x410e5730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x410f0bd0" loc="100:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x410f0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x410f0da8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x410f0e88"/>
        <function-ref name="numNeighbors" scoped="" ref="0x410ef010"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x410ef0f0"/>
        <function-ref name="getEtx" scoped="" ref="0x410ef1d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x410ef2b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x410ef390"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x410ef470"/>
        <function-ref name="getParent" scoped="" ref="0x410ef550"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x410ef630"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x410ef710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x410e4010" loc="354:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x410e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410e41e8"/>
        <function-ref name="runTask" scoped="" ref="0x410e42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410ee5b0" loc="103:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410ee5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410ee788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x410ee918" loc="106:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x410ee918"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410eeaf0"/>
        <function-ref name="getPayload" scoped="" ref="0x410eebd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410eecb0"/>
        <function-ref name="cancel" scoped="" ref="0x410eed90"/>
        <function-ref name="sendDone" scoped="" ref="0x410eee70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x410ebed8" loc="111:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x410ebed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410e9a18"/>
        <function-ref name="fired" scoped="" ref="0x410eacb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410e93d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x410e9180"/>
        <function-ref name="getdt" scoped="" ref="0x410e9ec8"/>
        <function-ref name="gett0" scoped="" ref="0x410e9c70"/>
        <function-ref name="isRunning" scoped="" ref="0x410eaf08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410ea558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410e96f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x410ea7d8"/>
        <function-ref name="stop" scoped="" ref="0x410eaa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x410e81b8" loc="112:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x410e81b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410e6d58"/>
        <function-ref name="fired" scoped="" ref="0x410e6010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410e6718"/>
        <function-ref name="isOneShot" scoped="" ref="0x410e64c0"/>
        <function-ref name="getdt" scoped="" ref="0x410e5268"/>
        <function-ref name="gett0" scoped="" ref="0x410e5010"/>
        <function-ref name="isRunning" scoped="" ref="0x410e6268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410e8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410e6a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x410e8ae0"/>
        <function-ref name="stop" scoped="" ref="0x410e8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x410e5870" loc="114:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x410e5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x410e5a48"/>
        <function-ref name="setClientCongested" scoped="" ref="0x410e5b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x410e5c68" loc="116:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x410e5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x410e5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x410ec010" loc="107:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x410ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410ec1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410ecc60" loc="109:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410ecc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410ece38"/>
        <function-ref name="source" scoped="" ref="0x410ecf18"/>
        <function-ref name="address" scoped="" ref="0x410eb010"/>
        <function-ref name="destination" scoped="" ref="0x410eb0f0"/>
        <function-ref name="setSource" scoped="" ref="0x410eb1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x410eb2b0"/>
        <function-ref name="type" scoped="" ref="0x410eb390"/>
        <function-ref name="setType" scoped="" ref="0x410eb470"/>
        <function-ref name="isForMe" scoped="" ref="0x410eb550"/>
        <function-ref name="setGroup" scoped="" ref="0x410eb630"/>
        <function-ref name="localGroup" scoped="" ref="0x410eb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410ef850" loc="101:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410ef850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410efa28"/>
        <function-ref name="stop" scoped="" ref="0x410efb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x410f0140" loc="98:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x410f0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x410f0318"/>
        <function-ref name="routeFound" scoped="" ref="0x410f03f8"/>
        <function-ref name="nextHop" scoped="" ref="0x410f04d8"/>
        <function-ref name="noRoute" scoped="" ref="0x410f05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4111d010" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4111d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4111bb00"/>
        <function-ref name="fired" scoped="" ref="0x4111dd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4111b4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4111b268"/>
        <function-ref name="getdt" scoped="" ref="0x4111a010"/>
        <function-ref name="gett0" scoped="" ref="0x4111bd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4111b010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4111d638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4111b7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4111d8b8"/>
        <function-ref name="stop" scoped="" ref="0x4111db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41117360" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41117360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41117538"/>
        <function-ref name="getPayload" scoped="" ref="0x41117618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411176f8"/>
        <function-ref name="cancel" scoped="" ref="0x411177d8"/>
        <function-ref name="sendDone" scoped="" ref="0x411178b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411179f8" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411179f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41117bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41117cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x41117d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41117e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41116010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41116150" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41116150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41116328"/>
        <function-ref name="source" scoped="" ref="0x41116408"/>
        <function-ref name="address" scoped="" ref="0x411164e8"/>
        <function-ref name="destination" scoped="" ref="0x411165c8"/>
        <function-ref name="setSource" scoped="" ref="0x411166a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41116788"/>
        <function-ref name="type" scoped="" ref="0x41116868"/>
        <function-ref name="setType" scoped="" ref="0x41116948"/>
        <function-ref name="isForMe" scoped="" ref="0x41116a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41116b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41116be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41116d48" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41116d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41116f20"/>
        <function-ref name="noAck" scoped="" ref="0x41115018"/>
        <function-ref name="wasAcked" scoped="" ref="0x411150f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4165b2e8" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4165b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4165b4c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4165b5a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4165b680"/>
        <function-ref name="cancel" scoped="" ref="0x4165b760"/>
        <function-ref name="sendDone" scoped="" ref="0x4165b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4165b980" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4165b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4165bb58"/>
        <function-ref name="payloadLength" scoped="" ref="0x4165bc38"/>
        <function-ref name="getPayload" scoped="" ref="0x4165bd18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4165bdf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4165bed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4165a030" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4165a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4165a208"/>
        <function-ref name="source" scoped="" ref="0x4165a2e8"/>
        <function-ref name="address" scoped="" ref="0x4165a3c8"/>
        <function-ref name="destination" scoped="" ref="0x4165a4a8"/>
        <function-ref name="setSource" scoped="" ref="0x4165a588"/>
        <function-ref name="setDestination" scoped="" ref="0x4165a668"/>
        <function-ref name="type" scoped="" ref="0x4165a748"/>
        <function-ref name="setType" scoped="" ref="0x4165a828"/>
        <function-ref name="isForMe" scoped="" ref="0x4165a908"/>
        <function-ref name="setGroup" scoped="" ref="0x4165a9e8"/>
        <function-ref name="localGroup" scoped="" ref="0x4165aac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4165ac28" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4165ac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4165ae00"/>
        <function-ref name="noAck" scoped="" ref="0x4165aee0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41658010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41656998" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41656998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41656b70"/>
        <function-ref name="getPayload" scoped="" ref="0x41656c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41656d30"/>
        <function-ref name="cancel" scoped="" ref="0x41656e10"/>
        <function-ref name="sendDone" scoped="" ref="0x41656ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41653080" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41653080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41653258"/>
        <function-ref name="getPayload" scoped="" ref="0x41653338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41653418"/>
        <function-ref name="cancel" scoped="" ref="0x416534f8"/>
        <function-ref name="sendDone" scoped="" ref="0x416535d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41653718" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41653718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416538f0"/>
        <function-ref name="source" scoped="" ref="0x416539d0"/>
        <function-ref name="address" scoped="" ref="0x41653ab0"/>
        <function-ref name="destination" scoped="" ref="0x41653b90"/>
        <function-ref name="setSource" scoped="" ref="0x41653c70"/>
        <function-ref name="setDestination" scoped="" ref="0x41653d50"/>
        <function-ref name="type" scoped="" ref="0x41653e30"/>
        <function-ref name="setType" scoped="" ref="0x41653f10"/>
        <function-ref name="isForMe" scoped="" ref="0x41652010"/>
        <function-ref name="setGroup" scoped="" ref="0x416520f0"/>
        <function-ref name="localGroup" scoped="" ref="0x416521d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411146d0" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411148a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41114988"/>
        <function-ref name="getPayload" scoped="" ref="0x41114a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41114b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41114c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411143b8" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411143b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41114590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41114d68" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41114d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41113010"/>
        <function-ref name="source" scoped="" ref="0x411130f0"/>
        <function-ref name="address" scoped="" ref="0x411131d0"/>
        <function-ref name="destination" scoped="" ref="0x411132b0"/>
        <function-ref name="setSource" scoped="" ref="0x41113390"/>
        <function-ref name="setDestination" scoped="" ref="0x41113470"/>
        <function-ref name="type" scoped="" ref="0x41113550"/>
        <function-ref name="setType" scoped="" ref="0x41113630"/>
        <function-ref name="isForMe" scoped="" ref="0x41113710"/>
        <function-ref name="setGroup" scoped="" ref="0x411137f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411138d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x41111498" loc="2:./net/ctp/DummyActiveMessageP.nc">
      <component-ref qname="DummyActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41111498"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x41111670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4113d150" loc="46:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4113d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113d328"/>
        <function-ref name="payloadLength" scoped="" ref="0x4113d408"/>
        <function-ref name="getPayload" scoped="" ref="0x4113d4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113d5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4113d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4113e9e8" loc="45:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4113e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4113ebc0"/>
        <function-ref name="getPayload" scoped="" ref="0x4113eca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113ed80"/>
        <function-ref name="cancel" scoped="" ref="0x4113ee60"/>
        <function-ref name="sendDone" scoped="" ref="0x4113d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41644318" loc="38:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41644318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416444f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x416445d0"/>
        <function-ref name="getPayload" scoped="" ref="0x416446b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41644790"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41644870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41647c68" loc="37:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41647c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41647e40"/>
        <function-ref name="getPayload" scoped="" ref="0x41647f20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41644018"/>
        <function-ref name="cancel" scoped="" ref="0x416440f8"/>
        <function-ref name="sendDone" scoped="" ref="0x416441d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x41694420" loc="46:./net/CollectionIdP.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41694420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x416945f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4112fbf0" loc="49:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4112fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4112fdc8"/>
        <function-ref name="getPayload" scoped="" ref="0x4112fea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4115d010"/>
        <function-ref name="cancel" scoped="" ref="0x4115d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4115d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4115d310" loc="50:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4115d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4115d4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4115d5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4115d6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4115d788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4115d868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4115d9a8" loc="51:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4115d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4115db80"/>
        <function-ref name="source" scoped="" ref="0x4115dc60"/>
        <function-ref name="address" scoped="" ref="0x4115dd40"/>
        <function-ref name="destination" scoped="" ref="0x4115de20"/>
        <function-ref name="setSource" scoped="" ref="0x4115df00"/>
        <function-ref name="setDestination" scoped="" ref="0x4115c010"/>
        <function-ref name="type" scoped="" ref="0x4115c0f0"/>
        <function-ref name="setType" scoped="" ref="0x4115c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4115c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4115c390"/>
        <function-ref name="localGroup" scoped="" ref="0x4115c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4115c5d0" loc="52:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4115c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4115c7a8"/>
        <function-ref name="noAck" scoped="" ref="0x4115c888"/>
        <function-ref name="wasAcked" scoped="" ref="0x4115c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41690670" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41690670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41690848"/>
        <function-ref name="getPayload" scoped="" ref="0x41690928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41690a08"/>
        <function-ref name="cancel" scoped="" ref="0x41690ae8"/>
        <function-ref name="sendDone" scoped="" ref="0x41690bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41690d38" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41690d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41690f10"/>
        <function-ref name="getPayload" scoped="" ref="0x4168f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4168f0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4168f1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4168f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4168f3f0" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4168f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4168f5c8"/>
        <function-ref name="source" scoped="" ref="0x4168f6a8"/>
        <function-ref name="address" scoped="" ref="0x4168f788"/>
        <function-ref name="destination" scoped="" ref="0x4168f868"/>
        <function-ref name="setSource" scoped="" ref="0x4168f948"/>
        <function-ref name="setDestination" scoped="" ref="0x4168fa28"/>
        <function-ref name="type" scoped="" ref="0x4168fb08"/>
        <function-ref name="setType" scoped="" ref="0x4168fbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x4168fcc8"/>
        <function-ref name="setGroup" scoped="" ref="0x4168fda8"/>
        <function-ref name="localGroup" scoped="" ref="0x4168fe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4112ab68" loc="44:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4112ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4112ad40"/>
        <function-ref name="getPayload" scoped="" ref="0x4112ae20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4112af00"/>
        <function-ref name="cancel" scoped="" ref="0x41127010"/>
        <function-ref name="sendDone" scoped="" ref="0x411270f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x411259f0" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411259f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41125bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x41125cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41125d98"/>
        <function-ref name="cancel" scoped="" ref="0x41125e78"/>
        <function-ref name="sendDone" scoped="" ref="0x41124010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41125280" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41125280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41125468"/>
        <function-ref name="getPayload" scoped="" ref="0x41125548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41125628"/>
        <function-ref name="cancel" scoped="" ref="0x41125708"/>
        <function-ref name="sendDone" scoped="" ref="0x411257e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41124d28" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41124d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41124f00"/>
        <function-ref name="payloadLength" scoped="" ref="0x41123010"/>
        <function-ref name="getPayload" scoped="" ref="0x411230f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411231d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411232b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41123430" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41123430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41123608"/>
        <function-ref name="runTask" scoped="" ref="0x411236e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41123868" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41123868"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41123a40"/>
        <function-ref name="runTask" scoped="" ref="0x41123b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41124150" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41124150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41124328"/>
        <function-ref name="source" scoped="" ref="0x41124408"/>
        <function-ref name="address" scoped="" ref="0x411244e8"/>
        <function-ref name="destination" scoped="" ref="0x411245c8"/>
        <function-ref name="setSource" scoped="" ref="0x411246a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41124788"/>
        <function-ref name="type" scoped="" ref="0x41124868"/>
        <function-ref name="setType" scoped="" ref="0x41124948"/>
        <function-ref name="isForMe" scoped="" ref="0x41124a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41124b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41124be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411556d0" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BaseC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411558a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41155988"/>
        <function-ref name="getPayload" scoped="" ref="0x41155a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41155b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41155c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411553b8" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BaseC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411553b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41155590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41155d68" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BaseC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41155d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41154010"/>
        <function-ref name="source" scoped="" ref="0x411540f0"/>
        <function-ref name="address" scoped="" ref="0x411541d0"/>
        <function-ref name="destination" scoped="" ref="0x411542b0"/>
        <function-ref name="setSource" scoped="" ref="0x41154390"/>
        <function-ref name="setDestination" scoped="" ref="0x41154470"/>
        <function-ref name="type" scoped="" ref="0x41154550"/>
        <function-ref name="setType" scoped="" ref="0x41154630"/>
        <function-ref name="isForMe" scoped="" ref="0x41154710"/>
        <function-ref name="setGroup" scoped="" ref="0x411547f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411548d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x411523d0" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="BaseC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x411523d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411514c0"/>
        <function-ref name="maxSize" scoped="" ref="0x41152ea8"/>
        <function-ref name="empty" scoped="" ref="0x411529f8"/>
        <function-ref name="put" scoped="" ref="0x41151130"/>
        <function-ref name="size" scoped="" ref="0x41152c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416bace0" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="BaseC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416bace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416b8de8"/>
        <function-ref name="maxSize" scoped="" ref="0x416b8800"/>
        <function-ref name="empty" scoped="" ref="0x416b8350"/>
        <function-ref name="put" scoped="" ref="0x416b8a58"/>
        <function-ref name="size" scoped="" ref="0x416b85a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416ba938" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="BaseC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416ba938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416bab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x4114f6c8" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="BaseC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4114f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4114e4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x4114eba0"/>
        <function-ref name="element" scoped="" ref="0x4114eef0"/>
        <function-ref name="maxSize" scoped="" ref="0x4114e268"/>
        <function-ref name="dequeue" scoped="" ref="0x4114e830"/>
        <function-ref name="empty" scoped="" ref="0x4114fcf0"/>
        <function-ref name="size" scoped="" ref="0x4114e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41145188" loc="10:./SerialToDis/SerialToDisseminationC.nc">
      <component-ref qname="SerialToDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41145188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41145360"/>
        <function-ref name="stop" scoped="" ref="0x41145440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x41179328" loc="25:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x41179328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41179500"/>
        <function-ref name="stopDone" scoped="" ref="0x411795e0"/>
        <function-ref name="start" scoped="" ref="0x411796c0"/>
        <function-ref name="stop" scoped="" ref="0x411797a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunCommand" ref="0x411762d8" loc="28:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommand" scoped="" ref="0x411762d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RunCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="exec" scoped="" ref="0x411764b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x4117e9e8" loc="22:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x4117e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4117ebc0"/>
        <function-ref name="stop" scoped="" ref="0x4117eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41178ac0" loc="33:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41178ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41178c98"/>
        <function-ref name="getPayload" scoped="" ref="0x41178d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41178e58"/>
        <function-ref name="cancel" scoped="" ref="0x41177010"/>
        <function-ref name="sendDone" scoped="" ref="0x411770f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunCommandControl" ref="0x41176728" loc="29:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommandControl" scoped="" ref="0x41176728"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41176900"/>
        <function-ref name="stop" scoped="" ref="0x411769e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x41177350" loc="34:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x41177350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41177528"/>
        <function-ref name="stopDone" scoped="" ref="0x41177608"/>
        <function-ref name="start" scoped="" ref="0x411776e8"/>
        <function-ref name="stop" scoped="" ref="0x411777c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandUpdate" ref="0x4117aed8" loc="21:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandUpdate" scoped="" ref="0x4117aed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4117e558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41170540" loc="53:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41170540"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41170718"/>
        <function-ref name="runTask" scoped="" ref="0x411707f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x41177a20" loc="35:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x41177a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41177bf8"/>
        <function-ref name="stop" scoped="" ref="0x41177cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandValue" ref="0x4117df20" loc="20:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandValue" scoped="" ref="0x4117df20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41140a98"/>
        <function-ref name="get" scoped="" ref="0x41140580"/>
        <function-ref name="set" scoped="" ref="0x411407f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x4117eed0" loc="24:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x4117eed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411790c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41176b50" loc="31:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41176b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41176d28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41176e08"/>
        <function-ref name="led1On" scoped="" ref="0x41176ee8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41178010"/>
        <function-ref name="led3Off" scoped="" ref="0x411780f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411781d0"/>
        <function-ref name="get" scoped="" ref="0x411782b0"/>
        <function-ref name="led1Off" scoped="" ref="0x41178390"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41178470"/>
        <function-ref name="led3On" scoped="" ref="0x41178550"/>
        <function-ref name="led0On" scoped="" ref="0x41178630"/>
        <function-ref name="led2Off" scoped="" ref="0x41178710"/>
        <function-ref name="led2On" scoped="" ref="0x411787f0"/>
        <function-ref name="set" scoped="" ref="0x41178950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41141398" loc="15:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41141398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41141570"/>
        <function-ref name="stop" scoped="" ref="0x41141650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41177f20" loc="37:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41177f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41174b00"/>
        <function-ref name="fired" scoped="" ref="0x41175d38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411744c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41174268"/>
        <function-ref name="getdt" scoped="" ref="0x41173010"/>
        <function-ref name="gett0" scoped="" ref="0x41174d58"/>
        <function-ref name="isRunning" scoped="" ref="0x41174010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411755e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411747e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41175860"/>
        <function-ref name="stop" scoped="" ref="0x41175ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41197190" loc="46:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="SerialToDisseminationC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41197190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41197368"/>
        <function-ref name="payloadLength" scoped="" ref="0x41197448"/>
        <function-ref name="getPayload" scoped="" ref="0x41197528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41197608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411976e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4119be38" loc="45:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="SerialToDisseminationC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4119be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41197050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41197828" loc="47:/opt/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="SerialToDisseminationC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41197828"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41197a00"/>
        <function-ref name="source" scoped="" ref="0x41197ae0"/>
        <function-ref name="address" scoped="" ref="0x41197bc0"/>
        <function-ref name="destination" scoped="" ref="0x41197ca0"/>
        <function-ref name="setSource" scoped="" ref="0x41197d80"/>
        <function-ref name="setDestination" scoped="" ref="0x41197e60"/>
        <function-ref name="type" scoped="" ref="0x41196010"/>
        <function-ref name="setType" scoped="" ref="0x411960f0"/>
        <function-ref name="isForMe" scoped="" ref="0x411961d0"/>
        <function-ref name="setGroup" scoped="" ref="0x411962b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41196390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41191a18" loc="47:./net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41191a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41191bf0"/>
        <function-ref name="stop" scoped="" ref="0x41191cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41186690" loc="52:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41186690"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41186868"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41186948"/>
        <function-ref name="reset" scoped="" ref="0x41186a28"/>
        <function-ref name="start" scoped="" ref="0x41186b08"/>
        <function-ref name="stop" scoped="" ref="0x41186be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x4118d2d0" loc="51:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4118d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x4118d588"/>
        <function-ref name="stop" scoped="" ref="0x4118d908"/>
        <function-ref name="newData" scoped="" ref="0x4118d668"/>
        <function-ref name="start" scoped="" ref="0x4118d748"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4118d828"/>
        <function-ref name="requestData" scoped="" ref="0x4118d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411905a0" loc="48:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41190778"/>
        <function-ref name="stop" scoped="" ref="0x41190858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41188178" loc="53:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41188178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41188350"/>
        <function-ref name="stop" scoped="" ref="0x41188430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x41180318" loc="57:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x41180318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411804f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x41181b08" loc="56:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x41181b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41181ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x41181dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41181ea0"/>
        <function-ref name="cancel" scoped="" ref="0x41180010"/>
        <function-ref name="sendDone" scoped="" ref="0x411800f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41181040" loc="53:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41181040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41181218"/>
        <function-ref name="getPayload" scoped="" ref="0x411812f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411813d8"/>
        <function-ref name="cancel" scoped="" ref="0x411814b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41181598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41182100" loc="50:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41182100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411822d8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411823b8"/>
        <function-ref name="reset" scoped="" ref="0x41182498"/>
        <function-ref name="start" scoped="" ref="0x41182578"/>
        <function-ref name="stop" scoped="" ref="0x41182658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41183530" loc="49:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41183530"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x411837e8"/>
        <function-ref name="stop" scoped="" ref="0x41183b68"/>
        <function-ref name="newData" scoped="" ref="0x411838c8"/>
        <function-ref name="start" scoped="" ref="0x411839a8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x41183a88"/>
        <function-ref name="requestData" scoped="" ref="0x41183708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x41181720" loc="54:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41181720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411818f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41180660" loc="59:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41180660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41180838"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41180918"/>
        <function-ref name="led1On" scoped="" ref="0x411809f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41180ad8"/>
        <function-ref name="led3Off" scoped="" ref="0x41180bb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41180c98"/>
        <function-ref name="get" scoped="" ref="0x41180d78"/>
        <function-ref name="led1Off" scoped="" ref="0x41180e58"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4117f010"/>
        <function-ref name="led3On" scoped="" ref="0x4117f0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4117f1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4117f2b0"/>
        <function-ref name="led2On" scoped="" ref="0x4117f390"/>
        <function-ref name="set" scoped="" ref="0x4117f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41188ca8" loc="46:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41188ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41188e80"/>
        <function-ref name="stop" scoped="" ref="0x41183010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41182bd0" loc="51:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41182bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41182da8"/>
        <function-ref name="stop" scoped="" ref="0x41182e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411849c0" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411849c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41184b98"/>
        <function-ref name="getPayload" scoped="" ref="0x41184c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41184d58"/>
        <function-ref name="cancel" scoped="" ref="0x41184e38"/>
        <function-ref name="sendDone" scoped="" ref="0x41184f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411d2070" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411d2070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411d2248"/>
        <function-ref name="payloadLength" scoped="" ref="0x411d2328"/>
        <function-ref name="getPayload" scoped="" ref="0x411d2408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411d24e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411d25c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411d2708" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411d2708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411d28e0"/>
        <function-ref name="source" scoped="" ref="0x411d29c0"/>
        <function-ref name="address" scoped="" ref="0x411d2aa0"/>
        <function-ref name="destination" scoped="" ref="0x411d2b80"/>
        <function-ref name="setSource" scoped="" ref="0x411d2c60"/>
        <function-ref name="setDestination" scoped="" ref="0x411d2d40"/>
        <function-ref name="type" scoped="" ref="0x411d2e20"/>
        <function-ref name="setType" scoped="" ref="0x411d2f00"/>
        <function-ref name="isForMe" scoped="" ref="0x411d1010"/>
        <function-ref name="setGroup" scoped="" ref="0x411d10f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411d11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411d1330" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411d1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411d1508"/>
        <function-ref name="noAck" scoped="" ref="0x411d15e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411d16c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416a1358" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416a1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416a1530"/>
        <function-ref name="getPayload" scoped="" ref="0x416a1610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416a16f0"/>
        <function-ref name="cancel" scoped="" ref="0x416a17d0"/>
        <function-ref name="sendDone" scoped="" ref="0x416a18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416a19f0" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416a19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416a1bc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x416a1ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x416a1d88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416a1e68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416a0150" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416a0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416a0328"/>
        <function-ref name="source" scoped="" ref="0x416a0408"/>
        <function-ref name="address" scoped="" ref="0x416a04e8"/>
        <function-ref name="destination" scoped="" ref="0x416a05c8"/>
        <function-ref name="setSource" scoped="" ref="0x416a06a8"/>
        <function-ref name="setDestination" scoped="" ref="0x416a0788"/>
        <function-ref name="type" scoped="" ref="0x416a0868"/>
        <function-ref name="setType" scoped="" ref="0x416a0948"/>
        <function-ref name="isForMe" scoped="" ref="0x416a0a28"/>
        <function-ref name="setGroup" scoped="" ref="0x416a0b08"/>
        <function-ref name="localGroup" scoped="" ref="0x416a0be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x416a0d48" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x416a0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x416a0f20"/>
        <function-ref name="noAck" scoped="" ref="0x4169f018"/>
        <function-ref name="wasAcked" scoped="" ref="0x4169f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4169de88" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4169de88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4169a070"/>
        <function-ref name="getPayload" scoped="" ref="0x4169a150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4169a230"/>
        <function-ref name="cancel" scoped="" ref="0x4169a310"/>
        <function-ref name="sendDone" scoped="" ref="0x4169a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4169a560" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4169a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4169a738"/>
        <function-ref name="getPayload" scoped="" ref="0x4169a818"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4169a8f8"/>
        <function-ref name="cancel" scoped="" ref="0x4169a9d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4169aab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4169abf8" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4169abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4169add0"/>
        <function-ref name="source" scoped="" ref="0x4169aeb0"/>
        <function-ref name="address" scoped="" ref="0x41698010"/>
        <function-ref name="destination" scoped="" ref="0x416980f0"/>
        <function-ref name="setSource" scoped="" ref="0x416981d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416982b0"/>
        <function-ref name="type" scoped="" ref="0x41698390"/>
        <function-ref name="setType" scoped="" ref="0x41698470"/>
        <function-ref name="isForMe" scoped="" ref="0x41698550"/>
        <function-ref name="setGroup" scoped="" ref="0x41698630"/>
        <function-ref name="localGroup" scoped="" ref="0x41698710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411cf150" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411cf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411cf328"/>
        <function-ref name="payloadLength" scoped="" ref="0x411cf408"/>
        <function-ref name="getPayload" scoped="" ref="0x411cf4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411cf5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411cf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411d0db8" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411d0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411cf7e8" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411cf7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411cf9c0"/>
        <function-ref name="source" scoped="" ref="0x411cfaa0"/>
        <function-ref name="address" scoped="" ref="0x411cfb80"/>
        <function-ref name="destination" scoped="" ref="0x411cfc60"/>
        <function-ref name="setSource" scoped="" ref="0x411cfd40"/>
        <function-ref name="setDestination" scoped="" ref="0x411cfe20"/>
        <function-ref name="type" scoped="" ref="0x411cff00"/>
        <function-ref name="setType" scoped="" ref="0x411ce010"/>
        <function-ref name="isForMe" scoped="" ref="0x411ce0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411ce1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411cd958" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411cd958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411cdb30"/>
        <function-ref name="getPayload" scoped="" ref="0x411cdc10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411cdcf0"/>
        <function-ref name="cancel" scoped="" ref="0x411cddd0"/>
        <function-ref name="sendDone" scoped="" ref="0x411cdeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411cc010" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411cc1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x411cc2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x411cc3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411cc488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411cc568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411cc6a8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411cc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411cc880"/>
        <function-ref name="source" scoped="" ref="0x411cc960"/>
        <function-ref name="address" scoped="" ref="0x411cca40"/>
        <function-ref name="destination" scoped="" ref="0x411ccb20"/>
        <function-ref name="setSource" scoped="" ref="0x411ccc00"/>
        <function-ref name="setDestination" scoped="" ref="0x411ccce0"/>
        <function-ref name="type" scoped="" ref="0x411ccdc0"/>
        <function-ref name="setType" scoped="" ref="0x411ccea0"/>
        <function-ref name="isForMe" scoped="" ref="0x411cb010"/>
        <function-ref name="setGroup" scoped="" ref="0x411cb0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411cb330" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411cb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411cb508"/>
        <function-ref name="noAck" scoped="" ref="0x411cb5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411cb6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416de200" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416de200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416de3d8"/>
        <function-ref name="getPayload" scoped="" ref="0x416de4b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416de598"/>
        <function-ref name="cancel" scoped="" ref="0x416de678"/>
        <function-ref name="sendDone" scoped="" ref="0x416de758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416de898" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416de898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416dea70"/>
        <function-ref name="payloadLength" scoped="" ref="0x416deb50"/>
        <function-ref name="getPayload" scoped="" ref="0x416dec30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416ded10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416dedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416dd010" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416dd1e8"/>
        <function-ref name="source" scoped="" ref="0x416dd2c8"/>
        <function-ref name="address" scoped="" ref="0x416dd3a8"/>
        <function-ref name="destination" scoped="" ref="0x416dd488"/>
        <function-ref name="setSource" scoped="" ref="0x416dd568"/>
        <function-ref name="setDestination" scoped="" ref="0x416dd648"/>
        <function-ref name="type" scoped="" ref="0x416dd728"/>
        <function-ref name="setType" scoped="" ref="0x416dd808"/>
        <function-ref name="isForMe" scoped="" ref="0x416dd8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x416dd9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x416ddaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x416ddc08" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x416ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x416ddde0"/>
        <function-ref name="noAck" scoped="" ref="0x416ddec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x416db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416d9da0" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416d9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416d6010"/>
        <function-ref name="getPayload" scoped="" ref="0x416d60f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416d61d0"/>
        <function-ref name="cancel" scoped="" ref="0x416d62b0"/>
        <function-ref name="sendDone" scoped="" ref="0x416d6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416d6500" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416d6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416d66d8"/>
        <function-ref name="getPayload" scoped="" ref="0x416d67b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416d6898"/>
        <function-ref name="cancel" scoped="" ref="0x416d6978"/>
        <function-ref name="sendDone" scoped="" ref="0x416d6a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416d6b98" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416d6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416d6d70"/>
        <function-ref name="source" scoped="" ref="0x416d6e50"/>
        <function-ref name="address" scoped="" ref="0x416d5010"/>
        <function-ref name="destination" scoped="" ref="0x416d50f0"/>
        <function-ref name="setSource" scoped="" ref="0x416d51d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416d52b0"/>
        <function-ref name="type" scoped="" ref="0x416d5390"/>
        <function-ref name="setType" scoped="" ref="0x416d5470"/>
        <function-ref name="isForMe" scoped="" ref="0x416d5550"/>
        <function-ref name="setGroup" scoped="" ref="0x416d5630"/>
        <function-ref name="localGroup" scoped="" ref="0x416d5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411c91c0" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411c91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411c9398"/>
        <function-ref name="payloadLength" scoped="" ref="0x411c9478"/>
        <function-ref name="getPayload" scoped="" ref="0x411c9558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411c9638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411c9718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411cae90" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411cae90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411c9080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411c9858" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411c9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411c9a30"/>
        <function-ref name="source" scoped="" ref="0x411c9b10"/>
        <function-ref name="address" scoped="" ref="0x411c9bf0"/>
        <function-ref name="destination" scoped="" ref="0x411c9cd0"/>
        <function-ref name="setSource" scoped="" ref="0x411c9db0"/>
        <function-ref name="setDestination" scoped="" ref="0x411c9e90"/>
        <function-ref name="type" scoped="" ref="0x411c8010"/>
        <function-ref name="setType" scoped="" ref="0x411c80f0"/>
        <function-ref name="isForMe" scoped="" ref="0x411c81d0"/>
        <function-ref name="setGroup" scoped="" ref="0x411c82b0"/>
        <function-ref name="localGroup" scoped="" ref="0x411c8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x412532d0" loc="51:./net/drip/DisseminatorC.nc">
      <component-ref qname="SerialToDisseminationC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x412532d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x412538f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x412543d8" loc="50:./net/drip/DisseminatorC.nc">
      <component-ref qname="SerialToDisseminationC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x412543d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41253010"/>
        <function-ref name="get" scoped="" ref="0x41254a20"/>
        <function-ref name="set" scoped="" ref="0x41254c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x416c4750" loc="62:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x416c4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416c4928"/>
        <function-ref name="runTask" scoped="" ref="0x416c4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x416c5010" loc="50:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x416c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x416c52c8"/>
        <function-ref name="storeData" scoped="" ref="0x416c5648"/>
        <function-ref name="newData" scoped="" ref="0x416c53a8"/>
        <function-ref name="start" scoped="" ref="0x416c5488"/>
        <function-ref name="requestSeqno" scoped="" ref="0x416c5568"/>
        <function-ref name="stop" scoped="" ref="0x416c51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x416c7650" loc="49:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x416c7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x416c7c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x416c57a8" loc="52:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x416c57a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x416c5980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x416c5a60"/>
        <function-ref name="led1On" scoped="" ref="0x416c5b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x416c5c20"/>
        <function-ref name="led3Off" scoped="" ref="0x416c5d00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x416c5de0"/>
        <function-ref name="get" scoped="" ref="0x416c5ec0"/>
        <function-ref name="led1Off" scoped="" ref="0x416c4010"/>
        <function-ref name="led3Toggle" scoped="" ref="0x416c40f0"/>
        <function-ref name="led3On" scoped="" ref="0x416c41d0"/>
        <function-ref name="led0On" scoped="" ref="0x416c42b0"/>
        <function-ref name="led2Off" scoped="" ref="0x416c4390"/>
        <function-ref name="led2On" scoped="" ref="0x416c4470"/>
        <function-ref name="set" scoped="" ref="0x416c45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x416c8808" loc="48:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x416c8808"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x411424f8"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x41141010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x416c7390"/>
        <function-ref name="get" scoped="" ref="0x416c8e50"/>
        <function-ref name="set" scoped="" ref="0x416c70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x416c8360" loc="46:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x416c8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416c8538"/>
        <function-ref name="stop" scoped="" ref="0x416c8618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x411e7a90" loc="45:./net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411e7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411e7c68"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411e7d48"/>
        <function-ref name="reset" scoped="" ref="0x411e7e28"/>
        <function-ref name="start" scoped="" ref="0x411e7f08"/>
        <function-ref name="stop" scoped="" ref="0x411e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41255048" loc="47:./net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41255048"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41255230"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41255310"/>
        <function-ref name="reset" scoped="" ref="0x412553f0"/>
        <function-ref name="start" scoped="" ref="0x412554d0"/>
        <function-ref name="stop" scoped="" ref="0x412555b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41707778" loc="54:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41707778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41707950"/>
        <function-ref name="clear" scoped="" ref="0x41707a30"/>
        <function-ref name="toggle" scoped="" ref="0x41707b10"/>
        <function-ref name="get" scoped="" ref="0x41707bf0"/>
        <function-ref name="assign" scoped="" ref="0x41707cd0"/>
        <function-ref name="setAll" scoped="" ref="0x41707db0"/>
        <function-ref name="set" scoped="" ref="0x41707e90"/>
        <function-ref name="size" scoped="" ref="0x41706010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41706170" loc="55:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41706170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41706348"/>
        <function-ref name="clear" scoped="" ref="0x41706428"/>
        <function-ref name="toggle" scoped="" ref="0x41706508"/>
        <function-ref name="get" scoped="" ref="0x417065e8"/>
        <function-ref name="assign" scoped="" ref="0x417066c8"/>
        <function-ref name="setAll" scoped="" ref="0x417067a8"/>
        <function-ref name="set" scoped="" ref="0x41706888"/>
        <function-ref name="size" scoped="" ref="0x41706968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41706aa8" loc="56:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41706aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41706c80"/>
        <function-ref name="rand32" scoped="" ref="0x41706d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x4170ada0" loc="50:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4170ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41709010"/>
        <function-ref name="incrementCounter" scoped="" ref="0x417090f0"/>
        <function-ref name="reset" scoped="" ref="0x417091d0"/>
        <function-ref name="start" scoped="" ref="0x417092b0"/>
        <function-ref name="stop" scoped="" ref="0x41709390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4170a9f0" loc="49:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4170a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4170abc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41704e20" loc="146:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41704e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41703010"/>
        <function-ref name="runTask" scoped="" ref="0x417030f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41706ea0" loc="57:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41706ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417040c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x417041a0"/>
        <function-ref name="led1On" scoped="" ref="0x41704280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41704360"/>
        <function-ref name="led3Off" scoped="" ref="0x41704440"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41704520"/>
        <function-ref name="get" scoped="" ref="0x41704600"/>
        <function-ref name="led1Off" scoped="" ref="0x417046e0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x417047c0"/>
        <function-ref name="led3On" scoped="" ref="0x417048a0"/>
        <function-ref name="led0On" scoped="" ref="0x41704980"/>
        <function-ref name="led2Off" scoped="" ref="0x41704a60"/>
        <function-ref name="led2On" scoped="" ref="0x41704b40"/>
        <function-ref name="set" scoped="" ref="0x41704ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41709590" loc="53:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41709590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41707098"/>
        <function-ref name="fired" scoped="" ref="0x41708330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41708a38"/>
        <function-ref name="isOneShot" scoped="" ref="0x417087e0"/>
        <function-ref name="getdt" scoped="" ref="0x41707548"/>
        <function-ref name="gett0" scoped="" ref="0x417072f0"/>
        <function-ref name="isRunning" scoped="" ref="0x41708588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41709bb8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41708d58"/>
        <function-ref name="startOneShot" scoped="" ref="0x41709e38"/>
        <function-ref name="stop" scoped="" ref="0x417080d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41702ab8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41702ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41700650"/>
        <function-ref name="fired" scoped="" ref="0x41701858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41700010"/>
        <function-ref name="isOneShot" scoped="" ref="0x41701d08"/>
        <function-ref name="getdt" scoped="" ref="0x41700b00"/>
        <function-ref name="gett0" scoped="" ref="0x417008a8"/>
        <function-ref name="isRunning" scoped="" ref="0x41701ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41701100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41700330"/>
        <function-ref name="startOneShot" scoped="" ref="0x41701380"/>
        <function-ref name="stop" scoped="" ref="0x41701600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416ff800" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416ff800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416ff9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x416ffb38" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x416ffb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x416ffd10"/>
        <function-ref name="clear" scoped="" ref="0x416ffdf0"/>
        <function-ref name="toggle" scoped="" ref="0x416ffed0"/>
        <function-ref name="get" scoped="" ref="0x416fe010"/>
        <function-ref name="assign" scoped="" ref="0x416fe0f0"/>
        <function-ref name="setAll" scoped="" ref="0x416fe1d0"/>
        <function-ref name="set" scoped="" ref="0x416fe2b0"/>
        <function-ref name="size" scoped="" ref="0x416fe390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416fd010" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416fd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x416fd348" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x416fd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x416fd520"/>
        <function-ref name="clear" scoped="" ref="0x416fd600"/>
        <function-ref name="toggle" scoped="" ref="0x416fd6e0"/>
        <function-ref name="get" scoped="" ref="0x416fd7c0"/>
        <function-ref name="assign" scoped="" ref="0x416fd8a0"/>
        <function-ref name="setAll" scoped="" ref="0x416fd980"/>
        <function-ref name="set" scoped="" ref="0x416fda60"/>
        <function-ref name="size" scoped="" ref="0x416fdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommand" ref="0x41252d18" loc="3:./Command/RunCommandC.nc">
      <component-ref qname="RunCommandC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommand" scoped="" ref="0x41252d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RunCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="exec" scoped="" ref="0x41252ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommandControl" ref="0x4124f198" loc="4:./Command/RunCommandC.nc">
      <component-ref qname="RunCommandC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommandControl" scoped="" ref="0x4124f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4124f370"/>
        <function-ref name="stop" scoped="" ref="0x4124f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommand" ref="0x4124cc88" loc="7:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommand" scoped="" ref="0x4124cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RunCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="exec" scoped="" ref="0x4124ce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RealExeControl" ref="0x4124b110" loc="10:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RealExeControl" scoped="" ref="0x4124b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4124b2e8"/>
        <function-ref name="stop" scoped="" ref="0x4124b3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommandControl" ref="0x4124c828" loc="6:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommandControl" scoped="" ref="0x4124c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4124ca00"/>
        <function-ref name="stop" scoped="" ref="0x4124cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4124a6d8" loc="12:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4124a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4124a8b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4124a990"/>
        <function-ref name="led1On" scoped="" ref="0x4124aa70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4124ab50"/>
        <function-ref name="led3Off" scoped="" ref="0x4124ac30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4124ad10"/>
        <function-ref name="get" scoped="" ref="0x4124adf0"/>
        <function-ref name="led1Off" scoped="" ref="0x4124aed0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41249010"/>
        <function-ref name="led3On" scoped="" ref="0x412490f0"/>
        <function-ref name="led0On" scoped="" ref="0x412491d0"/>
        <function-ref name="led2Off" scoped="" ref="0x412492b0"/>
        <function-ref name="led2On" scoped="" ref="0x41249390"/>
        <function-ref name="set" scoped="" ref="0x412494f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Execute" ref="0x4124a010" loc="11:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Execute" scoped="" ref="0x4124a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Execute"/>
      </instance>
      <interface-functions>
        <function-ref name="GpioControl" scoped="" ref="0x4124a1e8"/>
        <function-ref name="LedToggle" scoped="" ref="0x4124a2c8"/>
        <function-ref name="Ping" scoped="" ref="0x4124a3a8"/>
        <function-ref name="Reboot" scoped="" ref="0x4124a488"/>
        <function-ref name="GetNetInfo" scoped="" ref="0x4124a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RealExeControl" ref="0x41284628" loc="4:./Command/RealExeC.nc">
      <component-ref qname="RealExeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RealExeControl" scoped="" ref="0x41284628"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41284800"/>
        <function-ref name="stop" scoped="" ref="0x412848e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Execute" ref="0x4124ee50" loc="3:./Command/RealExeC.nc">
      <component-ref qname="RealExeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Execute" scoped="" ref="0x4124ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Execute"/>
      </instance>
      <interface-functions>
        <function-ref name="GpioControl" scoped="" ref="0x41284050"/>
        <function-ref name="LedToggle" scoped="" ref="0x41284130"/>
        <function-ref name="Ping" scoped="" ref="0x41284210"/>
        <function-ref name="Reboot" scoped="" ref="0x412842f0"/>
        <function-ref name="GetNetInfo" scoped="" ref="0x412843d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x41275b90" loc="28:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x41275b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41274308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4127d508" loc="21:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4127d508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4127d6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x4127d7c0"/>
        <function-ref name="start" scoped="" ref="0x4127d8a0"/>
        <function-ref name="stop" scoped="" ref="0x4127d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPing" ref="0x4126db30" loc="60:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendPing" scoped="" ref="0x4126db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4126dd08"/>
        <function-ref name="runTask" scoped="" ref="0x4126dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RealExeControl" ref="0x41280428" loc="6:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RealExeControl" scoped="" ref="0x41280428"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41280600"/>
        <function-ref name="stop" scoped="" ref="0x412806e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x41269718" loc="76:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x41269718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412698f0"/>
        <function-ref name="runTask" scoped="" ref="0x412699d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4127f940" loc="14:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4127f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4127fb18"/>
        <function-ref name="stopDone" scoped="" ref="0x4127fbf8"/>
        <function-ref name="start" scoped="" ref="0x4127fcd8"/>
        <function-ref name="stop" scoped="" ref="0x4127fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x412790c8" loc="24:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x412790c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412781b8"/>
        <function-ref name="maxSize" scoped="" ref="0x41279ba0"/>
        <function-ref name="empty" scoped="" ref="0x412796f0"/>
        <function-ref name="put" scoped="" ref="0x41279df8"/>
        <function-ref name="size" scoped="" ref="0x41279948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x4127db88" loc="22:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x4127db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4127dd60"/>
        <function-ref name="getPayload" scoped="" ref="0x4127de40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127df20"/>
        <function-ref name="cancel" scoped="" ref="0x4127c018"/>
        <function-ref name="sendDone" scoped="" ref="0x4127c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x4127e030" loc="15:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x4127e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4127e208"/>
        <function-ref name="stop" scoped="" ref="0x4127e2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseSend" ref="0x4127e4f8" loc="16:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseSend" scoped="" ref="0x4127e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4127e6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4127e7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127e890"/>
        <function-ref name="cancel" scoped="" ref="0x4127e970"/>
        <function-ref name="sendDone" scoped="" ref="0x4127ea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41280890" loc="9:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41280890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41280a68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41280b48"/>
        <function-ref name="led1On" scoped="" ref="0x41280c28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41280d08"/>
        <function-ref name="led3Off" scoped="" ref="0x41280de8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41280ec8"/>
        <function-ref name="get" scoped="" ref="0x4127f010"/>
        <function-ref name="led1Off" scoped="" ref="0x4127f0f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4127f1d0"/>
        <function-ref name="led3On" scoped="" ref="0x4127f2b0"/>
        <function-ref name="led0On" scoped="" ref="0x4127f390"/>
        <function-ref name="led2Off" scoped="" ref="0x4127f470"/>
        <function-ref name="led2On" scoped="" ref="0x4127f550"/>
        <function-ref name="set" scoped="" ref="0x4127f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseReceive" ref="0x4127ec90" loc="17:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseReceive" scoped="" ref="0x4127ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4127ee68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseSnoop" ref="0x4127d0b8" loc="18:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseSnoop" scoped="" ref="0x4127d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4127d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Execute" ref="0x41281bc8" loc="5:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Execute" scoped="" ref="0x41281bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Execute"/>
      </instance>
      <interface-functions>
        <function-ref name="GpioControl" scoped="" ref="0x41281da0"/>
        <function-ref name="LedToggle" scoped="" ref="0x41281e80"/>
        <function-ref name="Ping" scoped="" ref="0x41280010"/>
        <function-ref name="Reboot" scoped="" ref="0x412800f0"/>
        <function-ref name="GetNetInfo" scoped="" ref="0x412801d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x4127c400" loc="23:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x4127c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4127b150"/>
        <function-ref name="enqueue" scoped="" ref="0x4127b830"/>
        <function-ref name="element" scoped="" ref="0x4127bb80"/>
        <function-ref name="maxSize" scoped="" ref="0x4127ced8"/>
        <function-ref name="dequeue" scoped="" ref="0x4127b4c0"/>
        <function-ref name="empty" scoped="" ref="0x4127ca28"/>
        <function-ref name="size" scoped="" ref="0x4127cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41278648" loc="26:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41278648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41275248"/>
        <function-ref name="fired" scoped="" ref="0x412774e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41277bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41277998"/>
        <function-ref name="getdt" scoped="" ref="0x412756f8"/>
        <function-ref name="gett0" scoped="" ref="0x412754a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41277740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41278cf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41277f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x41277010"/>
        <function-ref name="stop" scoped="" ref="0x41277290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4128fea8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="RealExeC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4128fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4128c9a8"/>
        <function-ref name="fired" scoped="" ref="0x4128ec40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4128c368"/>
        <function-ref name="isOneShot" scoped="" ref="0x4128c110"/>
        <function-ref name="getdt" scoped="" ref="0x4128ce58"/>
        <function-ref name="gett0" scoped="" ref="0x4128cc00"/>
        <function-ref name="isRunning" scoped="" ref="0x4128ee98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4128e4e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4128c688"/>
        <function-ref name="startOneShot" scoped="" ref="0x4128e768"/>
        <function-ref name="stop" scoped="" ref="0x4128e9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412893f0" loc="46:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412895c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x412896a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41289788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41289868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41289948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4128ace8" loc="45:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4128ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4128aec0"/>
        <function-ref name="getPayload" scoped="" ref="0x41289010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412890f0"/>
        <function-ref name="cancel" scoped="" ref="0x412891d0"/>
        <function-ref name="sendDone" scoped="" ref="0x412892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4171de60" loc="38:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4171de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4171c050"/>
        <function-ref name="payloadLength" scoped="" ref="0x4171c130"/>
        <function-ref name="getPayload" scoped="" ref="0x4171c210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4171c2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4171c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4171d7c8" loc="37:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4171d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4171d9a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4171da80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4171db60"/>
        <function-ref name="cancel" scoped="" ref="0x4171dc40"/>
        <function-ref name="sendDone" scoped="" ref="0x4171dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x4171bf10" loc="46:./net/CollectionIdP.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x4171bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x41719108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41287a60" loc="49:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41287a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41287c38"/>
        <function-ref name="getPayload" scoped="" ref="0x41287d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41287df8"/>
        <function-ref name="cancel" scoped="" ref="0x41287ed8"/>
        <function-ref name="sendDone" scoped="" ref="0x41286010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41286150" loc="50:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41286150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41286328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41286408"/>
        <function-ref name="getPayload" scoped="" ref="0x412864e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412865c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412866a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412867e8" loc="51:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412867e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412869c0"/>
        <function-ref name="source" scoped="" ref="0x41286aa0"/>
        <function-ref name="address" scoped="" ref="0x41286b80"/>
        <function-ref name="destination" scoped="" ref="0x41286c60"/>
        <function-ref name="setSource" scoped="" ref="0x41286d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41286e20"/>
        <function-ref name="type" scoped="" ref="0x41286f00"/>
        <function-ref name="setType" scoped="" ref="0x41285010"/>
        <function-ref name="isForMe" scoped="" ref="0x412850f0"/>
        <function-ref name="setGroup" scoped="" ref="0x412851d0"/>
        <function-ref name="localGroup" scoped="" ref="0x412852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41285410" loc="52:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41285410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412855e8"/>
        <function-ref name="noAck" scoped="" ref="0x412856c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x412857a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417151f0" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RealExeC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417151f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417153c8"/>
        <function-ref name="getPayload" scoped="" ref="0x417154a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41715588"/>
        <function-ref name="cancel" scoped="" ref="0x41715668"/>
        <function-ref name="sendDone" scoped="" ref="0x41715748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x417158b8" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RealExeC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417158b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41715a90"/>
        <function-ref name="getPayload" scoped="" ref="0x41715b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41715c50"/>
        <function-ref name="cancel" scoped="" ref="0x41715d30"/>
        <function-ref name="sendDone" scoped="" ref="0x41715e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4176a010" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RealExeC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4176a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4176a1e8"/>
        <function-ref name="source" scoped="" ref="0x4176a2c8"/>
        <function-ref name="address" scoped="" ref="0x4176a3a8"/>
        <function-ref name="destination" scoped="" ref="0x4176a488"/>
        <function-ref name="setSource" scoped="" ref="0x4176a568"/>
        <function-ref name="setDestination" scoped="" ref="0x4176a648"/>
        <function-ref name="type" scoped="" ref="0x4176a728"/>
        <function-ref name="setType" scoped="" ref="0x4176a808"/>
        <function-ref name="isForMe" scoped="" ref="0x4176a8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4176a9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4176aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x412c7278" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="RealExeC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x412c7278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412c53a0"/>
        <function-ref name="maxSize" scoped="" ref="0x412c7d50"/>
        <function-ref name="empty" scoped="" ref="0x412c78a0"/>
        <function-ref name="put" scoped="" ref="0x412c5010"/>
        <function-ref name="size" scoped="" ref="0x412c7af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x417609d0" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="RealExeC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x417609d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4175eaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x4175e4c0"/>
        <function-ref name="empty" scoped="" ref="0x4175e010"/>
        <function-ref name="put" scoped="" ref="0x4175e718"/>
        <function-ref name="size" scoped="" ref="0x4175e268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41760628" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="RealExeC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41760628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41760800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x412c4638" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="RealExeC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412c4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x412c3388"/>
        <function-ref name="enqueue" scoped="" ref="0x412c3a68"/>
        <function-ref name="element" scoped="" ref="0x412c3db8"/>
        <function-ref name="maxSize" scoped="" ref="0x412c3130"/>
        <function-ref name="dequeue" scoped="" ref="0x412c36f8"/>
        <function-ref name="empty" scoped="" ref="0x412c4c60"/>
        <function-ref name="size" scoped="" ref="0x412c4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412beb00" loc="46:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412beb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412becd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x412bedb8"/>
        <function-ref name="getPayload" scoped="" ref="0x412bee98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412bd010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412be468" loc="45:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412be468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412be640"/>
        <function-ref name="getPayload" scoped="" ref="0x412be720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412be800"/>
        <function-ref name="cancel" scoped="" ref="0x412be8e0"/>
        <function-ref name="sendDone" scoped="" ref="0x412be9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4174fe38" loc="38:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4174fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4174e050"/>
        <function-ref name="payloadLength" scoped="" ref="0x4174e130"/>
        <function-ref name="getPayload" scoped="" ref="0x4174e210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4174e2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4174e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4174f7a0" loc="37:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4174f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4174f978"/>
        <function-ref name="getPayload" scoped="" ref="0x4174fa58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4174fb38"/>
        <function-ref name="cancel" scoped="" ref="0x4174fc18"/>
        <function-ref name="sendDone" scoped="" ref="0x4174fcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x4174df20" loc="46:./net/CollectionIdP.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x4174df20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x4174b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x412bc768" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialToDisseminationC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x412bc768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412b9330"/>
        <function-ref name="fired" scoped="" ref="0x412bb520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412bbc28"/>
        <function-ref name="isOneShot" scoped="" ref="0x412bb9d0"/>
        <function-ref name="getdt" scoped="" ref="0x412b97e0"/>
        <function-ref name="gett0" scoped="" ref="0x412b9588"/>
        <function-ref name="isRunning" scoped="" ref="0x412bb778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412bcd90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x412b9010"/>
        <function-ref name="startOneShot" scoped="" ref="0x412bb048"/>
        <function-ref name="stop" scoped="" ref="0x412bb2c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404279d0" loc="62:/opt/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40420dd0" loc="60:/opt/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4042cb40" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4042c9e8" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4042d158" loc="31:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4042d790" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4042d638" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4042de58" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4042dd00" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4042c440" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046b010" loc="44:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046b3f8" loc="45:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046c838" loc="42:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4046bbc8" loc="47:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046cbf8" loc="43:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4046b7d0" loc="46:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4046c0f8" loc="40:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4046c488" loc="41:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404e7738" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e75e0" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404f4730" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404f45d8" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404eaee8" loc="104:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404e7c48" loc="130:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40332888" loc="67:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40332da0" loc="75:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x404f2478" loc="68:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x404f2018" loc="61:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x404e9bf0" loc="54:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x404e9688" loc="53:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x40506538" loc="43:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40506158" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x405050c8" loc="54:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x405054d8" loc="57:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405068f0" loc="46:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40505e48" loc="65:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40505cf0" loc="65:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40506cc0" loc="51:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x405042c0" loc="70:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x405058f8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40537378" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40538de8" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40537030" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40537210" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40534010" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40541bd0" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40541db0" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40541670" loc="123:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40535058" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40537ec0" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40535d48" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405359f0" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40535be8" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40522b98" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40522a40" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40548580" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40548428" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40547508" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405471a8" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40547388" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4053bba0" loc="106:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4053b208" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40548ea0" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4053b0a8" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40523ea8" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40523960" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40523b40" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40523d20" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/opt/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40411438" loc="63:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40411880" loc="69:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40411d00" loc="74:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40410580" loc="85:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40418b40" loc="113:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40418298" loc="102:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404174b8" loc="134:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40410138" loc="79:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40417010" loc="119:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40418718" loc="108:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40411010" loc="58:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40410e28" loc="96:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40410a00" loc="91:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40417c30" loc="149:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40417ad8" loc="149:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40555398" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40555240" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40555e90" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40555d38" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40554950" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405547f8" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4054b648" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054b4f0" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40543010" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40544e20" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40540e80" loc="68:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40544578" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40544420" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4054f8f8" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054f590" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4054f798" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40543bf8" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40543890" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40543a98" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4054d010" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054eea0" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4054db48" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054d818" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4054d9e8" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4054e4c0" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054e368" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4054c370" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054c010" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4054c210" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4054cbe8" loc="195:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4055de88" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055db48" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055dd28" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40559a18" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405596b8" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40559898" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40559158" loc="112:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4055ab38" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055a9e0" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40558820" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405584c8" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405586c0" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40591d28" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591998" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40591bc8" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40594a78" loc="15:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40591388" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591010" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40591228" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405b6e58" loc="95:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b13c0" loc="105:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x405b0590" loc="54:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x405b0158" loc="49:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x405ac9a8" loc="56:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x405b5698" loc="72:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x405b4790" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b4638" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x405b5bc0" loc="79:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x405b5168" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b5010" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x405b4c98" loc="100:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x405b4138" loc="85:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x405ab798" loc="71:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x405abd60" loc="81:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x405ab188" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x405ab030" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x405aa4c0" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405aa368" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x405ad8a0" loc="62:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x405a8168" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a8010" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x405a8800" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405a86a8" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40656940" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406565f0" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406567e0" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40664cf0" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40664b98" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40663530" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406631e0" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406633d0" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40664158" loc="65:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406623c8" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40663e58" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40662068" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40662260" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406646e0" loc="72:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406657f0" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406652a0" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40665490" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40665688" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4067aa68" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4067a910" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40677378" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40677010" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40677218" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40674b78" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40674b78"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40674ce0" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40674ce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406851d8" loc="64:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40674ce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40685c00" loc="76:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40685700" loc="71:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40684018" loc="82:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x4067c720" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x4067feb8" loc="42:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x4068fd08" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4068fbb0" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x4068f408" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x4067f640" loc="40:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x4067fa80" loc="41:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x4067c320" loc="43:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x4067cb20" loc="45:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x4068f058" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4067ced0" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x4068f7d8" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40414af0" loc="62:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403e6470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40331ec8" loc="52:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403f7a90" loc="76:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40718d10" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40729490" loc="72:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40729338" loc="72:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4072a010" loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4072b230" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d10"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4072a3c8" loc="56:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x407298a0" loc="75:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4072bb58" loc="49:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4072af20" loc="67:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4072b770" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4072b618" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d10"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4072a790" loc="61:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4072ab40" loc="64:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4073d470" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d470"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4074eae0" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4074e988" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40739668" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40739288" loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4073d968" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d470"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40739a20" loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4074eef0" loc="73:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4074e588" loc="65:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4073dea8" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d470"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4073dd50" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d470"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40739de8" loc="59:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4074e1a8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x4072fac8" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fac8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4073f188" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4073f030" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40741cf8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40741918" loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4073f960" loc="78:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40741010" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fac8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407400c8" loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4073f598" loc="73:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40740c20" loc="65:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40741550" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fac8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407413f8" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fac8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40740490" loc="59:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40740840" loc="62:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4032c010" loc="57:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4032c918" loc="72:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4032c450" loc="65:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensorControl" loc="1:./Sensor/SensorControl.nc">
      <function command="" provided="0" name="oneShotTimer" ref="0x4080d4c0" loc="11:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x4080d368" loc="11:./Sensor/SensorControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTimer" ref="0x407f8ea8" loc="8:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x407f8d50" loc="8:./Sensor/SensorControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407f88b8" loc="4:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodeInfo" ref="0x407f8760" loc="4:./Sensor/SensorControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4080d898" loc="14:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4080b360" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4080b360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40807a80" loc="136:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4080a908" loc="83:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40808a60" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40808718" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40808900" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40808270" loc="98:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40806460" loc="151:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40807ec8" loc="144:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4080ad98" loc="92:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4080b9b8" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4080b860" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40807460" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40807118" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40807300" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4080a088" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4080bef8" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4080a558" loc="78:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="9:./ds2411/ReadId48.nc">
      <documentation loc="5:./ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4081c168" loc="12:./ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4081c010" loc="12:./ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BaseControl" loc="1:./Sensor/BaseControl.nc">
      <function command="" provided="0" name="oneShotTimer" ref="0x40810600" loc="11:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x408104a8" loc="11:./Sensor/BaseControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTimer" ref="0x40810010" loc="8:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x407f9e88" loc="8:./Sensor/BaseControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407f99f0" loc="4:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodeInfo" ref="0x407f9898" loc="4:./Sensor/BaseControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408109d8" loc="14:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408243b8" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408243b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40824520" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x408227d8" loc="109:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408234d0" loc="78:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40822190" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40823e20" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40822030" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40823918" loc="88:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40822c68" loc="116:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40824b50" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408249f8" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40824520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40823070" loc="73:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireStream" loc="9:./ds2411/OneWireStream.nc">
      <documentation loc="5:./ds2411/OneWireStream.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40955920" loc="10:./ds2411/OneWireStream.nc">
        <interfacedef-ref qname="OneWireStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x409553d8" loc="10:./ds2411/OneWireStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x409555d8" loc="10:./ds2411/OneWireStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409557b8" loc="10:./ds2411/OneWireStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40954098" loc="11:./ds2411/OneWireStream.nc">
        <interfacedef-ref qname="OneWireStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40955d48" loc="11:./ds2411/OneWireStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40955f28" loc="11:./ds2411/OneWireStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:./net/RootControl.nc">
      <documentation loc="35:./net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x409913d0" loc="43:./net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x40979bd0" loc="41:./net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x40991010" loc="42:./net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:./net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40994c78" loc="50:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40994920" loc="50:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40994b18" loc="50:./net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40995170" loc="44:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40977d68" loc="44:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40995010" loc="44:./net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40995eb8" loc="47:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40995b30" loc="47:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40995d58" loc="47:./net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40977968" loc="43:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40977810" loc="43:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x409944d0" loc="49:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40994378" loc="49:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40995748" loc="46:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409955f0" loc="46:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4098dee0" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4098dee0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40989b70" loc="97:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4098dee0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4098adf0" loc="80:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4098a3a8" loc="61:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40989410" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4098dee0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x409892b8" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4098dee0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4098a8b8" loc="72:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40991d80" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40991d80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4098f010" loc="73:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40991d80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4098fec8" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40991d80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4098fd70" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40991d80"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40038840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40038840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x4098e7f8" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40991d80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4098e6a0" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40990b48" loc="65:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4098f6b8" loc="81:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40991d80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40990248" loc="50:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40990690" loc="58:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40a06850" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a06328" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40a06508" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a066e8" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="33:./net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40a18c30" loc="84:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a18ad8" loc="84:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x40a193b8" loc="71:./net/ctp/CtpInfo.nc">
        <documentation loc="68:./net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40a18648" loc="83:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x409f88b8" loc="59:./net/ctp/CtpInfo.nc">
        <documentation loc="54:./net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x409f82f8" loc="52:./net/ctp/CtpInfo.nc">
        <documentation loc="44:./net/ctp/CtpInfo.nc">
          <short>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.</short>
          <long>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.  The pointer is allocated by the&#10; caller.  If the parent is invalid, return FAIL (no info).  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x409f81a0" loc="52:./net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x409f8e08" loc="66:./net/ctp/CtpInfo.nc">
        <documentation loc="61:./net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x40a19bb8" loc="76:./net/ctp/CtpInfo.nc">
        <documentation loc="73:./net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a19850" loc="76:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x40a19a58" loc="76:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40a16800" loc="86:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a166a8" loc="86:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40a07c50" loc="42:./net/ctp/CtpInfo.nc">
        <documentation loc="35:./net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40a07af8" loc="42:./net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40a16258" loc="85:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a16100" loc="85:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x40a181e0" loc="81:./net/ctp/CtpInfo.nc">
        <documentation loc="78:./net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40a18088" loc="81:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:./net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40a05b38" loc="7:./net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40a14168" loc="14:./net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40a14010" loc="14:./net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Talk" loc="1:./Sensor/250Dummy/Talk.nc">
      <function command="" provided="0" name="get_s71" ref="0x40a134d8" loc="3:./Sensor/250Dummy/Talk.nc">
        <interfacedef-ref qname="Talk"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get_r71" ref="0x40a130f8" loc="2:./Sensor/250Dummy/Talk.nc">
        <interfacedef-ref qname="Talk"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:./net/ctp/CtpPacket.nc">
      <documentation loc="33:./net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007/11/28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x409fd688" loc="64:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409fd330" loc="64:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x409fd528" loc="64:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40a01170" loc="52:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a03da8" loc="52:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40a01010" loc="52:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40a00ae8" loc="58:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a00798" loc="58:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40a00988" loc="58:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x409ff8d0" loc="61:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ff568" loc="61:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x409ff770" loc="61:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40a03988" loc="49:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a035e8" loc="49:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40a03828" loc="49:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40a003b8" loc="57:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a00260" loc="57:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x409ff168" loc="60:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ff010" loc="60:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x409fc348" loc="67:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409fc010" loc="67:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x409fc1e8" loc="67:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40a031c8" loc="46:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a08e10" loc="46:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40a03068" loc="46:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x409fb380" loc="70:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x409fb010" loc="70:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x409fb220" loc="70:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40a016f0" loc="54:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a01598" loc="54:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x409ffec0" loc="63:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ffd68" loc="63:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x409fcb88" loc="69:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x409fc818" loc="69:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x409fca28" loc="69:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x409fdc10" loc="66:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409fdab8" loc="66:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40a01e10" loc="55:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a01ad0" loc="55:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40a01cb0" loc="55:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:./net/CollectionId.nc">
      <documentation loc="35:./net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40a121a8" loc="46:./net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40977010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="35:./net/4bitle/LinkEstimator.nc">
      <documentation loc="24:./net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2007/11/16 23:14:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x40a2aef8" loc="51:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a2ada0" loc="51:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40a2a368" loc="44:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a2a210" loc="44:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40a294c0" loc="55:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a29368" loc="55:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40a0bd40" loc="41:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a0bbe8" loc="41:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40a27010" loc="61:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a29e90" loc="61:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40a29a80" loc="58:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a29928" loc="58:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40a2a958" loc="47:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a2a800" loc="47:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40a0b748" loc="38:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40a0b5f0" loc="38:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40a1f028" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40a22ca0" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40a22eb8" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40a1bde0" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1ba48" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40a1bc80" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40a1a978" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1a820" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40a1b570" loc="57:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40a20da0" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40a20c48" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40a3b1c8" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a3b1c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a3b330" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a3b330"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40a33538" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a3b330"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a333e0" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40a34010" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a33e78" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40a3b9b8" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3b860" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a34ad0" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a3b330"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a34760" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40a34970" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a3b330"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40a39970" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a39818" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40a1ed90" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a1e9f8" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40a1ec30" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40a39020" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a38eb0" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40a38990" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a385f8" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40a38830" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40a372e0" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a37188" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40a45ec0" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40a45ec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40a431c0" loc="51:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a43068" loc="51:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a44b80" loc="46:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40a45ec0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a44a28" loc="46:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40a44560" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a44408" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a43968" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40a45ec0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a435f0" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40a43808" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40a45ec0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a5c010" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a5c010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40a5c4f0" loc="61:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40a45010" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40a49a68" loc="42:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40a49910" loc="42:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40a45498" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40a3c010" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3fdf0" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40a6cae8" loc="120:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40a6c1c8" loc="97:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40a50ba8" loc="88:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40a6c678" loc="102:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40a6b210" loc="128:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40a68168" loc="41:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a68010" loc="41:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40a6d540" loc="37:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40a6db40" loc="39:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6d9e8" loc="39:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40a67170" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a68d38" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a67010" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40a68938" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a68598" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a687d8" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40a67c90" loc="49:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a67b38" loc="49:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40a66418" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a66088" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40a662b8" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40a676e0" loc="47:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a67588" loc="47:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40a66858" loc="53:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a51d60" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40a51800" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40a51a18" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a51bf8" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40a6e190" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6fde0" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a6e010" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40a6f880" loc="110:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a4e870" loc="83:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4e718" loc="83:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a6f288" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4eef8" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40a6f128" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40a85090" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40a71b58" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a71a00" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40a87240" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a870e8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40a86010" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a87e48" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40a894b8" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a89360" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40a90700" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a905a8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40a89c50" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a898e8" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a89af0" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40a90ec8" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a90b60" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a90d68" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40a879c8" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a87668" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40a87868" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40a91b18" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40a8c138" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40a8b640" loc="65:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a8b4e8" loc="65:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40a8c7e8" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a8c690" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40a8cee0" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a8cd88" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40a97c30" loc="60:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40a973d0" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40a97278" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a97818" loc="55:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40a8ad18" loc="45:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40a960c8" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40a79d60" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a79c08" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40a72628" loc="86:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40a72170" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a73d88" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a72010" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40a74168" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a74010" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40a74830" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a746d8" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40a73190" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a74df0" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a73030" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40a76298" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40a76a90" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a76768" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a76930" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40a738a8" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a73750" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40aa07a0" loc="131:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa0648" loc="131:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40aa1970" loc="120:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa1818" loc="120:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40a84818" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a844c8" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x40a846b8" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x40a82bf8" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a82aa0" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40a9dc70" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9d910" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a9db10" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40a82560" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a82408" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40aa0190" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa1e28" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40aa0030" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40aa5b98" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aa5820" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40aa5a38" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40a9d498" loc="151:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9d340" loc="151:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40a84e80" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a84d28" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40aa4b80" loc="99:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa4a28" loc="99:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40aa44d0" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aa4158" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40aa4370" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40a9b3a8" loc="178:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40a9c2e0" loc="162:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9c188" loc="162:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40a9ced8" loc="173:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40a9ee20" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9eac0" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a9ecc0" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x40aa52e0" loc="81:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa5188" loc="81:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40aa1360" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa1010" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40aa1200" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40a9e010" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa0c38" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40aa0e28" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40a9b980" loc="185:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9b828" loc="185:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40aa23b0" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa2088" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40aa2250" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40a84010" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a85e40" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40a9c9f0" loc="168:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9c898" loc="168:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40a9e640" loc="141:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a9e4e8" loc="141:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40aa2a60" loc="110:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aa2908" loc="110:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40a93840" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a934e0" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40a936e0" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40a93cd8" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40a7a930" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a7a7d8" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40a93010" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a7ae20" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40a8f010" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a92e38" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40a928f8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a927a0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40a8f508" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40a8fbc0" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a8fa68" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40ab62e0" loc="70:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ab6188" loc="70:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40a95860" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a95708" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40a94608" loc="59:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40a94170" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a95d58" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a94010" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40a95168" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a95010" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40a94c88" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a94b30" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x40a78688" loc="47:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40a78188" loc="41:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a78030" loc="41:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40a78d68" loc="53:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a78c10" loc="53:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40a77450" loc="59:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a772f8" loc="59:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40ae6538" loc="59:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40ae6b08" loc="72:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40ae5158" loc="79:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40ae6138" loc="48:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40af1ee0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40af1d88" loc="46:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40b12010" loc="64:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b13e08" loc="64:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b13870" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b13518" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40b13710" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40b11010" loc="42:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b12e28" loc="42:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40b069a0" loc="50:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40b05258" loc="60:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40b06e10" loc="55:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40b064b0" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40b06148" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b06350" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40b659a0" loc="53:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40b61010" loc="61:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40b87b90" loc="65:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40b876d0" loc="59:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40b88268" loc="90:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40b88768" loc="98:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40b804d0" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b63e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b80378" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b63e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40b81158" loc="53:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40b81818" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b63e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b816c0" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b63e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40b81dc8" loc="70:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40b63e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40c514f0" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c51378" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40c54ce0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c54b88" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40c462c8" loc="57:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c46170" loc="57:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40c46748" loc="62:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c4b808" loc="46:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c4b6b0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c4bd50" loc="51:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c4bbf8" loc="51:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40c49220" loc="57:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c490c8" loc="57:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40c49ed0" loc="71:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40c49d78" loc="71:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40c498f0" loc="62:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c49798" loc="62:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40c485b8" loc="80:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c48460" loc="80:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40c4cb80" loc="49:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40c4ca28" loc="49:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40ca7c90" loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40ca4670" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40ca4cb8" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40ca4b60" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40ca3138" loc="69:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40ca41f0" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40ca35f0" loc="74:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40ca6658" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ca6500" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40ca13e8" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ca6dd0" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ca6c78" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40ce33e0" loc="52:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40ce7f28" loc="46:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40cfa8f8" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cfa8f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40cf6010" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cfa8f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40cfadf0" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cfa8f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40d10cc0" loc="55:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d10b68" loc="55:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40d13920" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d137c8" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40d10170" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d13d78" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40d10010" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40d10730" loc="50:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d105d8" loc="50:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40d207e0" loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d20688" loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40d201a8" loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40dd58b8" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40dd58b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40dd5a20" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40dd5a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40dd2058" loc="66:/opt/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40dd5a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40dd5ee0" loc="66:/opt/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40dd5a20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40e939b0" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e939b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40ec4010" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e939b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40e93e18" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e939b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40ec4a48" loc="65:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40ec45f8" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e939b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40ec44a0" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e939b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:./net/UnicastNameFreeRouting.nc">
      <documentation loc="35:./net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40e99578" loc="49:./net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40e99930" loc="51:./net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40e99090" loc="48:./net/UnicastNameFreeRouting.nc">
        <documentation loc="43:./net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40e99cc8" loc="52:./net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="39:./net/ctp/CompareBit.nc">
      <documentation loc="27:./net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2008/09/27 17:00:54 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40fb5010" loc="43:./net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fb6800" loc="43:./net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40fb6c88" loc="43:./net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fb6e68" loc="43:./net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:./net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:./net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009/09/21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x41078498" loc="51:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41078340" loc="51:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x41075590" loc="57:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41075240" loc="57:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x41075430" loc="57:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x4107ad30" loc="48:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4107a9b0" loc="48:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4107abd0" loc="48:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x41077c80" loc="56:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41077b28" loc="56:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x4107a3e8" loc="47:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4107a068" loc="47:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4107a288" loc="47:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x41077538" loc="54:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410771d0" loc="54:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x410773d8" loc="54:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x41078c08" loc="53:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41078ab0" loc="53:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x4107da90" loc="46:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4107d710" loc="46:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4107d930" loc="46:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409ecaa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RunCommand" loc="1:./Command/RunCommand.nc">
      <function command="" provided="0" name="exec" ref="0x41176170" loc="2:./Command/RunCommand.nc">
        <interfacedef-ref qname="RunCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x41179de8" loc="2:./Command/RunCommand.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41176010" loc="2:./Command/RunCommand.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:./net/DisseminationUpdate.nc">
      <documentation loc="25:./net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4117a240" loc="40:./net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4117a240"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x4117a9e8" loc="52:./net/DisseminationUpdate.nc">
        <documentation loc="41:./net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4117a240"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4117a890" loc="52:./net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4117a240"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:./net/DisseminationValue.nc">
      <documentation loc="25:./net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41141c20" loc="36:./net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41141c20"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x4117dbe8" loc="61:./net/DisseminationValue.nc">
        <documentation loc="58:./net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4117d0e8" loc="47:./net/DisseminationValue.nc">
        <documentation loc="38:./net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41141c20"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4117d728" loc="56:./net/DisseminationValue.nc">
        <documentation loc="49:./net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41141c20"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x4117d5d0" loc="56:./net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41141c20"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:./net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x411861c8" loc="82:./net/TrickleTimer.nc">
        <documentation loc="79:./net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x41187db0" loc="77:./net/TrickleTimer.nc">
        <documentation loc="74:./net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41187908" loc="72:./net/TrickleTimer.nc">
        <documentation loc="68:./net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x41187010" loc="60:./net/TrickleTimer.nc">
        <documentation loc="51:./net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x41187500" loc="66:./net/TrickleTimer.nc">
        <documentation loc="62:./net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:./net/drip/DisseminationCache.nc">
      <documentation loc="34:./net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x4118ba80" loc="47:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x4118b908" loc="47:./net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x4118a658" loc="48:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4118a0f8" loc="48:./net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x4118a2e8" loc="48:./net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x4118a4f0" loc="48:./net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x4118ae18" loc="50:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x4118b138" loc="45:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x4118aa80" loc="49:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x4118b500" loc="46:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x4121b8c8" loc="45:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x41217df8" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41217ca0" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x412163f0" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41216298" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41217298" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41217140" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x41216b98" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41216858" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41216a38" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x4121bca8" loc="50:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41217848" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x412176f0" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x41215038" loc="88:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Execute" loc="1:./Command/Execute.nc">
      <function command="" provided="0" name="GpioControl" ref="0x41247168" loc="4:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41247010" loc="4:./Command/Execute.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="LedToggle" ref="0x4124bb50" loc="2:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4124b9f8" loc="2:./Command/Execute.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Ping" ref="0x41247680" loc="6:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41247528" loc="6:./Command/Execute.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Reboot" ref="0x41247a10" loc="8:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="GetNetInfo" ref="0x41247dc8" loc="10:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
